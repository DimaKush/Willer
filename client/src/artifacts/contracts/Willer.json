{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "beneficiaries_",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares_",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "beneficiaryOfERC721_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime_",
          "type": "uint256"
        }
      ],
      "name": "addWill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokenERC20List",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC721[]",
          "name": "tokenERC721List",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC1155[]",
          "name": "tokenERC1155List",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "ERC721tokenIdLists",
          "type": "uint256[][]"
        },
        {
          "internalType": "uint256[][]",
          "name": "ERC1155tokenIdLists",
          "type": "uint256[][]"
        }
      ],
      "name": "batchRelease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC1155",
          "name": "tokenERC1155",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIdLists",
          "type": "uint256[]"
        }
      ],
      "name": "batchReleaseERC1155",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC1155",
          "name": "tokenERC1155",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenIdLists",
          "type": "uint256[]"
        }
      ],
      "name": "batchReleaseERC1155ToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokenERC20List",
          "type": "address[]"
        }
      ],
      "name": "batchReleaseERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokenERC20List",
          "type": "address[]"
        }
      ],
      "name": "batchReleaseERC20ToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC721[]",
          "name": "tokenERC721List",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "tokenIdLists",
          "type": "uint256[][]"
        }
      ],
      "name": "batchReleaseERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC721[]",
          "name": "tokenERC721List",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "tokenIdLists",
          "type": "uint256[][]"
        }
      ],
      "name": "batchReleaseERC721ToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokenERC20List",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC721[]",
          "name": "tokenERC721List",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC1155[]",
          "name": "tokenERC1155List",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "ERC721tokenIdLists",
          "type": "uint256[][]"
        },
        {
          "internalType": "uint256[][]",
          "name": "ERC1155tokenIdLists",
          "type": "uint256[][]"
        }
      ],
      "name": "batchReleaseToTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        }
      ],
      "name": "getBeneficiaries",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testator",
          "type": "address"
        }
      ],
      "name": "getBeneficiaryOfERC721",
      "outputs": [
        {
          "internalType": "address",
          "name": "beneficiaryOfERC721",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBuffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaxShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReapDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        }
      ],
      "name": "getReleaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        }
      ],
      "name": "getShares",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "testator",
          "type": "address"
        }
      ],
      "name": "getSumShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTreasuryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "newBeneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "newShares",
          "type": "uint256[]"
        }
      ],
      "name": "setNewBeneficiaries",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newBeneficiaryOfERC721",
          "type": "address"
        }
      ],
      "name": "setNewBeneficiaryOfERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReleaseTime",
          "type": "uint256"
        }
      ],
      "name": "setNewReleaseTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasuryAddress",
          "type": "address"
        }
      ],
      "name": "setTreasuryAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/access/Ownable.sol",
    "1": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/security/ReentrancyGuard.sol",
    "10": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/math/Math.sol",
    "11": "contracts/Willer.sol",
    "2": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC1155/IERC1155.sol",
    "3": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/IERC20.sol",
    "4": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "5": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/utils/SafeERC20.sol",
    "6": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721.sol",
    "7": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Address.sol",
    "8": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Context.sol",
    "9": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/Willer.sol",
    "exportedSymbols": {
      "Address": [
        3491
      ],
      "Context": [
        3113
      ],
      "IERC1155": [
        1751
      ],
      "IERC165": [
        3125
      ],
      "IERC20": [
        1829
      ],
      "IERC20Permit": [
        3161
      ],
      "IERC721": [
        2226
      ],
      "Math": [
        3091
      ],
      "Ownable": [
        1575
      ],
      "ReentrancyGuard": [
        1629
      ],
      "SafeERC20": [
        2110
      ],
      "Willer": [
        1462
      ]
    },
    "id": 1463,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:11"
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 3092,
        "src": "58:53:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 2111,
        "src": "112:65:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 1830,
        "src": "178:56:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 2227,
        "src": "235:58:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC1155/IERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 1752,
        "src": "294:60:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 1576,
        "src": "355:52:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dmitrii/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1463,
        "sourceUnit": 1630,
        "src": "408:62:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "Ownable",
              "nameLocations": [
                "539:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1575,
              "src": "539:7:11"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "539:7:11"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "548:15:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1629,
              "src": "548:15:11"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "548:15:11"
          }
        ],
        "canonicalName": "Willer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9,
          "nodeType": "StructuredDocumentation",
          "src": "472:47:11",
          "text": " @title Willer\n @author DimaKush"
        },
        "fullyImplemented": true,
        "id": 1462,
        "linearizedBaseContracts": [
          1462,
          1629,
          1575,
          3113
        ],
        "name": "Willer",
        "nameLocation": "529:6:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 16,
            "libraryName": {
              "id": 14,
              "name": "Math",
              "nameLocations": [
                "576:4:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3091,
              "src": "576:4:11"
            },
            "nodeType": "UsingForDirective",
            "src": "570:20:11",
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "585:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "global": false,
            "id": 20,
            "libraryName": {
              "id": 17,
              "name": "SafeERC20",
              "nameLocations": [
                "601:9:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2110,
              "src": "601:9:11"
            },
            "nodeType": "UsingForDirective",
            "src": "595:27:11",
            "typeName": {
              "id": 19,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18,
                "name": "IERC20",
                "nameLocations": [
                  "615:6:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1829,
                "src": "615:6:11"
              },
              "referencedDeclaration": 1829,
              "src": "615:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1829",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "Willer.Will",
            "id": 33,
            "members": [
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "beneficiaries",
                "nameLocation": "660:13:11",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "650:23:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 22,
                  "nodeType": "ArrayTypeName",
                  "src": "650:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 25,
                "mutability": "mutable",
                "name": "sumShares",
                "nameLocation": "688:9:11",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "683:14:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 24,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "683:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 27,
                "mutability": "mutable",
                "name": "beneficiaryOfERC721",
                "nameLocation": "715:19:11",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "707:27:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "707:7:11",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "releaseTime",
                "nameLocation": "749:11:11",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "744:16:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "744:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "shares",
                "nameLocation": "777:6:11",
                "nodeType": "VariableDeclaration",
                "scope": 33,
                "src": "770:13:11",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 30,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "770:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31,
                  "nodeType": "ArrayTypeName",
                  "src": "770:6:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Will",
            "nameLocation": "635:4:11",
            "nodeType": "StructDefinition",
            "scope": 1462,
            "src": "628:162:11",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "BUFFER",
            "nameLocation": "801:6:11",
            "nodeType": "VariableDeclaration",
            "scope": 1462,
            "src": "796:16:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 34,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "796:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "810:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "MIN_BUFFER",
            "nameLocation": "823:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 1462,
            "src": "818:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "818:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3630",
              "id": 38,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "836:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 42,
            "mutability": "mutable",
            "name": "MAXSHARE",
            "nameLocation": "849:8:11",
            "nodeType": "VariableDeclaration",
            "scope": 1462,
            "src": "844:18:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "844:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 41,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "860:2:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 45,
            "mutability": "mutable",
            "name": "REAP_DELAY",
            "nameLocation": "873:10:11",
            "nodeType": "VariableDeclaration",
            "scope": 1462,
            "src": "868:27:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "868:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "353030303030303030",
              "id": 44,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "886:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_500000000_by_1",
                "typeString": "int_const 500000000"
              },
              "value": "500000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51,
            "mutability": "mutable",
            "name": "treasuryAddress",
            "nameLocation": "912:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 1462,
            "src": "904:39:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "904:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 49,
                  "name": "this",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -28,
                  "src": "938:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Willer_$1462",
                    "typeString": "contract Willer"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_contract$_Willer_$1462",
                    "typeString": "contract Willer"
                  }
                ],
                "id": 48,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "930:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "930:7:11",
                  "typeDescriptions": {}
                }
              },
              "id": 50,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "930:13:11",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 56,
            "mutability": "mutable",
            "name": "testatorToWill",
            "nameLocation": "983:14:11",
            "nodeType": "VariableDeclaration",
            "scope": 1462,
            "src": "950:47:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
              "typeString": "mapping(address => struct Willer.Will)"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 52,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "958:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "950:24:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                "typeString": "mapping(address => struct Willer.Will)"
              },
              "valueType": {
                "id": 54,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 53,
                  "name": "Will",
                  "nameLocations": [
                    "969:4:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33,
                  "src": "969:4:11"
                },
                "referencedDeclaration": 33,
                "src": "969:4:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                  "typeString": "struct Willer.Will"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "1043:151:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 61,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1074:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1080:9:11",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1074:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 63,
                              "name": "testatorToWill",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "1093:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                "typeString": "mapping(address => struct Willer.Will storage ref)"
                              }
                            },
                            "id": 65,
                            "indexExpression": {
                              "id": 64,
                              "name": "_testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "1108:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1093:25:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Will_$33_storage",
                              "typeString": "struct Willer.Will storage ref"
                            }
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1119:11:11",
                          "memberName": "releaseTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 29,
                          "src": "1093:37:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1074:56:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a20756e72656c65617361626c65",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1144:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fb03ec2324a3a04119babf2f7ed40532ab2d9178a3cf101d251b9dc8629afc1",
                          "typeString": "literal_string \"Willer: unreleasable\""
                        },
                        "value": "Willer: unreleasable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fb03ec2324a3a04119babf2f7ed40532ab2d9178a3cf101d251b9dc8629afc1",
                          "typeString": "literal_string \"Willer: unreleasable\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1053:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:123:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:123:11"
                },
                {
                  "id": 71,
                  "nodeType": "PlaceholderStatement",
                  "src": "1186:1:11"
                }
              ]
            },
            "id": 73,
            "name": "releasable",
            "nameLocation": "1013:10:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_testator",
                  "nameLocation": "1032:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "1024:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:19:11"
            },
            "src": "1004:190:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1249:185:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1280:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1286:9:11",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1280:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 80,
                                "name": "testatorToWill",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56,
                                "src": "1315:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                  "typeString": "mapping(address => struct Willer.Will storage ref)"
                                }
                              },
                              "id": 82,
                              "indexExpression": {
                                "id": 81,
                                "name": "_testator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "1330:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1315:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Will_$33_storage",
                                "typeString": "struct Willer.Will storage ref"
                              }
                            },
                            "id": 83,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1341:11:11",
                            "memberName": "releaseTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "1315:37:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 84,
                            "name": "REAP_DELAY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "1355:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1315:50:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1280:85:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a20546f6f206561726c7920746f2072656170",
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1379:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c2cc1f9f606e9eb8b5d4ea77bef4cd803312a3cd8b25a016c64e36020f2766f",
                          "typeString": "literal_string \"Willer: Too early to reap\""
                        },
                        "value": "Willer: Too early to reap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c2cc1f9f606e9eb8b5d4ea77bef4cd803312a3cd8b25a016c64e36020f2766f",
                          "typeString": "literal_string \"Willer: Too early to reap\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1259:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:157:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:157:11"
                },
                {
                  "id": 90,
                  "nodeType": "PlaceholderStatement",
                  "src": "1426:1:11"
                }
              ]
            },
            "id": 92,
            "name": "releasableToTreasury",
            "nameLocation": "1209:20:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_testator",
                  "nameLocation": "1238:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1230:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1229:19:11"
            },
            "src": "1200:234:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "1485:170:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97,
                          "name": "releaseTime_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "1516:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 98,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1532:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1538:9:11",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1532:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 100,
                            "name": "BUFFER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36,
                            "src": "1550:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1532:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1516:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a2072657175697265282072656c656173652074696d65203e2063757272656e742074696d65202b204255464645522029",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1570:57:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_affbe3d72a56b86f20e371e9982d59e91684377e67abfd9f2392a650164c06e3",
                          "typeString": "literal_string \"Willer: require( release time > current time + BUFFER )\""
                        },
                        "value": "Willer: require( release time > current time + BUFFER )"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_affbe3d72a56b86f20e371e9982d59e91684377e67abfd9f2392a650164c06e3",
                          "typeString": "literal_string \"Willer: require( release time > current time + BUFFER )\""
                        }
                      ],
                      "id": 96,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1495:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1495:142:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:142:11"
                },
                {
                  "id": 106,
                  "nodeType": "PlaceholderStatement",
                  "src": "1647:1:11"
                }
              ]
            },
            "id": 108,
            "name": "validReleaseTime",
            "nameLocation": "1449:16:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "1471:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1466:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:19:11"
            },
            "src": "1440:215:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1725:164:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 113,
                          "name": "beneficiaryOfERC721_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "1756:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1788:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1780:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 114,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1780:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1780:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1756:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a2061646472657373207a65726f206973206e6f7420612076616c69642062656e65666963696172794f66455243373231",
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1804:57:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cf31e1aacdeac6001f8713618a12e1f71bfd49fd4f3335bf80626a2b94a3f3de",
                          "typeString": "literal_string \"Willer: address zero is not a valid beneficiaryOfERC721\""
                        },
                        "value": "Willer: address zero is not a valid beneficiaryOfERC721"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cf31e1aacdeac6001f8713618a12e1f71bfd49fd4f3335bf80626a2b94a3f3de",
                          "typeString": "literal_string \"Willer: address zero is not a valid beneficiaryOfERC721\""
                        }
                      ],
                      "id": 112,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1735:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:136:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 121,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:136:11"
                },
                {
                  "id": 122,
                  "nodeType": "PlaceholderStatement",
                  "src": "1881:1:11"
                }
              ]
            },
            "id": 124,
            "name": "validBeneficiaryOfERC721",
            "nameLocation": "1670:24:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "beneficiaryOfERC721_",
                  "nameLocation": "1703:20:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1695:28:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:30:11"
            },
            "src": "1661:228:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 195,
              "nodeType": "Block",
              "src": "2041:732:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 135,
                            "name": "beneficiaries_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "2072:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2087:6:11",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2072:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 137,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130,
                            "src": "2097:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2105:6:11",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2097:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2072:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a2062656e656669636961726965735f20616e64207368617265735f206c656e677468206d69736d61746368",
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2125:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf139a7b4de0c10180e52dcba4c550fa674a5982a354e59c81e9f50073e6f60c",
                          "typeString": "literal_string \"Willer: beneficiaries_ and shares_ length mismatch\""
                        },
                        "value": "Willer: beneficiaries_ and shares_ length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf139a7b4de0c10180e52dcba4c550fa674a5982a354e59c81e9f50073e6f60c",
                          "typeString": "literal_string \"Willer: beneficiaries_ and shares_ length mismatch\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2051:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2051:136:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:136:11"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "2243:513:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 154,
                                  "name": "beneficiaries_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "2282:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 156,
                                "indexExpression": {
                                  "id": 155,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144,
                                  "src": "2297:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2282:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 159,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2311:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2303:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 157,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2303:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2303:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2282:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57696c6c65723a2061646472657373207a65726f206973206e6f7420612076616c69642062656e6566696369617279",
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2331:49:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_997c8cb95843a5870445fd6c049758130baed275dc11a0a23b273e68b7d131d1",
                                "typeString": "literal_string \"Willer: address zero is not a valid beneficiary\""
                              },
                              "value": "Willer: address zero is not a valid beneficiary"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_997c8cb95843a5870445fd6c049758130baed275dc11a0a23b273e68b7d131d1",
                                "typeString": "literal_string \"Willer: address zero is not a valid beneficiary\""
                              }
                            ],
                            "id": 153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2257:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2257:137:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "2257:137:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 166,
                                  "name": "beneficiaries_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 127,
                                  "src": "2433:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 168,
                                "indexExpression": {
                                  "id": 167,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144,
                                  "src": "2448:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2433:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 169,
                                "name": "testator_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 132,
                                "src": "2454:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2433:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57696c6c65723a207465737461746f72206973206e6f7420612076616c69642062656e6566696369617279",
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2481:45:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e162e5dd67317db7e1a79b7dfe96cb3251e28a555a9f403968a38605a052c22a",
                                "typeString": "literal_string \"Willer: testator is not a valid beneficiary\""
                              },
                              "value": "Willer: testator is not a valid beneficiary"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e162e5dd67317db7e1a79b7dfe96cb3251e28a555a9f403968a38605a052c22a",
                                "typeString": "literal_string \"Willer: testator is not a valid beneficiary\""
                              }
                            ],
                            "id": 165,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2408:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2408:132:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "2408:132:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 175,
                                  "name": "shares_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "2579:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 177,
                                "indexExpression": {
                                  "id": 176,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144,
                                  "src": "2587:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2579:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 178,
                                "name": "MAXSHARE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "2593:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2579:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57696c6c65723a2073686172652063616e27742062652067726561746572207468616e204d41585348415245",
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2619:46:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9a28564864f75184f9de6e75223a8ed91788fd98ccccbbef499fb9434438a7e0",
                                "typeString": "literal_string \"Willer: share can't be greater than MAXSHARE\""
                              },
                              "value": "Willer: share can't be greater than MAXSHARE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9a28564864f75184f9de6e75223a8ed91788fd98ccccbbef499fb9434438a7e0",
                                "typeString": "literal_string \"Willer: share can't be greater than MAXSHARE\""
                              }
                            ],
                            "id": 174,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2554:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2554:125:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "2554:125:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 184,
                                  "name": "shares_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "2701:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 186,
                                "indexExpression": {
                                  "id": 185,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144,
                                  "src": "2709:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2701:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2715:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2701:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57696c6c65723a2073686172652063616e27742062652030",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2718:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7c93e17874542947f499cefe7a738c6059b074c5c9610dac02b78c2e7e2f30f",
                                "typeString": "literal_string \"Willer: share can't be 0\""
                              },
                              "value": "Willer: share can't be 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7c93e17874542947f499cefe7a738c6059b074c5c9610dac02b78c2e7e2f30f",
                                "typeString": "literal_string \"Willer: share can't be 0\""
                              }
                            ],
                            "id": 183,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2693:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2693:52:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "2693:52:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 146,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "2211:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 147,
                        "name": "beneficiaries_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2215:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2230:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2215:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2211:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 193,
                  "initializationExpression": {
                    "assignments": [
                      144
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2208:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "2203:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 145,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2203:6:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2238:3:11",
                      "subExpression": {
                        "id": 150,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144,
                        "src": "2238:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 152,
                    "nodeType": "ExpressionStatement",
                    "src": "2238:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "2198:558:11"
                },
                {
                  "id": 194,
                  "nodeType": "PlaceholderStatement",
                  "src": "2765:1:11"
                }
              ]
            },
            "id": 196,
            "name": "validBeneficiariesAndShares",
            "nameLocation": "1904:27:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "beneficiaries_",
                  "nameLocation": "1960:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "1941:33:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 125,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1941:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 126,
                    "nodeType": "ArrayTypeName",
                    "src": "1941:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "2000:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "1984:23:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 128,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1984:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 129,
                    "nodeType": "ArrayTypeName",
                    "src": "1984:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "testator_",
                  "nameLocation": "2025:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "2017:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1931:109:11"
            },
            "src": "1895:878:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2825:281:11",
              "statements": [
                {
                  "body": {
                    "id": 229,
                    "nodeType": "Block",
                    "src": "2873:216:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 212,
                                  "name": "shares_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "2912:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 214,
                                "indexExpression": {
                                  "id": 213,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "2920:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2912:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 215,
                                "name": "MAXSHARE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42,
                                "src": "2926:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2912:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57696c6c65723a2073686172652063616e27742062652067726561746572207468616e204d41585348415245",
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2952:46:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9a28564864f75184f9de6e75223a8ed91788fd98ccccbbef499fb9434438a7e0",
                                "typeString": "literal_string \"Willer: share can't be greater than MAXSHARE\""
                              },
                              "value": "Willer: share can't be greater than MAXSHARE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9a28564864f75184f9de6e75223a8ed91788fd98ccccbbef499fb9434438a7e0",
                                "typeString": "literal_string \"Willer: share can't be greater than MAXSHARE\""
                              }
                            ],
                            "id": 211,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2887:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2887:125:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 219,
                        "nodeType": "ExpressionStatement",
                        "src": "2887:125:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 221,
                                  "name": "shares_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 199,
                                  "src": "3034:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 223,
                                "indexExpression": {
                                  "id": 222,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 202,
                                  "src": "3042:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3034:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3048:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3034:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57696c6c65723a2073686172652063616e27742062652030",
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3051:26:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7c93e17874542947f499cefe7a738c6059b074c5c9610dac02b78c2e7e2f30f",
                                "typeString": "literal_string \"Willer: share can't be 0\""
                              },
                              "value": "Willer: share can't be 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7c93e17874542947f499cefe7a738c6059b074c5c9610dac02b78c2e7e2f30f",
                                "typeString": "literal_string \"Willer: share can't be 0\""
                              }
                            ],
                            "id": 220,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3026:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3026:52:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 228,
                        "nodeType": "ExpressionStatement",
                        "src": "3026:52:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 204,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 202,
                      "src": "2848:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 205,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2852:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2860:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2852:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2848:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 230,
                  "initializationExpression": {
                    "assignments": [
                      202
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 202,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2845:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 230,
                        "src": "2840:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2840:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 203,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2840:6:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2868:3:11",
                      "subExpression": {
                        "id": 208,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2868:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 210,
                    "nodeType": "ExpressionStatement",
                    "src": "2868:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "2835:254:11"
                },
                {
                  "id": 231,
                  "nodeType": "PlaceholderStatement",
                  "src": "3098:1:11"
                }
              ]
            },
            "id": 233,
            "name": "validShares",
            "nameLocation": "2788:11:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "2816:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2800:23:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 197,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2800:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 198,
                    "nodeType": "ArrayTypeName",
                    "src": "2800:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2799:25:11"
            },
            "src": "2779:327:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 267,
              "nodeType": "Block",
              "src": "3151:295:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 238,
                                      "name": "testatorToWill",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56,
                                      "src": "3183:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                        "typeString": "mapping(address => struct Willer.Will storage ref)"
                                      }
                                    },
                                    "id": 240,
                                    "indexExpression": {
                                      "id": 239,
                                      "name": "_testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 235,
                                      "src": "3198:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3183:25:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Will_$33_storage",
                                      "typeString": "struct Willer.Will storage ref"
                                    }
                                  },
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3209:11:11",
                                  "memberName": "releaseTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 29,
                                  "src": "3183:37:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3224:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3183:42:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 250,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 244,
                                        "name": "testatorToWill",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 56,
                                        "src": "3245:14:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                                        }
                                      },
                                      "id": 246,
                                      "indexExpression": {
                                        "id": 245,
                                        "name": "_testator",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 235,
                                        "src": "3260:9:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3245:25:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Will_$33_storage",
                                        "typeString": "struct Willer.Will storage ref"
                                      }
                                    },
                                    "id": 247,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3271:13:11",
                                    "memberName": "beneficiaries",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "3245:39:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3285:6:11",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3245:46:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3295:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3245:51:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3183:113:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 252,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "3316:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 254,
                                  "indexExpression": {
                                    "id": 253,
                                    "name": "_testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 235,
                                    "src": "3331:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3316:25:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 255,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3342:19:11",
                                "memberName": "beneficiaryOfERC721",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27,
                                "src": "3316:45:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3373:1:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3365:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 256,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3365:7:11",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3365:10:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3316:59:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3183:192:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 262,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3182:194:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a2077696c6c20646f65736e2774206578697374",
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3390:28:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e9ed7790035ae2e7ca35964749ee0c20ee8c5f313ef52c9f8c8c9f4aa16b1db",
                          "typeString": "literal_string \"Willer: will doesn't exist\""
                        },
                        "value": "Willer: will doesn't exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e9ed7790035ae2e7ca35964749ee0c20ee8c5f313ef52c9f8c8c9f4aa16b1db",
                          "typeString": "literal_string \"Willer: will doesn't exist\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3161:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3161:267:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:267:11"
                },
                {
                  "id": 266,
                  "nodeType": "PlaceholderStatement",
                  "src": "3438:1:11"
                }
              ]
            },
            "id": 268,
            "name": "willExists",
            "nameLocation": "3121:10:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_testator",
                  "nameLocation": "3140:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 268,
                  "src": "3132:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:19:11"
            },
            "src": "3112:334:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 286,
              "nodeType": "Block",
              "src": "3560:164:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 277,
                            "name": "beneficiaries_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3591:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3606:6:11",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3591:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 279,
                            "name": "shares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 274,
                            "src": "3616:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3624:6:11",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3616:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3591:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a2062656e656669636961726965735f20616e64207368617265735f206c656e677468206d69736d61746368",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3644:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf139a7b4de0c10180e52dcba4c550fa674a5982a354e59c81e9f50073e6f60c",
                          "typeString": "literal_string \"Willer: beneficiaries_ and shares_ length mismatch\""
                        },
                        "value": "Willer: beneficiaries_ and shares_ length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf139a7b4de0c10180e52dcba4c550fa674a5982a354e59c81e9f50073e6f60c",
                          "typeString": "literal_string \"Willer: beneficiaries_ and shares_ length mismatch\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3570:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3570:136:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "3570:136:11"
                },
                {
                  "id": 285,
                  "nodeType": "PlaceholderStatement",
                  "src": "3716:1:11"
                }
              ]
            },
            "id": 287,
            "name": "sameLengthArrays",
            "nameLocation": "3461:16:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "beneficiaries_",
                  "nameLocation": "3506:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "3487:33:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 269,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3487:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 270,
                    "nodeType": "ArrayTypeName",
                    "src": "3487:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 274,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "3546:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 287,
                  "src": "3530:23:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 272,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3530:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 273,
                    "nodeType": "ArrayTypeName",
                    "src": "3530:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3477:82:11"
            },
            "src": "3452:272:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "4175:549:11",
              "statements": [
                {
                  "assignments": [
                    292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "_executorIsBeneficiary",
                      "nameLocation": "4190:22:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 345,
                      "src": "4185:27:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4185:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 294,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4215:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4185:35:11"
                },
                {
                  "body": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "4350:148:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 309,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4368:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4372:6:11",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4368:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 311,
                                  "name": "testatorToWill",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "4382:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                    "typeString": "mapping(address => struct Willer.Will storage ref)"
                                  }
                                },
                                "id": 313,
                                "indexExpression": {
                                  "id": 312,
                                  "name": "_testator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 289,
                                  "src": "4397:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4382:25:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Will_$33_storage",
                                  "typeString": "struct Willer.Will storage ref"
                                }
                              },
                              "id": 314,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4408:13:11",
                              "memberName": "beneficiaries",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 23,
                              "src": "4382:39:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 316,
                            "indexExpression": {
                              "id": 315,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "4422:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4382:42:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4368:56:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 323,
                        "nodeType": "IfStatement",
                        "src": "4364:124:11",
                        "trueBody": {
                          "id": 322,
                          "nodeType": "Block",
                          "src": "4426:62:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 318,
                                  "name": "_executorIsBeneficiary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 292,
                                  "src": "4444:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 319,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4469:4:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "4444:29:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 321,
                              "nodeType": "ExpressionStatement",
                              "src": "4444:29:11"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 299,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "4272:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 300,
                            "name": "testatorToWill",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "4276:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                              "typeString": "mapping(address => struct Willer.Will storage ref)"
                            }
                          },
                          "id": 302,
                          "indexExpression": {
                            "id": 301,
                            "name": "_testator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "4291:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4276:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Will_$33_storage",
                            "typeString": "struct Willer.Will storage ref"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4302:13:11",
                        "memberName": "beneficiaries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "4276:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4316:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4276:46:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4272:50:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 325,
                  "initializationExpression": {
                    "assignments": [
                      296
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 296,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4253:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 325,
                        "src": "4248:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4248:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 298,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4257:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4248:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4336:3:11",
                      "subExpression": {
                        "id": 306,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "4336:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 308,
                    "nodeType": "ExpressionStatement",
                    "src": "4336:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "4230:268:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 326,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4511:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4515:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4511:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 328,
                          "name": "testatorToWill",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "4525:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                            "typeString": "mapping(address => struct Willer.Will storage ref)"
                          }
                        },
                        "id": 330,
                        "indexExpression": {
                          "id": 329,
                          "name": "_testator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 289,
                          "src": "4540:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4525:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage",
                          "typeString": "struct Willer.Will storage ref"
                        }
                      },
                      "id": 331,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4551:19:11",
                      "memberName": "beneficiaryOfERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "4525:45:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4511:59:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 338,
                  "nodeType": "IfStatement",
                  "src": "4507:119:11",
                  "trueBody": {
                    "id": 337,
                    "nodeType": "Block",
                    "src": "4572:54:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 333,
                            "name": "_executorIsBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "4586:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4611:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4586:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 336,
                        "nodeType": "ExpressionStatement",
                        "src": "4586:29:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 340,
                        "name": "_executorIsBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "4644:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a206578656375746f72206973206e6f742062656e6566696369617279",
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4668:37:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be790993ef2bf8c075171f5744b44c5447528134f152954a7e7101457d178c0d",
                          "typeString": "literal_string \"Willer: executor is not beneficiary\""
                        },
                        "value": "Willer: executor is not beneficiary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be790993ef2bf8c075171f5744b44c5447528134f152954a7e7101457d178c0d",
                          "typeString": "literal_string \"Willer: executor is not beneficiary\""
                        }
                      ],
                      "id": 339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4636:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:70:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:70:11"
                },
                {
                  "id": 344,
                  "nodeType": "PlaceholderStatement",
                  "src": "4716:1:11"
                }
              ]
            },
            "id": 346,
            "name": "executorIsBeneficiary",
            "nameLocation": "4134:21:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 289,
                  "mutability": "mutable",
                  "name": "_testator",
                  "nameLocation": "4164:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "4156:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4156:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4155:19:11"
            },
            "src": "4125:599:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "5109:349:11",
              "statements": [
                {
                  "assignments": [
                    376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 376,
                      "mutability": "mutable",
                      "name": "w",
                      "nameLocation": "5132:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 433,
                      "src": "5119:14:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                        "typeString": "struct Willer.Will"
                      },
                      "typeName": {
                        "id": 375,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 374,
                          "name": "Will",
                          "nameLocations": [
                            "5119:4:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33,
                          "src": "5119:4:11"
                        },
                        "referencedDeclaration": 33,
                        "src": "5119:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                          "typeString": "struct Willer.Will"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 377,
                      "name": "testatorToWill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "5136:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                        "typeString": "mapping(address => struct Willer.Will storage ref)"
                      }
                    },
                    "id": 380,
                    "indexExpression": {
                      "expression": {
                        "id": 378,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "5151:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5155:6:11",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5151:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5136:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Will_$33_storage",
                      "typeString": "struct Willer.Will storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5119:43:11"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 382,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5172:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                          "typeString": "struct Willer.Will storage pointer"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5174:13:11",
                      "memberName": "beneficiaries",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "5172:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 385,
                      "name": "beneficiaries_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "5190:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "5172:32:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "5172:32:11"
                },
                {
                  "expression": {
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 388,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5214:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                          "typeString": "struct Willer.Will storage pointer"
                        }
                      },
                      "id": 390,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5216:6:11",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "5214:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 391,
                      "name": "shares_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 352,
                      "src": "5225:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "src": "5214:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "5214:18:11"
                },
                {
                  "expression": {
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 394,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5242:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                          "typeString": "struct Willer.Will storage pointer"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5244:9:11",
                      "memberName": "sumShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "5242:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5256:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5242:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 399,
                  "nodeType": "ExpressionStatement",
                  "src": "5242:15:11"
                },
                {
                  "expression": {
                    "id": 404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 400,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5267:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                          "typeString": "struct Willer.Will storage pointer"
                        }
                      },
                      "id": 402,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5269:19:11",
                      "memberName": "beneficiaryOfERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "5267:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 403,
                      "name": "beneficiaryOfERC721_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "5291:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5267:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 405,
                  "nodeType": "ExpressionStatement",
                  "src": "5267:44:11"
                },
                {
                  "expression": {
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 406,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "5321:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                          "typeString": "struct Willer.Will storage pointer"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5323:11:11",
                      "memberName": "releaseTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "5321:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 409,
                      "name": "releaseTime_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 356,
                      "src": "5337:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5321:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "5321:28:11"
                },
                {
                  "body": {
                    "id": 431,
                    "nodeType": "Block",
                    "src": "5402:50:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 423,
                              "name": "w",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "5416:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Will_$33_storage_ptr",
                                "typeString": "struct Willer.Will storage pointer"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5418:9:11",
                            "memberName": "sumShares",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "5416:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 426,
                              "name": "shares_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "5431:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 428,
                            "indexExpression": {
                              "id": 427,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 413,
                              "src": "5439:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5431:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5416:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "5416:25:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 416,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "5377:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 417,
                        "name": "shares_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 352,
                        "src": "5381:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5389:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5381:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5377:18:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 432,
                  "initializationExpression": {
                    "assignments": [
                      413
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 413,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5370:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 432,
                        "src": "5365:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 412,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5365:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 415,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5374:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5365:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5397:3:11",
                      "subExpression": {
                        "id": 420,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "5397:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 422,
                    "nodeType": "ExpressionStatement",
                    "src": "5397:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "5360:92:11"
                }
              ]
            },
            "functionSelector": "9181141a",
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 359,
                    "name": "beneficiaries_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 349,
                    "src": "4945:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                      "typeString": "address[] calldata"
                    }
                  },
                  {
                    "id": 360,
                    "name": "shares_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "4961:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                      "typeString": "uint256[] calldata"
                    }
                  },
                  {
                    "expression": {
                      "id": 361,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4970:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4974:6:11",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4970:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 363,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 358,
                  "name": "validBeneficiariesAndShares",
                  "nameLocations": [
                    "4917:27:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 196,
                  "src": "4917:27:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4917:64:11"
              },
              {
                "arguments": [
                  {
                    "id": 365,
                    "name": "releaseTime_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 356,
                    "src": "5007:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 366,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 364,
                  "name": "validReleaseTime",
                  "nameLocations": [
                    "4990:16:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 108,
                  "src": "4990:16:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "4990:30:11"
              },
              {
                "arguments": [
                  {
                    "id": 368,
                    "name": "beneficiaryOfERC721_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 354,
                    "src": "5054:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 367,
                  "name": "validBeneficiaryOfERC721",
                  "nameLocations": [
                    "5029:24:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "5029:24:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "5029:46:11"
              },
              {
                "arguments": [
                  {
                    "id": 371,
                    "name": "shares_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 352,
                    "src": "5096:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                      "typeString": "uint256[] calldata"
                    }
                  }
                ],
                "id": 372,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 370,
                  "name": "validShares",
                  "nameLocations": [
                    "5084:11:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 233,
                  "src": "5084:11:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "5084:20:11"
              }
            ],
            "name": "addWill",
            "nameLocation": "4739:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "mutability": "mutable",
                  "name": "beneficiaries_",
                  "nameLocation": "4775:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "4756:33:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 347,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4756:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 348,
                    "nodeType": "ArrayTypeName",
                    "src": "4756:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 352,
                  "mutability": "mutable",
                  "name": "shares_",
                  "nameLocation": "4815:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "4799:23:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 350,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "4799:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 351,
                    "nodeType": "ArrayTypeName",
                    "src": "4799:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 354,
                  "mutability": "mutable",
                  "name": "beneficiaryOfERC721_",
                  "nameLocation": "4840:20:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "4832:28:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4832:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "releaseTime_",
                  "nameLocation": "4875:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 434,
                  "src": "4870:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4746:147:11"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5109:0:11"
            },
            "scope": 1462,
            "src": "4730:728:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "5512:30:11",
              "statements": [
                {
                  "expression": {
                    "id": 439,
                    "name": "BUFFER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 36,
                    "src": "5529:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 438,
                  "id": 440,
                  "nodeType": "Return",
                  "src": "5522:13:11"
                }
              ]
            },
            "functionSelector": "705e8b2e",
            "id": 442,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuffer",
            "nameLocation": "5473:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5482:2:11"
            },
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 442,
                  "src": "5506:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5506:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5505:6:11"
            },
            "scope": 1462,
            "src": "5464:78:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "5599:34:11",
              "statements": [
                {
                  "expression": {
                    "id": 447,
                    "name": "REAP_DELAY",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 45,
                    "src": "5616:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 446,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "5609:17:11"
                }
              ]
            },
            "functionSelector": "8ec02773",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReapDelay",
            "nameLocation": "5557:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5569:2:11"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5593:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5593:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5592:6:11"
            },
            "scope": 1462,
            "src": "5548:85:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 457,
              "nodeType": "Block",
              "src": "5689:32:11",
              "statements": [
                {
                  "expression": {
                    "id": 455,
                    "name": "MAXSHARE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42,
                    "src": "5706:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 454,
                  "id": 456,
                  "nodeType": "Return",
                  "src": "5699:15:11"
                }
              ]
            },
            "functionSelector": "745137b4",
            "id": 458,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaxShare",
            "nameLocation": "5648:11:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5659:2:11"
            },
            "returnParameters": {
              "id": 454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 458,
                  "src": "5683:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5683:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5682:6:11"
            },
            "scope": 1462,
            "src": "5639:82:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 470,
              "nodeType": "Block",
              "src": "5796:60:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 465,
                        "name": "testatorToWill",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "5813:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                        }
                      },
                      "id": 467,
                      "indexExpression": {
                        "id": 466,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 460,
                        "src": "5828:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5813:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage",
                        "typeString": "struct Willer.Will storage ref"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5838:11:11",
                    "memberName": "releaseTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "5813:36:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 464,
                  "id": 469,
                  "nodeType": "Return",
                  "src": "5806:43:11"
                }
              ]
            },
            "functionSelector": "0cb7eb4c",
            "id": 471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReleaseTime",
            "nameLocation": "5736:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "5759:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "5751:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5750:18:11"
            },
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 471,
                  "src": "5790:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5790:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5789:6:11"
            },
            "scope": 1462,
            "src": "5727:129:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "5959:62:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 479,
                        "name": "testatorToWill",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "5976:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                        }
                      },
                      "id": 481,
                      "indexExpression": {
                        "id": 480,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "5991:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5976:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage",
                        "typeString": "struct Willer.Will storage ref"
                      }
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6001:13:11",
                    "memberName": "beneficiaries",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "5976:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 478,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "5969:45:11"
                }
              ]
            },
            "functionSelector": "1cab59a4",
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBeneficiaries",
            "nameLocation": "5871:16:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "5905:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "5897:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5897:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5887:32:11"
            },
            "returnParameters": {
              "id": 478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "5941:16:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 475,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5941:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 476,
                    "nodeType": "ArrayTypeName",
                    "src": "5941:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5940:18:11"
            },
            "scope": 1462,
            "src": "5862:159:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "6100:55:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 493,
                        "name": "testatorToWill",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "6117:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                        }
                      },
                      "id": 495,
                      "indexExpression": {
                        "id": 494,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 487,
                        "src": "6132:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6117:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage",
                        "typeString": "struct Willer.Will storage ref"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6142:6:11",
                    "memberName": "shares",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 32,
                    "src": "6117:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 492,
                  "id": 497,
                  "nodeType": "Return",
                  "src": "6110:38:11"
                }
              ]
            },
            "functionSelector": "f04da65b",
            "id": 499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getShares",
            "nameLocation": "6036:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "6054:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "6046:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6046:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6045:18:11"
            },
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 499,
                  "src": "6085:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 489,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6085:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 490,
                    "nodeType": "ArrayTypeName",
                    "src": "6085:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6084:15:11"
            },
            "scope": 1462,
            "src": "6027:128:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "6228:58:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 506,
                        "name": "testatorToWill",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "6245:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                        }
                      },
                      "id": 508,
                      "indexExpression": {
                        "id": 507,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "6260:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6245:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage",
                        "typeString": "struct Willer.Will storage ref"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6270:9:11",
                    "memberName": "sumShares",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 25,
                    "src": "6245:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 505,
                  "id": 510,
                  "nodeType": "Return",
                  "src": "6238:41:11"
                }
              ]
            },
            "functionSelector": "a29093b1",
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSumShares",
            "nameLocation": "6170:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "6191:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "6183:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6183:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6182:18:11"
            },
            "returnParameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "6222:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6222:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6221:6:11"
            },
            "scope": 1462,
            "src": "6161:125:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 524,
              "nodeType": "Block",
              "src": "6407:69:11",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 519,
                        "name": "testatorToWill",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "6424:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                        }
                      },
                      "id": 521,
                      "indexExpression": {
                        "id": 520,
                        "name": "_testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 514,
                        "src": "6439:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6424:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage",
                        "typeString": "struct Willer.Will storage ref"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6450:19:11",
                    "memberName": "beneficiaryOfERC721",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 27,
                    "src": "6424:45:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 518,
                  "id": 523,
                  "nodeType": "Return",
                  "src": "6417:52:11"
                }
              ]
            },
            "functionSelector": "47ff5d8a",
            "id": 525,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBeneficiaryOfERC721",
            "nameLocation": "6301:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "_testator",
                  "nameLocation": "6341:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "6333:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6333:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6323:33:11"
            },
            "returnParameters": {
              "id": 518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "mutability": "mutable",
                  "name": "beneficiaryOfERC721",
                  "nameLocation": "6386:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 525,
                  "src": "6378:27:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6378:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6377:29:11"
            },
            "scope": 1462,
            "src": "6292:184:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 564,
              "nodeType": "Block",
              "src": "6846:197:11",
              "statements": [
                {
                  "expression": {
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 546,
                          "name": "testatorToWill",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "6856:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                            "typeString": "mapping(address => struct Willer.Will storage ref)"
                          }
                        },
                        "id": 549,
                        "indexExpression": {
                          "expression": {
                            "id": 547,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6871:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6875:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6871:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6856:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage",
                          "typeString": "struct Willer.Will storage ref"
                        }
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6883:13:11",
                      "memberName": "beneficiaries",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "6856:40:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 551,
                      "name": "newBeneficiaries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 528,
                      "src": "6899:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "6856:59:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "6856:59:11"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 554,
                          "name": "testatorToWill",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "6925:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                            "typeString": "mapping(address => struct Willer.Will storage ref)"
                          }
                        },
                        "id": 557,
                        "indexExpression": {
                          "expression": {
                            "id": 555,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6940:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6944:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6940:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6925:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage",
                          "typeString": "struct Willer.Will storage ref"
                        }
                      },
                      "id": 558,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6952:6:11",
                      "memberName": "shares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32,
                      "src": "6925:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 559,
                      "name": "newShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "6961:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "src": "6925:45:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "6925:45:11"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7032:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 545,
                  "id": 563,
                  "nodeType": "Return",
                  "src": "7025:11:11"
                }
              ]
            },
            "functionSelector": "a3da0ecd",
            "id": 565,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 534,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6730:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6734:6:11",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6730:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 536,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 533,
                  "name": "willExists",
                  "nameLocations": [
                    "6719:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "6719:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "6719:22:11"
              },
              {
                "arguments": [
                  {
                    "id": 538,
                    "name": "newBeneficiaries",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 528,
                    "src": "6778:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                      "typeString": "address[] calldata"
                    }
                  },
                  {
                    "id": 539,
                    "name": "newShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 531,
                    "src": "6796:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                      "typeString": "uint256[] calldata"
                    }
                  },
                  {
                    "expression": {
                      "id": 540,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "6807:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6811:6:11",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6807:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 537,
                  "name": "validBeneficiariesAndShares",
                  "nameLocations": [
                    "6750:27:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 196,
                  "src": "6750:27:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "6750:68:11"
              }
            ],
            "name": "setNewBeneficiaries",
            "nameLocation": "6590:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "mutability": "mutable",
                  "name": "newBeneficiaries",
                  "nameLocation": "6638:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "6619:35:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 526,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6619:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 527,
                    "nodeType": "ArrayTypeName",
                    "src": "6619:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 531,
                  "mutability": "mutable",
                  "name": "newShares",
                  "nameLocation": "6680:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "6664:25:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 529,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "6664:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 530,
                    "nodeType": "ArrayTypeName",
                    "src": "6664:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6609:86:11"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 565,
                  "src": "6836:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6835:6:11"
            },
            "scope": 1462,
            "src": "6581:462:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "7227:187:11",
              "statements": [
                {
                  "expression": {
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 579,
                          "name": "testatorToWill",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "7237:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                            "typeString": "mapping(address => struct Willer.Will storage ref)"
                          }
                        },
                        "id": 582,
                        "indexExpression": {
                          "expression": {
                            "id": 580,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7252:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7256:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7252:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7237:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage",
                          "typeString": "struct Willer.Will storage ref"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7264:11:11",
                      "memberName": "releaseTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "7237:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 584,
                      "name": "newReleaseTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 567,
                      "src": "7278:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7237:55:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "7237:55:11"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 587,
                        "name": "testatorToWill",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "7369:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                          "typeString": "mapping(address => struct Willer.Will storage ref)"
                        }
                      },
                      "id": 590,
                      "indexExpression": {
                        "expression": {
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7384:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7388:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7384:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7369:26:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Will_$33_storage",
                        "typeString": "struct Willer.Will storage ref"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7396:11:11",
                    "memberName": "releaseTime",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 29,
                    "src": "7369:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 578,
                  "id": 592,
                  "nodeType": "Return",
                  "src": "7362:45:11"
                }
              ]
            },
            "functionSelector": "a6fd2339",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 570,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7147:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7151:6:11",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7147:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 572,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 569,
                  "name": "willExists",
                  "nameLocations": [
                    "7136:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "7136:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "7136:22:11"
              },
              {
                "arguments": [
                  {
                    "id": 574,
                    "name": "newReleaseTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 567,
                    "src": "7184:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 575,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 573,
                  "name": "validReleaseTime",
                  "nameLocations": [
                    "7167:16:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 108,
                  "src": "7167:16:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "7167:32:11"
              }
            ],
            "name": "setNewReleaseTime",
            "nameLocation": "7058:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "newReleaseTime",
                  "nameLocation": "7090:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "7085:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7085:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7075:35:11"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "7217:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7217:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7216:6:11"
            },
            "scope": 1462,
            "src": "7049:365:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "7608:141:11",
              "statements": [
                {
                  "expression": {
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 606,
                          "name": "testatorToWill",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "7618:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                            "typeString": "mapping(address => struct Willer.Will storage ref)"
                          }
                        },
                        "id": 609,
                        "indexExpression": {
                          "expression": {
                            "id": 607,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7633:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7637:6:11",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7633:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7618:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Will_$33_storage",
                          "typeString": "struct Willer.Will storage ref"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7645:19:11",
                      "memberName": "beneficiaryOfERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27,
                      "src": "7618:46:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 611,
                      "name": "newBeneficiaryOfERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 596,
                      "src": "7667:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7618:71:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "7618:71:11"
                }
              ]
            },
            "functionSelector": "caee863e",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 599,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "7535:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7539:6:11",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7535:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 601,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 598,
                  "name": "willExists",
                  "nameLocations": [
                    "7524:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "7524:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "7524:22:11"
              },
              {
                "arguments": [
                  {
                    "id": 603,
                    "name": "newBeneficiaryOfERC721",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 596,
                    "src": "7580:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 602,
                  "name": "validBeneficiaryOfERC721",
                  "nameLocations": [
                    "7555:24:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 124,
                  "src": "7555:24:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "7555:48:11"
              }
            ],
            "name": "setNewBeneficiaryOfERC721",
            "nameLocation": "7429:25:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 596,
                  "mutability": "mutable",
                  "name": "newBeneficiaryOfERC721",
                  "nameLocation": "7472:22:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "7464:30:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7464:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7454:46:11"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7608:0:11"
            },
            "scope": 1462,
            "src": "7420:329:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "7854:437:11",
              "statements": [
                {
                  "assignments": [
                    624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 624,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7869:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "7864:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 623,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7864:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 629,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "7900:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 625,
                        "name": "tokenERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "7879:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7890:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1786,
                      "src": "7879:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7879:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7864:45:11"
                },
                {
                  "assignments": [
                    631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 631,
                      "mutability": "mutable",
                      "name": "bequest",
                      "nameLocation": "7924:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "7919:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 630,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7919:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 633,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7934:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7919:16:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 635,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 624,
                          "src": "7953:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7964:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7953:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a204e6f20455243323020746f6b656e7320746f2072656c65617365",
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7967:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da32ff09c7fc6f724cfcd17930976a192fa2a62f551a287b46cc72056b32e733",
                          "typeString": "literal_string \"Willer: No ERC20 tokens to release\""
                        },
                        "value": "Willer: No ERC20 tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da32ff09c7fc6f724cfcd17930976a192fa2a62f551a287b46cc72056b32e733",
                          "typeString": "literal_string \"Willer: No ERC20 tokens to release\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7945:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7945:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 640,
                  "nodeType": "ExpressionStatement",
                  "src": "7945:59:11"
                },
                {
                  "assignments": [
                    642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 642,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "8019:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "8014:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 641,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8014:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 651,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 645,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "8050:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 648,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8068:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Willer_$1462",
                              "typeString": "contract Willer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Willer_$1462",
                              "typeString": "contract Willer"
                            }
                          ],
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8060:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 646,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8060:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8060:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 643,
                        "name": "tokenERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "8029:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8040:9:11",
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1806,
                      "src": "8029:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8029:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8014:60:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 653,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "8092:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8103:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8092:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a204552433230207a65726f20616c6c6f77616e6365",
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8106:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68d34019885d73727a94255e97ed2e570b9d8874c8c31e67c52f7b32b20b956d",
                          "typeString": "literal_string \"Willer: ERC20 zero allowance\""
                        },
                        "value": "Willer: ERC20 zero allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68d34019885d73727a94255e97ed2e570b9d8874c8c31e67c52f7b32b20b956d",
                          "typeString": "literal_string \"Willer: ERC20 zero allowance\""
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8084:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8084:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "8084:53:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 659,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 642,
                      "src": "8151:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 660,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 624,
                      "src": "8161:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8151:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 667,
                  "nodeType": "IfStatement",
                  "src": "8147:65:11",
                  "trueBody": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "8170:42:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 662,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 624,
                            "src": "8184:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 663,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "8194:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8184:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "8184:17:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 671,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "8249:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 672,
                        "name": "treasuryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "8259:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 673,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 624,
                        "src": "8276:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 668,
                        "name": "tokenERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 620,
                        "src": "8221:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8232:16:11",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1887,
                      "src": "8221:27:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1829_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1829_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8221:63:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "ExpressionStatement",
                  "src": "8221:63:11"
                }
              ]
            },
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC20ToTreasury",
            "nameLocation": "7764:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "7804:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "7796:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7796:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 620,
                  "mutability": "mutable",
                  "name": "tokenERC20",
                  "nameLocation": "7829:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 677,
                  "src": "7822:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1829",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 619,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 618,
                      "name": "IERC20",
                      "nameLocations": [
                        "7822:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1829,
                      "src": "7822:6:11"
                    },
                    "referencedDeclaration": 1829,
                    "src": "7822:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1829",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7786:59:11"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7854:0:11"
            },
            "scope": 1462,
            "src": "7755:536:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "8421:1100:11",
              "statements": [
                {
                  "assignments": [
                    686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 686,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "8436:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "8431:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 685,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8431:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 691,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 689,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "8467:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 687,
                        "name": "tokenERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "8446:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8457:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1786,
                      "src": "8446:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8446:30:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8431:45:11"
                },
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "bequest",
                      "nameLocation": "8491:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "8486:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 692,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8486:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8501:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8486:16:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 697,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 686,
                          "src": "8520:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8531:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8520:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a204e6f20455243323020746f6b656e7320746f2072656c65617365",
                        "id": 700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8534:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da32ff09c7fc6f724cfcd17930976a192fa2a62f551a287b46cc72056b32e733",
                          "typeString": "literal_string \"Willer: No ERC20 tokens to release\""
                        },
                        "value": "Willer: No ERC20 tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da32ff09c7fc6f724cfcd17930976a192fa2a62f551a287b46cc72056b32e733",
                          "typeString": "literal_string \"Willer: No ERC20 tokens to release\""
                        }
                      ],
                      "id": 696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8512:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8512:59:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "8512:59:11"
                },
                {
                  "assignments": [
                    704
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 704,
                      "mutability": "mutable",
                      "name": "allowed",
                      "nameLocation": "8586:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "8581:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 703,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8581:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 713,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 707,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "8617:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 710,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8635:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Willer_$1462",
                              "typeString": "contract Willer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Willer_$1462",
                              "typeString": "contract Willer"
                            }
                          ],
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8627:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 708,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8627:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8627:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 705,
                        "name": "tokenERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 682,
                        "src": "8596:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1829",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8607:9:11",
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1806,
                      "src": "8596:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8596:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8581:60:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 715,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 704,
                          "src": "8659:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8670:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8659:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57696c6c65723a204552433230207a65726f20616c6c6f77616e6365",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8673:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68d34019885d73727a94255e97ed2e570b9d8874c8c31e67c52f7b32b20b956d",
                          "typeString": "literal_string \"Willer: ERC20 zero allowance\""
                        },
                        "value": "Willer: ERC20 zero allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68d34019885d73727a94255e97ed2e570b9d8874c8c31e67c52f7b32b20b956d",
                          "typeString": "literal_string \"Willer: ERC20 zero allowance\""
                        }
                      ],
                      "id": 714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8651:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8651:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "8651:53:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 721,
                      "name": "allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 704,
                      "src": "8718:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 722,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 686,
                      "src": "8728:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8718:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 729,
                  "nodeType": "IfStatement",
                  "src": "8714:65:11",
                  "trueBody": {
                    "id": 728,
                    "nodeType": "Block",
                    "src": "8737:42:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 724,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 686,
                            "src": "8751:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 725,
                            "name": "allowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 704,
                            "src": "8761:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8751:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 727,
                        "nodeType": "ExpressionStatement",
                        "src": "8751:17:11"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 791,
                    "nodeType": "Block",
                    "src": "8907:608:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 744,
                            "name": "bequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "8921:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 747,
                                      "name": "testatorToWill",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56,
                                      "src": "8963:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                        "typeString": "mapping(address => struct Willer.Will storage ref)"
                                      }
                                    },
                                    "id": 749,
                                    "indexExpression": {
                                      "id": 748,
                                      "name": "testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 679,
                                      "src": "8978:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8963:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Will_$33_storage",
                                      "typeString": "struct Willer.Will storage ref"
                                    }
                                  },
                                  "id": 750,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8988:6:11",
                                  "memberName": "shares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "8963:31:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 752,
                                "indexExpression": {
                                  "id": 751,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
                                  "src": "8995:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8963:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 753,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "9015:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 755,
                                  "indexExpression": {
                                    "id": 754,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 679,
                                    "src": "9030:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9015:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9040:9:11",
                                "memberName": "sumShares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25,
                                "src": "9015:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 745,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 686,
                                "src": "8931:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8939:6:11",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2439,
                              "src": "8931:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8931:132:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8921:142:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 759,
                        "nodeType": "ExpressionStatement",
                        "src": "8921:142:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 760,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 731,
                            "src": "9141:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 761,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "9146:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 763,
                                  "indexExpression": {
                                    "id": 762,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 679,
                                    "src": "9161:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9146:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 764,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9171:13:11",
                                "memberName": "beneficiaries",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "9146:38:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9185:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "9146:45:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9194:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9146:49:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9141:54:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 777,
                        "nodeType": "IfStatement",
                        "src": "9137:133:11",
                        "trueBody": {
                          "id": 776,
                          "nodeType": "Block",
                          "src": "9197:73:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 769,
                                  "name": "bequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 693,
                                  "src": "9215:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 772,
                                      "name": "testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 679,
                                      "src": "9246:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 770,
                                      "name": "tokenERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 682,
                                      "src": "9225:10:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1829",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 771,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9236:9:11",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1786,
                                    "src": "9225:20:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 773,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9225:30:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9215:40:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 775,
                              "nodeType": "ExpressionStatement",
                              "src": "9215:40:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 781,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "9328:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 782,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "9354:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 784,
                                  "indexExpression": {
                                    "id": 783,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 679,
                                    "src": "9369:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9354:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 785,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9379:13:11",
                                "memberName": "beneficiaries",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "9354:38:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 787,
                              "indexExpression": {
                                "id": 786,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "9393:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9354:41:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 788,
                              "name": "bequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "9413:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 778,
                              "name": "tokenERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "9283:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1829",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9294:16:11",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1887,
                            "src": "9283:27:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1829_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1829_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9283:151:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 790,
                        "nodeType": "ExpressionStatement",
                        "src": "9283:151:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 734,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 731,
                      "src": "8830:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 735,
                            "name": "testatorToWill",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "8834:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                              "typeString": "mapping(address => struct Willer.Will storage ref)"
                            }
                          },
                          "id": 737,
                          "indexExpression": {
                            "id": 736,
                            "name": "testator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "8849:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8834:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Will_$33_storage",
                            "typeString": "struct Willer.Will storage ref"
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8859:13:11",
                        "memberName": "beneficiaries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "8834:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8873:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8834:45:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8830:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 792,
                  "initializationExpression": {
                    "assignments": [
                      731
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8811:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 792,
                        "src": "8806:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8806:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 733,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8815:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8806:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8893:3:11",
                      "subExpression": {
                        "id": 741,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "8893:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 743,
                    "nodeType": "ExpressionStatement",
                    "src": "8893:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "8788:727:11"
                }
              ]
            },
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC20",
            "nameLocation": "8306:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "8336:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8328:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "tokenERC20",
                  "nameLocation": "8361:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "8354:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1829",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 681,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 680,
                      "name": "IERC20",
                      "nameLocations": [
                        "8354:6:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1829,
                      "src": "8354:6:11"
                    },
                    "referencedDeclaration": 1829,
                    "src": "8354:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1829",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8318:94:11"
            },
            "returnParameters": {
              "id": 684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8421:0:11"
            },
            "scope": 1462,
            "src": "8297:1224:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 834,
              "nodeType": "Block",
              "src": "9770:131:11",
              "statements": [
                {
                  "body": {
                    "id": 832,
                    "nodeType": "Block",
                    "src": "9829:66:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 826,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 796,
                              "src": "9856:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 827,
                                "name": "tokenERC20List",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 800,
                                "src": "9866:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 829,
                              "indexExpression": {
                                "id": 828,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "9881:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9866:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1829",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1829",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 825,
                            "name": "releaseERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "9843:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$1829_$returns$__$",
                              "typeString": "function (address,contract IERC20)"
                            }
                          },
                          "id": 830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9843:41:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 831,
                        "nodeType": "ExpressionStatement",
                        "src": "9843:41:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 818,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "9797:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 819,
                        "name": "tokenERC20List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "9801:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      },
                      "id": 820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9816:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9801:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9797:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 833,
                  "initializationExpression": {
                    "assignments": [
                      815
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9790:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 833,
                        "src": "9785:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9785:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 817,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9794:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9785:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9824:3:11",
                      "subExpression": {
                        "id": 822,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 815,
                        "src": "9824:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 824,
                    "nodeType": "ExpressionStatement",
                    "src": "9824:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "9780:115:11"
                }
              ]
            },
            "functionSelector": "a26ea21e",
            "id": 835,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 803,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "9664:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 804,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 802,
                  "name": "willExists",
                  "nameLocations": [
                    "9653:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "9653:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "9653:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 806,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "9693:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 805,
                  "name": "releasable",
                  "nameLocations": [
                    "9682:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "9682:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "9682:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 809,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 796,
                    "src": "9733:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 810,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 808,
                  "name": "executorIsBeneficiary",
                  "nameLocations": [
                    "9711:21:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 346,
                  "src": "9711:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "9711:31:11"
              },
              {
                "arguments": [],
                "id": 812,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 811,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "9751:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "9751:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "9751:14:11"
              }
            ],
            "name": "batchReleaseERC20",
            "nameLocation": "9536:17:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "9571:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "9563:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9563:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "tokenERC20List",
                  "nameLocation": "9607:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 835,
                  "src": "9589:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 798,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 797,
                        "name": "IERC20",
                        "nameLocations": [
                          "9589:6:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1829,
                        "src": "9589:6:11"
                      },
                      "referencedDeclaration": 1829,
                      "src": "9589:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1829",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 799,
                    "nodeType": "ArrayTypeName",
                    "src": "9589:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9553:74:11"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9770:0:11"
            },
            "scope": 1462,
            "src": "9527:374:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 872,
              "nodeType": "Block",
              "src": "10130:141:11",
              "statements": [
                {
                  "body": {
                    "id": 870,
                    "nodeType": "Block",
                    "src": "10189:76:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 864,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "10226:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 865,
                                "name": "tokenERC20List",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 841,
                                "src": "10236:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 867,
                              "indexExpression": {
                                "id": 866,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 853,
                                "src": "10251:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10236:17:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1829",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1829",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 863,
                            "name": "releaseERC20ToTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "10203:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC20_$1829_$returns$__$",
                              "typeString": "function (address,contract IERC20)"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10203:51:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "ExpressionStatement",
                        "src": "10203:51:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 856,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "10157:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 857,
                        "name": "tokenERC20List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "10161:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10176:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10161:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10157:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 871,
                  "initializationExpression": {
                    "assignments": [
                      853
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 853,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10150:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 871,
                        "src": "10145:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10145:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 855,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10154:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10145:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10184:3:11",
                      "subExpression": {
                        "id": 860,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 853,
                        "src": "10184:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 862,
                    "nodeType": "ExpressionStatement",
                    "src": "10184:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "10140:125:11"
                }
              ]
            },
            "functionSelector": "e6728edb",
            "id": 873,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 844,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 837,
                    "src": "10054:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 845,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 843,
                  "name": "willExists",
                  "nameLocations": [
                    "10043:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "10043:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "10043:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 847,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 837,
                    "src": "10093:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 848,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 846,
                  "name": "releasableToTreasury",
                  "nameLocations": [
                    "10072:20:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "10072:20:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "10072:30:11"
              },
              {
                "arguments": [],
                "id": 850,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 849,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "10111:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "10111:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "10111:14:11"
              }
            ],
            "name": "batchReleaseERC20ToTreasury",
            "nameLocation": "9916:27:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 837,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "9961:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "9953:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9953:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "tokenERC20List",
                  "nameLocation": "9997:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 873,
                  "src": "9979:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 839,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 838,
                        "name": "IERC20",
                        "nameLocations": [
                          "9979:6:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1829,
                        "src": "9979:6:11"
                      },
                      "referencedDeclaration": 1829,
                      "src": "9979:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1829",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 840,
                    "nodeType": "ArrayTypeName",
                    "src": "9979:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9943:74:11"
            },
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10130:0:11"
            },
            "scope": 1462,
            "src": "9907:364:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "10418:325:11",
              "statements": [
                {
                  "body": {
                    "id": 908,
                    "nodeType": "Block",
                    "src": "10474:187:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 898,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "10534:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 899,
                                  "name": "testatorToWill",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "10560:14:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                    "typeString": "mapping(address => struct Willer.Will storage ref)"
                                  }
                                },
                                "id": 901,
                                "indexExpression": {
                                  "id": 900,
                                  "name": "testator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 875,
                                  "src": "10575:8:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10560:24:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Will_$33_storage",
                                  "typeString": "struct Willer.Will storage ref"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10585:19:11",
                              "memberName": "beneficiaryOfERC721",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27,
                              "src": "10560:44:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 903,
                                "name": "tokenIdList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 881,
                                "src": "10622:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 905,
                              "indexExpression": {
                                "id": 904,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "10634:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10622:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 895,
                              "name": "tokenERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "10488:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2226",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10500:16:11",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2181,
                            "src": "10488:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10488:162:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 907,
                        "nodeType": "ExpressionStatement",
                        "src": "10488:162:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 888,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 885,
                      "src": "10445:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 889,
                        "name": "tokenIdList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "10449:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10461:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10449:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10445:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 909,
                  "initializationExpression": {
                    "assignments": [
                      885
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 885,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10438:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 909,
                        "src": "10433:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 884,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10433:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 887,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10442:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10433:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10469:3:11",
                      "subExpression": {
                        "id": 892,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 885,
                        "src": "10469:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 894,
                    "nodeType": "ExpressionStatement",
                    "src": "10469:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "10428:233:11"
                }
              ]
            },
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC721",
            "nameLocation": "10286:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 875,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "10317:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10309:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10309:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 878,
                  "mutability": "mutable",
                  "name": "tokenERC721",
                  "nameLocation": "10343:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10335:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2226",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 877,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 876,
                      "name": "IERC721",
                      "nameLocations": [
                        "10335:7:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2226,
                      "src": "10335:7:11"
                    },
                    "referencedDeclaration": 2226,
                    "src": "10335:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2226",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "tokenIdList",
                  "nameLocation": "10380:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10364:27:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 879,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "10364:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 880,
                    "nodeType": "ArrayTypeName",
                    "src": "10364:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10299:98:11"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10418:0:11"
            },
            "scope": 1462,
            "src": "10277:466:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
              "src": "10888:296:11",
              "statements": [
                {
                  "body": {
                    "id": 943,
                    "nodeType": "Block",
                    "src": "10944:158:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 936,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 913,
                              "src": "11004:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 937,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "11030:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 938,
                                "name": "tokenIdList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "11063:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 940,
                              "indexExpression": {
                                "id": 939,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "11075:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11063:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 933,
                              "name": "tokenERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 916,
                              "src": "10958:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2226",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10970:16:11",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2181,
                            "src": "10958:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10958:133:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "10958:133:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 926,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 923,
                      "src": "10915:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 927,
                        "name": "tokenIdList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 919,
                        "src": "10919:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10931:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10919:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10915:22:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 944,
                  "initializationExpression": {
                    "assignments": [
                      923
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10908:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "10903:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10903:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 925,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10912:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10903:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10939:3:11",
                      "subExpression": {
                        "id": 930,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "10939:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 932,
                    "nodeType": "ExpressionStatement",
                    "src": "10939:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "10898:204:11"
                }
              ]
            },
            "id": 946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC721ToTreasury",
            "nameLocation": "10758:23:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 913,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "10799:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "10791:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10791:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "tokenERC721",
                  "nameLocation": "10825:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "10817:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$2226",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 915,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 914,
                      "name": "IERC721",
                      "nameLocations": [
                        "10817:7:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2226,
                      "src": "10817:7:11"
                    },
                    "referencedDeclaration": 2226,
                    "src": "10817:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$2226",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 919,
                  "mutability": "mutable",
                  "name": "tokenIdList",
                  "nameLocation": "10862:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "10846:27:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 917,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "10846:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 918,
                    "nodeType": "ArrayTypeName",
                    "src": "10846:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10781:98:11"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10888:0:11"
            },
            "scope": 1462,
            "src": "10749:435:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "11476:151:11",
              "statements": [
                {
                  "body": {
                    "id": 991,
                    "nodeType": "Block",
                    "src": "11536:85:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 982,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "11564:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 983,
                                "name": "tokenERC721List",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 952,
                                "src": "11574:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                                  "typeString": "contract IERC721[] calldata"
                                }
                              },
                              "id": 985,
                              "indexExpression": {
                                "id": 984,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "11590:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11574:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2226",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 986,
                                "name": "tokenIdLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 956,
                                "src": "11594:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata[] calldata"
                                }
                              },
                              "id": 988,
                              "indexExpression": {
                                "id": 987,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 971,
                                "src": "11607:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11594:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC721_$2226",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 981,
                            "name": "releaseERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "11550:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC721_$2226_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (address,contract IERC721,uint256[] calldata)"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11550:60:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 990,
                        "nodeType": "ExpressionStatement",
                        "src": "11550:60:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 974,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 971,
                      "src": "11503:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 975,
                        "name": "tokenERC721List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "11507:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                          "typeString": "contract IERC721[] calldata"
                        }
                      },
                      "id": 976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11523:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11507:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11503:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 992,
                  "initializationExpression": {
                    "assignments": [
                      971
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 971,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11496:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 992,
                        "src": "11491:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11491:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 973,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11500:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11491:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11531:3:11",
                      "subExpression": {
                        "id": 978,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 971,
                        "src": "11531:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 980,
                    "nodeType": "ExpressionStatement",
                    "src": "11531:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "11486:135:11"
                }
              ]
            },
            "functionSelector": "ac8bc77e",
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 959,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 948,
                    "src": "11370:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 960,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 958,
                  "name": "willExists",
                  "nameLocations": [
                    "11359:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "11359:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11359:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 962,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 948,
                    "src": "11399:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 963,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 961,
                  "name": "releasable",
                  "nameLocations": [
                    "11388:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "11388:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11388:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 965,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 948,
                    "src": "11439:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 966,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 964,
                  "name": "executorIsBeneficiary",
                  "nameLocations": [
                    "11417:21:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 346,
                  "src": "11417:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11417:31:11"
              },
              {
                "arguments": [],
                "id": 968,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 967,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11457:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "11457:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11457:14:11"
              }
            ],
            "name": "batchReleaseERC721",
            "nameLocation": "11199:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "11235:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "11227:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11227:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "tokenERC721List",
                  "nameLocation": "11272:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "11253:34:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                    "typeString": "contract IERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 950,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 949,
                        "name": "IERC721",
                        "nameLocations": [
                          "11253:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2226,
                        "src": "11253:7:11"
                      },
                      "referencedDeclaration": 2226,
                      "src": "11253:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$2226",
                        "typeString": "contract IERC721"
                      }
                    },
                    "id": 951,
                    "nodeType": "ArrayTypeName",
                    "src": "11253:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_storage_ptr",
                      "typeString": "contract IERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 956,
                  "mutability": "mutable",
                  "name": "tokenIdLists",
                  "nameLocation": "11315:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "11297:30:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 953,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11297:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 954,
                      "nodeType": "ArrayTypeName",
                      "src": "11297:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 955,
                    "nodeType": "ArrayTypeName",
                    "src": "11297:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11217:116:11"
            },
            "returnParameters": {
              "id": 969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11476:0:11"
            },
            "scope": 1462,
            "src": "11190:437:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "11881:223:11",
              "statements": [
                {
                  "body": {
                    "id": 1036,
                    "nodeType": "Block",
                    "src": "11941:157:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1027,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 996,
                              "src": "11996:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1028,
                                "name": "tokenERC721List",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1000,
                                "src": "12022:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                                  "typeString": "contract IERC721[] calldata"
                                }
                              },
                              "id": 1030,
                              "indexExpression": {
                                "id": 1029,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "12038:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12022:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$2226",
                                "typeString": "contract IERC721"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1031,
                                "name": "tokenIdLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1004,
                                "src": "12058:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata[] calldata"
                                }
                              },
                              "id": 1033,
                              "indexExpression": {
                                "id": 1032,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "12071:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12058:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC721_$2226",
                                "typeString": "contract IERC721"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 1026,
                            "name": "releaseERC721ToTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "11955:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC721_$2226_$_t_array$_t_uint256_$dyn_calldata_ptr_$returns$__$",
                              "typeString": "function (address,contract IERC721,uint256[] calldata)"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11955:132:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1035,
                        "nodeType": "ExpressionStatement",
                        "src": "11955:132:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1019,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "11908:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1020,
                        "name": "tokenERC721List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "11912:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                          "typeString": "contract IERC721[] calldata"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11928:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11912:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11908:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1037,
                  "initializationExpression": {
                    "assignments": [
                      1016
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11901:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "11896:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11896:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1018,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11905:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11896:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11936:3:11",
                      "subExpression": {
                        "id": 1023,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "11936:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1025,
                    "nodeType": "ExpressionStatement",
                    "src": "11936:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "11891:207:11"
                }
              ]
            },
            "functionSelector": "d9732f4d",
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1007,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 996,
                    "src": "11812:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1008,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1006,
                  "name": "willExists",
                  "nameLocations": [
                    "11801:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "11801:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11801:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 1010,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 996,
                    "src": "11848:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1011,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1009,
                  "name": "releasableToTreasury",
                  "nameLocations": [
                    "11827:20:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "11827:20:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11827:30:11"
              },
              {
                "arguments": [],
                "id": 1013,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1012,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "11862:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "11862:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "11862:14:11"
              }
            ],
            "name": "batchReleaseERC721ToTreasury",
            "nameLocation": "11642:28:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "11688:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "11680:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11680:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1000,
                  "mutability": "mutable",
                  "name": "tokenERC721List",
                  "nameLocation": "11725:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "11706:34:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                    "typeString": "contract IERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 998,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 997,
                        "name": "IERC721",
                        "nameLocations": [
                          "11706:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2226,
                        "src": "11706:7:11"
                      },
                      "referencedDeclaration": 2226,
                      "src": "11706:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$2226",
                        "typeString": "contract IERC721"
                      }
                    },
                    "id": 999,
                    "nodeType": "ArrayTypeName",
                    "src": "11706:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_storage_ptr",
                      "typeString": "contract IERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1004,
                  "mutability": "mutable",
                  "name": "tokenIdLists",
                  "nameLocation": "11768:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "11750:30:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1001,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11750:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1002,
                      "nodeType": "ArrayTypeName",
                      "src": "11750:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1003,
                    "nodeType": "ArrayTypeName",
                    "src": "11750:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11670:116:11"
            },
            "returnParameters": {
              "id": 1014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11881:0:11"
            },
            "scope": 1462,
            "src": "11633:471:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1130,
              "nodeType": "Block",
              "src": "12240:909:11",
              "statements": [
                {
                  "assignments": [
                    1050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1050,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "12255:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1130,
                      "src": "12250:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1049,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12250:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1056,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1053,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1041,
                        "src": "12288:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1054,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "12298:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1051,
                        "name": "tokenERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "12265:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$1751",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12278:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1689,
                      "src": "12265:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12265:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12250:56:11"
                },
                {
                  "assignments": [
                    1058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1058,
                      "mutability": "mutable",
                      "name": "bequest",
                      "nameLocation": "12321:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1130,
                      "src": "12316:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1057,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12316:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1060,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12331:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12316:16:11"
                },
                {
                  "body": {
                    "id": 1128,
                    "nodeType": "Block",
                    "src": "12461:603:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1075,
                            "name": "bequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1058,
                            "src": "12475:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1078,
                                      "name": "testatorToWill",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56,
                                      "src": "12517:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                        "typeString": "mapping(address => struct Willer.Will storage ref)"
                                      }
                                    },
                                    "id": 1080,
                                    "indexExpression": {
                                      "id": 1079,
                                      "name": "testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1041,
                                      "src": "12532:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12517:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Will_$33_storage",
                                      "typeString": "struct Willer.Will storage ref"
                                    }
                                  },
                                  "id": 1081,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12542:6:11",
                                  "memberName": "shares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "12517:31:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1083,
                                "indexExpression": {
                                  "id": 1082,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1062,
                                  "src": "12549:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12517:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1084,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "12569:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 1086,
                                  "indexExpression": {
                                    "id": 1085,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1041,
                                    "src": "12584:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12569:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12594:9:11",
                                "memberName": "sumShares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25,
                                "src": "12569:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1076,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1050,
                                "src": "12485:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12493:6:11",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2439,
                              "src": "12485:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12485:132:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12475:142:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1090,
                        "nodeType": "ExpressionStatement",
                        "src": "12475:142:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1091,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "12695:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1092,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "12700:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 1094,
                                  "indexExpression": {
                                    "id": 1093,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1041,
                                    "src": "12715:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12700:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 1095,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12725:13:11",
                                "memberName": "beneficiaries",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "12700:38:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12739:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "12700:45:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12748:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12700:49:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12695:54:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1109,
                        "nodeType": "IfStatement",
                        "src": "12691:144:11",
                        "trueBody": {
                          "id": 1108,
                          "nodeType": "Block",
                          "src": "12751:84:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1100,
                                  "name": "bequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1058,
                                  "src": "12769:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1103,
                                      "name": "testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1041,
                                      "src": "12802:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1104,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1046,
                                      "src": "12812:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1101,
                                      "name": "tokenERC1155",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1044,
                                      "src": "12779:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC1155_$1751",
                                        "typeString": "contract IERC1155"
                                      }
                                    },
                                    "id": 1102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12792:9:11",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1689,
                                    "src": "12779:22:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12779:41:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12769:51:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1107,
                              "nodeType": "ExpressionStatement",
                              "src": "12769:51:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1113,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1041,
                              "src": "12895:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1114,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "12921:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 1116,
                                  "indexExpression": {
                                    "id": 1115,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1041,
                                    "src": "12936:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12921:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12946:13:11",
                                "memberName": "beneficiaries",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "12921:38:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1119,
                              "indexExpression": {
                                "id": 1118,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1062,
                                "src": "12960:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12921:41:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1120,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1046,
                              "src": "12980:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1121,
                              "name": "bequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1058,
                              "src": "13005:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "",
                                  "id": 1124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13036:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "id": 1123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13030:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1122,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13030:5:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13030:9:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1110,
                              "name": "tokenERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "12848:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 1112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12861:16:11",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1734,
                            "src": "12848:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12848:205:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "ExpressionStatement",
                        "src": "12848:205:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1065,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1062,
                      "src": "12384:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1066,
                            "name": "testatorToWill",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "12388:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                              "typeString": "mapping(address => struct Willer.Will storage ref)"
                            }
                          },
                          "id": 1068,
                          "indexExpression": {
                            "id": 1067,
                            "name": "testator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1041,
                            "src": "12403:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12388:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Will_$33_storage",
                            "typeString": "struct Willer.Will storage ref"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12413:13:11",
                        "memberName": "beneficiaries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "12388:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12427:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12388:45:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12384:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1129,
                  "initializationExpression": {
                    "assignments": [
                      1062
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1062,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12365:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "12360:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12360:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1064,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12369:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12360:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12447:3:11",
                      "subExpression": {
                        "id": 1072,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "12447:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1074,
                    "nodeType": "ExpressionStatement",
                    "src": "12447:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "12342:722:11"
                }
              ]
            },
            "id": 1131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC1155",
            "nameLocation": "12119:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "12151:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "12143:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12143:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "tokenERC1155",
                  "nameLocation": "12178:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "12169:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$1751",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 1043,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1042,
                      "name": "IERC1155",
                      "nameLocations": [
                        "12169:8:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1751,
                      "src": "12169:8:11"
                    },
                    "referencedDeclaration": 1751,
                    "src": "12169:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$1751",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12205:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "12200:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12200:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12133:85:11"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12240:0:11"
            },
            "scope": 1462,
            "src": "12110:1039:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1217,
              "nodeType": "Block",
              "src": "13282:883:11",
              "statements": [
                {
                  "assignments": [
                    1142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1142,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "13297:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1217,
                      "src": "13292:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1141,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13292:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1148,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1145,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1133,
                        "src": "13330:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1146,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "13340:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1143,
                        "name": "tokenERC1155",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1136,
                        "src": "13307:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$1751",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13320:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1689,
                      "src": "13307:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13307:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13292:56:11"
                },
                {
                  "assignments": [
                    1150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "bequest",
                      "nameLocation": "13363:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1217,
                      "src": "13358:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13358:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1152,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13373:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13358:16:11"
                },
                {
                  "body": {
                    "id": 1215,
                    "nodeType": "Block",
                    "src": "13503:577:11",
                    "statements": [
                      {
                        "expression": {
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1167,
                            "name": "bequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1150,
                            "src": "13517:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1170,
                                      "name": "testatorToWill",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56,
                                      "src": "13559:14:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                        "typeString": "mapping(address => struct Willer.Will storage ref)"
                                      }
                                    },
                                    "id": 1172,
                                    "indexExpression": {
                                      "id": 1171,
                                      "name": "testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1133,
                                      "src": "13574:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13559:24:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Will_$33_storage",
                                      "typeString": "struct Willer.Will storage ref"
                                    }
                                  },
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13584:6:11",
                                  "memberName": "shares",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 32,
                                  "src": "13559:31:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 1175,
                                "indexExpression": {
                                  "id": 1174,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "13591:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13559:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1176,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "13611:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 1178,
                                  "indexExpression": {
                                    "id": 1177,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1133,
                                    "src": "13626:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13611:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13636:9:11",
                                "memberName": "sumShares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25,
                                "src": "13611:34:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1168,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "13527:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13535:6:11",
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2439,
                              "src": "13527:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13527:132:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13517:142:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "13517:142:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1183,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "13737:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1184,
                                    "name": "testatorToWill",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56,
                                    "src": "13742:14:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                                      "typeString": "mapping(address => struct Willer.Will storage ref)"
                                    }
                                  },
                                  "id": 1186,
                                  "indexExpression": {
                                    "id": 1185,
                                    "name": "testator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1133,
                                    "src": "13757:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13742:24:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Will_$33_storage",
                                    "typeString": "struct Willer.Will storage ref"
                                  }
                                },
                                "id": 1187,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13767:13:11",
                                "memberName": "beneficiaries",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23,
                                "src": "13742:38:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13781:6:11",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "13742:45:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13790:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "13742:49:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13737:54:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1201,
                        "nodeType": "IfStatement",
                        "src": "13733:144:11",
                        "trueBody": {
                          "id": 1200,
                          "nodeType": "Block",
                          "src": "13793:84:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 1198,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1192,
                                  "name": "bequest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1150,
                                  "src": "13811:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 1195,
                                      "name": "testator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1133,
                                      "src": "13844:8:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1196,
                                      "name": "tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1138,
                                      "src": "13854:7:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1193,
                                      "name": "tokenERC1155",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1136,
                                      "src": "13821:12:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC1155_$1751",
                                        "typeString": "contract IERC1155"
                                      }
                                    },
                                    "id": 1194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "13834:9:11",
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1689,
                                    "src": "13821:22:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (address,uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13821:41:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13811:51:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1199,
                              "nodeType": "ExpressionStatement",
                              "src": "13811:51:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1205,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "13937:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1206,
                              "name": "treasuryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "13963:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1207,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1138,
                              "src": "13996:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1208,
                              "name": "bequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "14021:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "",
                                  "id": 1211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14052:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14046:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1209,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14046:5:11",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14046:9:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1202,
                              "name": "tokenERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1136,
                              "src": "13890:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13903:16:11",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1734,
                            "src": "13890:29:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external"
                            }
                          },
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13890:179:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1214,
                        "nodeType": "ExpressionStatement",
                        "src": "13890:179:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1157,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "13426:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1158,
                            "name": "testatorToWill",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "13430:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Will_$33_storage_$",
                              "typeString": "mapping(address => struct Willer.Will storage ref)"
                            }
                          },
                          "id": 1160,
                          "indexExpression": {
                            "id": 1159,
                            "name": "testator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1133,
                            "src": "13445:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13430:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Will_$33_storage",
                            "typeString": "struct Willer.Will storage ref"
                          }
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13455:13:11",
                        "memberName": "beneficiaries",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 23,
                        "src": "13430:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13469:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13430:45:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13426:49:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1216,
                  "initializationExpression": {
                    "assignments": [
                      1154
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13407:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1216,
                        "src": "13402:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13402:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1156,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13411:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13402:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13489:3:11",
                      "subExpression": {
                        "id": 1164,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "13489:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1166,
                    "nodeType": "ExpressionStatement",
                    "src": "13489:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "13384:696:11"
                }
              ]
            },
            "id": 1218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseERC1155ToTreasury",
            "nameLocation": "13164:24:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "13206:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1218,
                  "src": "13198:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13198:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "tokenERC1155",
                  "nameLocation": "13233:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1218,
                  "src": "13224:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$1751",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 1135,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1134,
                      "name": "IERC1155",
                      "nameLocations": [
                        "13224:8:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1751,
                      "src": "13224:8:11"
                    },
                    "referencedDeclaration": 1751,
                    "src": "13224:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$1751",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13260:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1218,
                  "src": "13255:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13255:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13188:85:11"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13282:0:11"
            },
            "scope": 1462,
            "src": "13155:1010:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "14443:143:11",
              "statements": [
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "14500:80:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1252,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "14529:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1253,
                              "name": "tokenERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1223,
                              "src": "14539:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1254,
                                "name": "tokenIdLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1226,
                                "src": "14553:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1256,
                              "indexExpression": {
                                "id": 1255,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1241,
                                "src": "14566:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14553:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1251,
                            "name": "releaseERC1155",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1131,
                            "src": "14514:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC1155_$1751_$_t_uint256_$returns$__$",
                              "typeString": "function (address,contract IERC1155,uint256)"
                            }
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14514:55:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1258,
                        "nodeType": "ExpressionStatement",
                        "src": "14514:55:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1244,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "14470:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1245,
                        "name": "tokenIdLists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1226,
                        "src": "14474:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 1246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14487:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14474:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14470:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1260,
                  "initializationExpression": {
                    "assignments": [
                      1241
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1241,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14463:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "14458:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14458:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1243,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14467:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14458:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14495:3:11",
                      "subExpression": {
                        "id": 1248,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1241,
                        "src": "14495:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1250,
                    "nodeType": "ExpressionStatement",
                    "src": "14495:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "14453:127:11"
                }
              ]
            },
            "functionSelector": "7ce752c6",
            "id": 1262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1229,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1220,
                    "src": "14337:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1230,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1228,
                  "name": "willExists",
                  "nameLocations": [
                    "14326:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "14326:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14326:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 1232,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1220,
                    "src": "14366:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1233,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1231,
                  "name": "releasable",
                  "nameLocations": [
                    "14355:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73,
                  "src": "14355:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14355:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 1235,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1220,
                    "src": "14406:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1236,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1234,
                  "name": "executorIsBeneficiary",
                  "nameLocations": [
                    "14384:21:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 346,
                  "src": "14384:21:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14384:31:11"
              },
              {
                "arguments": [],
                "id": 1238,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1237,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "14424:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "14424:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14424:14:11"
              }
            ],
            "name": "batchReleaseERC1155",
            "nameLocation": "14180:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "14217:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "14209:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14209:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "tokenERC1155",
                  "nameLocation": "14244:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "14235:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$1751",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 1222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1221,
                      "name": "IERC1155",
                      "nameLocations": [
                        "14235:8:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1751,
                      "src": "14235:8:11"
                    },
                    "referencedDeclaration": 1751,
                    "src": "14235:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$1751",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1226,
                  "mutability": "mutable",
                  "name": "tokenIdLists",
                  "nameLocation": "14282:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "14266:28:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1224,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "14266:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1225,
                    "nodeType": "ArrayTypeName",
                    "src": "14266:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14199:101:11"
            },
            "returnParameters": {
              "id": 1239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14443:0:11"
            },
            "scope": 1462,
            "src": "14171:415:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1302,
              "nodeType": "Block",
              "src": "14827:215:11",
              "statements": [
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "14884:152:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1293,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "14940:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1294,
                              "name": "tokenERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "14966:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1295,
                                "name": "tokenIdLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1270,
                                "src": "14996:12:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 1297,
                              "indexExpression": {
                                "id": 1296,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1282,
                                "src": "15009:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14996:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1292,
                            "name": "releaseERC1155ToTreasury",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "14898:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IERC1155_$1751_$_t_uint256_$returns$__$",
                              "typeString": "function (address,contract IERC1155,uint256)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14898:127:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "ExpressionStatement",
                        "src": "14898:127:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1285,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1282,
                      "src": "14854:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1286,
                        "name": "tokenIdLists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1270,
                        "src": "14858:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      },
                      "id": 1287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14871:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14858:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14854:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1301,
                  "initializationExpression": {
                    "assignments": [
                      1282
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1282,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14847:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1301,
                        "src": "14842:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14842:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1284,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14851:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14842:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14879:3:11",
                      "subExpression": {
                        "id": 1289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "14879:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1291,
                    "nodeType": "ExpressionStatement",
                    "src": "14879:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "14837:199:11"
                }
              ]
            },
            "functionSelector": "341b46dd",
            "id": 1303,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1273,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1264,
                    "src": "14757:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1274,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1272,
                  "name": "willExists",
                  "nameLocations": [
                    "14746:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "14746:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14746:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 1276,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1264,
                    "src": "14793:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1275,
                  "name": "releasableToTreasury",
                  "nameLocations": [
                    "14772:20:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "14772:20:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14772:30:11"
              },
              {
                "arguments": [],
                "id": 1279,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1278,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "14808:12:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "14808:12:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "14808:14:11"
              }
            ],
            "name": "batchReleaseERC1155ToTreasury",
            "nameLocation": "14601:29:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "14648:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "14640:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14640:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "tokenERC1155",
                  "nameLocation": "14675:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "14666:21:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC1155_$1751",
                    "typeString": "contract IERC1155"
                  },
                  "typeName": {
                    "id": 1266,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1265,
                      "name": "IERC1155",
                      "nameLocations": [
                        "14666:8:11"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1751,
                      "src": "14666:8:11"
                    },
                    "referencedDeclaration": 1751,
                    "src": "14666:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC1155_$1751",
                      "typeString": "contract IERC1155"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "tokenIdLists",
                  "nameLocation": "14713:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1303,
                  "src": "14697:28:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1268,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "14697:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1269,
                    "nodeType": "ArrayTypeName",
                    "src": "14697:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14630:101:11"
            },
            "returnParameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14827:0:11"
            },
            "scope": 1462,
            "src": "14592:450:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1368,
              "nodeType": "Block",
              "src": "15336:371:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1331,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "15369:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1332,
                        "name": "tokenERC20List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1309,
                        "src": "15379:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 1328,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "15346:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Willer_$1462",
                          "typeString": "contract Willer"
                        }
                      },
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15351:17:11",
                      "memberName": "batchReleaseERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 835,
                      "src": "15346:22:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IERC20_$1829_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IERC20[] memory) external"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15346:48:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1334,
                  "nodeType": "ExpressionStatement",
                  "src": "15346:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1338,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1305,
                        "src": "15428:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1339,
                        "name": "tokenERC721List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "15438:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                          "typeString": "contract IERC721[] calldata"
                        }
                      },
                      {
                        "id": 1340,
                        "name": "ERC721tokenIdLists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "15455:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                          "typeString": "contract IERC721[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 1335,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "15404:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Willer_$1462",
                          "typeString": "contract Willer"
                        }
                      },
                      "id": 1337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15409:18:11",
                      "memberName": "batchReleaseERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 994,
                      "src": "15404:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IERC721_$2226_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IERC721[] memory,uint256[] memory[] memory) external"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15404:70:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "15404:70:11"
                },
                {
                  "body": {
                    "id": 1366,
                    "nodeType": "Block",
                    "src": "15535:166:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1357,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "15591:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1358,
                                "name": "tokenERC1155List",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1317,
                                "src": "15617:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_calldata_ptr",
                                  "typeString": "contract IERC1155[] calldata"
                                }
                              },
                              "id": 1360,
                              "indexExpression": {
                                "id": 1359,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1344,
                                "src": "15634:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15617:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1361,
                                "name": "ERC1155tokenIdLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1325,
                                "src": "15654:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata[] calldata"
                                }
                              },
                              "id": 1363,
                              "indexExpression": {
                                "id": 1362,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1344,
                                "src": "15674:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15654:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "expression": {
                              "id": 1354,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15549:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Willer_$1462",
                                "typeString": "contract Willer"
                              }
                            },
                            "id": 1356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15554:19:11",
                            "memberName": "batchReleaseERC1155",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1262,
                            "src": "15549:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC1155_$1751_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,contract IERC1155,uint256[] memory) external"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15549:141:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1365,
                        "nodeType": "ExpressionStatement",
                        "src": "15549:141:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1347,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "15501:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1348,
                        "name": "tokenERC1155List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "15505:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_calldata_ptr",
                          "typeString": "contract IERC1155[] calldata"
                        }
                      },
                      "id": 1349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15522:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "15505:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15501:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1367,
                  "initializationExpression": {
                    "assignments": [
                      1344
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1344,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "15494:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1367,
                        "src": "15489:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15489:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1346,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15498:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15489:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15530:3:11",
                      "subExpression": {
                        "id": 1351,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1344,
                        "src": "15530:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1353,
                    "nodeType": "ExpressionStatement",
                    "src": "15530:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "15484:217:11"
                }
              ]
            },
            "functionSelector": "fe36b4c8",
            "id": 1369,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "batchRelease",
            "nameLocation": "15057:12:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1305,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "15087:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "15079:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15079:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1309,
                  "mutability": "mutable",
                  "name": "tokenERC20List",
                  "nameLocation": "15123:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "15105:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1307,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1306,
                        "name": "IERC20",
                        "nameLocations": [
                          "15105:6:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1829,
                        "src": "15105:6:11"
                      },
                      "referencedDeclaration": 1829,
                      "src": "15105:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1829",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 1308,
                    "nodeType": "ArrayTypeName",
                    "src": "15105:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "tokenERC721List",
                  "nameLocation": "15166:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "15147:34:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                    "typeString": "contract IERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1311,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1310,
                        "name": "IERC721",
                        "nameLocations": [
                          "15147:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2226,
                        "src": "15147:7:11"
                      },
                      "referencedDeclaration": 2226,
                      "src": "15147:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$2226",
                        "typeString": "contract IERC721"
                      }
                    },
                    "id": 1312,
                    "nodeType": "ArrayTypeName",
                    "src": "15147:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_storage_ptr",
                      "typeString": "contract IERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "tokenERC1155List",
                  "nameLocation": "15211:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "15191:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_calldata_ptr",
                    "typeString": "contract IERC1155[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1315,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1314,
                        "name": "IERC1155",
                        "nameLocations": [
                          "15191:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1751,
                        "src": "15191:8:11"
                      },
                      "referencedDeclaration": 1751,
                      "src": "15191:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$1751",
                        "typeString": "contract IERC1155"
                      }
                    },
                    "id": 1316,
                    "nodeType": "ArrayTypeName",
                    "src": "15191:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_storage_ptr",
                      "typeString": "contract IERC1155[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1321,
                  "mutability": "mutable",
                  "name": "ERC721tokenIdLists",
                  "nameLocation": "15255:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "15237:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1318,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15237:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1319,
                      "nodeType": "ArrayTypeName",
                      "src": "15237:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1320,
                    "nodeType": "ArrayTypeName",
                    "src": "15237:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "ERC1155tokenIdLists",
                  "nameLocation": "15301:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1369,
                  "src": "15283:37:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1322,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15283:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1323,
                      "nodeType": "ArrayTypeName",
                      "src": "15283:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1324,
                    "nodeType": "ArrayTypeName",
                    "src": "15283:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15069:257:11"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15336:0:11"
            },
            "scope": 1462,
            "src": "15048:659:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "16063:447:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1403,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "16106:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1404,
                        "name": "tokenERC20List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1375,
                        "src": "16116:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 1400,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "16073:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Willer_$1462",
                          "typeString": "contract Willer"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16078:27:11",
                      "memberName": "batchReleaseERC20ToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 873,
                      "src": "16073:32:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IERC20_$1829_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IERC20[] memory) external"
                      }
                    },
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16073:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "16073:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1410,
                        "name": "testator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1371,
                        "src": "16188:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1411,
                        "name": "tokenERC721List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1379,
                        "src": "16210:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                          "typeString": "contract IERC721[] calldata"
                        }
                      },
                      {
                        "id": 1412,
                        "name": "ERC721tokenIdLists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "16239:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                          "typeString": "contract IERC721[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 1407,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "16141:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Willer_$1462",
                          "typeString": "contract Willer"
                        }
                      },
                      "id": 1409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16146:28:11",
                      "memberName": "batchReleaseERC721ToTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1039,
                      "src": "16141:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IERC721_$2226_$dyn_memory_ptr_$_t_array$_t_array$_t_uint256_$dyn_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IERC721[] memory,uint256[] memory[] memory) external"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16141:126:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1414,
                  "nodeType": "ExpressionStatement",
                  "src": "16141:126:11"
                },
                {
                  "body": {
                    "id": 1438,
                    "nodeType": "Block",
                    "src": "16328:176:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1429,
                              "name": "testator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1371,
                              "src": "16394:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1430,
                                "name": "tokenERC1155List",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1383,
                                "src": "16420:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_calldata_ptr",
                                  "typeString": "contract IERC1155[] calldata"
                                }
                              },
                              "id": 1432,
                              "indexExpression": {
                                "id": 1431,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1416,
                                "src": "16437:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16420:19:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1433,
                                "name": "ERC1155tokenIdLists",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1391,
                                "src": "16457:19:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata[] calldata"
                                }
                              },
                              "id": 1435,
                              "indexExpression": {
                                "id": 1434,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1416,
                                "src": "16477:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16457:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC1155_$1751",
                                "typeString": "contract IERC1155"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "expression": {
                              "id": 1426,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "16342:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Willer_$1462",
                                "typeString": "contract Willer"
                              }
                            },
                            "id": 1428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16347:29:11",
                            "memberName": "batchReleaseERC1155ToTreasury",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1303,
                            "src": "16342:34:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC1155_$1751_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,contract IERC1155,uint256[] memory) external"
                            }
                          },
                          "id": 1436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16342:151:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1437,
                        "nodeType": "ExpressionStatement",
                        "src": "16342:151:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1419,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1416,
                      "src": "16294:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1420,
                        "name": "tokenERC1155List",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1383,
                        "src": "16298:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_calldata_ptr",
                          "typeString": "contract IERC1155[] calldata"
                        }
                      },
                      "id": 1421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16315:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16298:23:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16294:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1439,
                  "initializationExpression": {
                    "assignments": [
                      1416
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "16287:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "16282:6:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16282:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1418,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16291:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16282:10:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16323:3:11",
                      "subExpression": {
                        "id": 1423,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1416,
                        "src": "16323:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1425,
                    "nodeType": "ExpressionStatement",
                    "src": "16323:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "16277:227:11"
                }
              ]
            },
            "functionSelector": "8b61e1aa",
            "id": 1441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1394,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1371,
                    "src": "16022:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1395,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1393,
                  "name": "willExists",
                  "nameLocations": [
                    "16011:10:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "16011:10:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "16011:20:11"
              },
              {
                "arguments": [
                  {
                    "id": 1397,
                    "name": "testator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1371,
                    "src": "16053:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1398,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1396,
                  "name": "releasableToTreasury",
                  "nameLocations": [
                    "16032:20:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "16032:20:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "16032:30:11"
              }
            ],
            "name": "batchReleaseToTreasury",
            "nameLocation": "15722:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "testator",
                  "nameLocation": "15762:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "15754:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15754:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "tokenERC20List",
                  "nameLocation": "15798:14:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "15780:32:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1373,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1372,
                        "name": "IERC20",
                        "nameLocations": [
                          "15780:6:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1829,
                        "src": "15780:6:11"
                      },
                      "referencedDeclaration": 1829,
                      "src": "15780:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1829",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 1374,
                    "nodeType": "ArrayTypeName",
                    "src": "15780:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$1829_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1379,
                  "mutability": "mutable",
                  "name": "tokenERC721List",
                  "nameLocation": "15841:15:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "15822:34:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_calldata_ptr",
                    "typeString": "contract IERC721[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1377,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1376,
                        "name": "IERC721",
                        "nameLocations": [
                          "15822:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2226,
                        "src": "15822:7:11"
                      },
                      "referencedDeclaration": 2226,
                      "src": "15822:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$2226",
                        "typeString": "contract IERC721"
                      }
                    },
                    "id": 1378,
                    "nodeType": "ArrayTypeName",
                    "src": "15822:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC721_$2226_$dyn_storage_ptr",
                      "typeString": "contract IERC721[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "tokenERC1155List",
                  "nameLocation": "15886:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "15866:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_calldata_ptr",
                    "typeString": "contract IERC1155[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1381,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1380,
                        "name": "IERC1155",
                        "nameLocations": [
                          "15866:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1751,
                        "src": "15866:8:11"
                      },
                      "referencedDeclaration": 1751,
                      "src": "15866:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC1155_$1751",
                        "typeString": "contract IERC1155"
                      }
                    },
                    "id": 1382,
                    "nodeType": "ArrayTypeName",
                    "src": "15866:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC1155_$1751_$dyn_storage_ptr",
                      "typeString": "contract IERC1155[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1387,
                  "mutability": "mutable",
                  "name": "ERC721tokenIdLists",
                  "nameLocation": "15930:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "15912:36:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1384,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15912:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1385,
                      "nodeType": "ArrayTypeName",
                      "src": "15912:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1386,
                    "nodeType": "ArrayTypeName",
                    "src": "15912:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "ERC1155tokenIdLists",
                  "nameLocation": "15976:19:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "15958:37:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 1388,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15958:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1389,
                      "nodeType": "ArrayTypeName",
                      "src": "15958:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 1390,
                    "nodeType": "ArrayTypeName",
                    "src": "15958:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15744:257:11"
            },
            "returnParameters": {
              "id": 1399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16063:0:11"
            },
            "scope": 1462,
            "src": "15713:797:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1452,
              "nodeType": "Block",
              "src": "16587:51:11",
              "statements": [
                {
                  "expression": {
                    "id": 1450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1448,
                      "name": "treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "16597:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1449,
                      "name": "_treasuryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1443,
                      "src": "16615:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16597:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1451,
                  "nodeType": "ExpressionStatement",
                  "src": "16597:34:11"
                }
              ]
            },
            "functionSelector": "6605bfda",
            "id": 1453,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1446,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1445,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "16577:9:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1494,
                  "src": "16577:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "16577:9:11"
              }
            ],
            "name": "setTreasuryAddress",
            "nameLocation": "16525:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "_treasuryAddress",
                  "nameLocation": "16552:16:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1453,
                  "src": "16544:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16544:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16543:26:11"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16587:0:11"
            },
            "scope": 1462,
            "src": "16516:122:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1460,
              "nodeType": "Block",
              "src": "16704:39:11",
              "statements": [
                {
                  "expression": {
                    "id": 1458,
                    "name": "treasuryAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "16721:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1457,
                  "id": 1459,
                  "nodeType": "Return",
                  "src": "16714:22:11"
                }
              ]
            },
            "functionSelector": "e0024604",
            "id": 1461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTreasuryAddress",
            "nameLocation": "16653:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16671:2:11"
            },
            "returnParameters": {
              "id": 1457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1461,
                  "src": "16695:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16695:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16694:9:11"
            },
            "scope": 1462,
            "src": "16644:99:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1463,
        "src": "520:16225:11",
        "usedErrors": []
      }
    ],
    "src": "32:16714:11"
  },
  "bytecode": "6080604052603c6002819055600355600a600455631dcd6500600555600680546001600160a01b031916301790553480156200003a57600080fd5b50620000463362000050565b60018055620000a0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61349980620000b06000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80639181141a116100de578063caee863e11610097578063e6728edb11610071578063e6728edb1461036f578063f04da65b14610382578063f2fde38b146103a2578063fe36b4c8146103b557600080fd5b8063caee863e14610338578063d9732f4d1461034b578063e00246041461035e57600080fd5b80639181141a1461029d578063a26ea21e146102b0578063a29093b1146102c3578063a3da0ecd146102ef578063a6fd233914610312578063ac8bc77e1461032557600080fd5b8063715018a611610130578063715018a61461024e578063745137b4146102565780637ce752c61461025e5780638b61e1aa146102715780638da5cb5b146102845780638ec027731461029557600080fd5b80630cb7eb4c146101785780631cab59a4146101b7578063341b46dd146101d757806347ff5d8a146101ec5780636605bfda14610233578063705e8b2e14610246575b600080fd5b6101a4610186366004612965565b6001600160a01b031660009081526007602052604090206003015490565b6040519081526020015b60405180910390f35b6101ca6101c5366004612965565b6103c8565b6040516101ae9190612982565b6101ea6101e5366004612a1b565b61043e565b005b61021b6101fa366004612965565b6001600160a01b039081166000908152600760205260409020600201541690565b6040516001600160a01b0390911681526020016101ae565b6101ea610241366004612965565b610571565b6002546101a4565b6101ea61059b565b6004546101a4565b6101ea61026c366004612a1b565b6105af565b6101ea61027f366004612a80565b610796565b6000546001600160a01b031661021b565b6005546101a4565b6101ea6102ab366004612b87565b6109ff565b6101ea6102be366004612c13565b610d1a565b6101a46102d1366004612965565b6001600160a01b031660009081526007602052604090206001015490565b6103026102fd366004612c68565b610f0d565b60405190151581526020016101ae565b6101a4610320366004612cc8565b611130565b6101ea610333366004612ce1565b6111f8565b6101ea610346366004612965565b611411565b6101ea610359366004612ce1565b6114e8565b6006546001600160a01b031661021b565b6101ea61037d366004612c13565b611631565b610395610390366004612965565b611767565b6040516101ae9190612d64565b6101ea6103b0366004612965565b6117d5565b6101ea6103c3366004612a80565b61184e565b6001600160a01b03811660009081526007602090815260409182902080548351818402810184019094528084526060939283018282801561043257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610414575b50505050509050919050565b6001600160a01b03841660009081526007602052604090206003015484901580159061048157506001600160a01b03811660009081526007602052604090205415155b80156104a957506001600160a01b038181166000908152600760205260409020600201541615155b6104ce5760405162461bcd60e51b81526004016104c590612d9c565b60405180910390fd5b6005546001600160a01b03861660009081526007602052604090206003015486916104f891612de9565b4210156105175760405162461bcd60e51b81526004016104c590612e02565b61051f6119d3565b60005b8381101561055f5761054d878787878581811061054157610541612e39565b90506020020135611a2c565b8061055781612e4f565b915050610522565b5061056960018055565b505050505050565b610579611c51565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6105a3611c51565b6105ad6000611cab565b565b6001600160a01b0384166000908152600760205260409020600301548490158015906105f257506001600160a01b03811660009081526007602052604090205415155b801561061a57506001600160a01b038181166000908152600760205260409020600201541615155b6106365760405162461bcd60e51b81526004016104c590612d9c565b6001600160a01b03851660009081526007602052604090206003015485904210156106735760405162461bcd60e51b81526004016104c590612e68565b856000805b6001600160a01b0383166000908152600760205260409020548110156106f4576001600160a01b03831660009081526007602052604090208054829081106106c2576106c2612e39565b6000918252602090912001546001600160a01b031633036106e257600191505b806106ec81612e4f565b915050610678565b506001600160a01b0380831660009081526007602052604090206002015416330361071d575060015b8061073a5760405162461bcd60e51b81526004016104c590612e96565b6107426119d3565b60005b8581101561078257610770898989898581811061076457610764612e39565b90506020020135611cfb565b8061077a81612e4f565b915050610745565b5061078c60018055565b5050505050505050565b6001600160a01b038b166000908152600760205260409020600301548b90158015906107d957506001600160a01b03811660009081526007602052604090205415155b801561080157506001600160a01b038181166000908152600760205260409020600201541615155b61081d5760405162461bcd60e51b81526004016104c590612d9c565b6005546001600160a01b038d166000908152600760205260409020600301548d9161084791612de9565b4210156108665760405162461bcd60e51b81526004016104c590612e02565b306001600160a01b031663e6728edb8e8e8e6040518463ffffffff1660e01b815260040161089693929190612ed9565b600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b50505050306001600160a01b031663d9732f4d8e8c8c8a8a6040518663ffffffff1660e01b81526004016108fc959493929190612f67565b600060405180830381600087803b15801561091657600080fd5b505af115801561092a573d6000803e3d6000fd5b5050505060005b878110156109ef573063341b46dd8f8b8b8581811061095257610952612e39565b90506020020160208101906109679190612965565b88888681811061097957610979612e39565b905060200281019061098b919061305a565b6040518563ffffffff1660e01b81526004016109aa94939291906130a4565b600060405180830381600087803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b5050505080806109e790612e4f565b915050610931565b5050505050505050505050505050565b8585858533818414610a235760405162461bcd60e51b81526004016104c5906130db565b60005b84811015610b58576000868683818110610a4257610a42612e39565b9050602002016020810190610a579190612965565b6001600160a01b031603610a7d5760405162461bcd60e51b81526004016104c59061312d565b816001600160a01b0316868683818110610a9957610a99612e39565b9050602002016020810190610aae9190612965565b6001600160a01b031603610ad45760405162461bcd60e51b81526004016104c59061317c565b600454848483818110610ae957610ae9612e39565b905060200201351115610b0e5760405162461bcd60e51b81526004016104c5906131c7565b838382818110610b2057610b20612e39565b90506020020135600003610b465760405162461bcd60e51b81526004016104c590613213565b80610b5081612e4f565b915050610a26565b508560025442610b689190612de9565b811015610b875760405162461bcd60e51b81526004016104c59061324a565b876001600160a01b038116610bae5760405162461bcd60e51b81526004016104c5906132a7565b8a8a60005b81811015610c4057600454838383818110610bd057610bd0612e39565b905060200201351115610bf55760405162461bcd60e51b81526004016104c5906131c7565b6000838383818110610c0957610c09612e39565b905060200201351015610c2e5760405162461bcd60e51b81526004016104c590613213565b80610c3881612e4f565b915050610bb3565b50600060076000336001600160a01b03166001600160a01b0316815260200190815260200160002090508f8f826000019190610c7d92919061288d565b50610c8c600482018f8f6128f0565b506000600182018190556002820180546001600160a01b0319166001600160a01b038f16179055600382018c90555b8d811015610d07578e8e82818110610cd557610cd5612e39565b90506020020135826001016000828254610cef9190612de9565b90915550819050610cff81612e4f565b915050610cbb565b5050505050505050505050505050505050565b6001600160a01b038316600090815260076020526040902060030154839015801590610d5d57506001600160a01b03811660009081526007602052604090205415155b8015610d8557506001600160a01b038181166000908152600760205260409020600201541615155b610da15760405162461bcd60e51b81526004016104c590612d9c565b6001600160a01b0384166000908152600760205260409020600301548490421015610dde5760405162461bcd60e51b81526004016104c590612e68565b846000805b6001600160a01b038316600090815260076020526040902054811015610e5f576001600160a01b0383166000908152600760205260409020805482908110610e2d57610e2d612e39565b6000918252602090912001546001600160a01b03163303610e4d57600191505b80610e5781612e4f565b915050610de3565b506001600160a01b03808316600090815260076020526040902060020154163303610e88575060015b80610ea55760405162461bcd60e51b81526004016104c590612e96565b610ead6119d3565b60005b85811015610efa57610ee888888884818110610ece57610ece612e39565b9050602002016020810190610ee39190612965565b611f2b565b80610ef281612e4f565b915050610eb0565b50610f0460018055565b50505050505050565b3360008181526007602052604081206003015490919015801590610f4857506001600160a01b03811660009081526007602052604090205415155b8015610f7057506001600160a01b038181166000908152600760205260409020600201541615155b610f8c5760405162461bcd60e51b81526004016104c590612d9c565b8585858533818414610fb05760405162461bcd60e51b81526004016104c5906130db565b60005b848110156110e5576000868683818110610fcf57610fcf612e39565b9050602002016020810190610fe49190612965565b6001600160a01b03160361100a5760405162461bcd60e51b81526004016104c59061312d565b816001600160a01b031686868381811061102657611026612e39565b905060200201602081019061103b9190612965565b6001600160a01b0316036110615760405162461bcd60e51b81526004016104c59061317c565b60045484848381811061107657611076612e39565b90506020020135111561109b5760405162461bcd60e51b81526004016104c5906131c7565b8383828181106110ad576110ad612e39565b905060200201356000036110d35760405162461bcd60e51b81526004016104c590613213565b806110dd81612e4f565b915050610fb3565b50336000908152600760205260409020611100908c8c61288d565b5033600090815260076020526040902061111e906004018a8a6128f0565b5060019b9a5050505050505050505050565b336000818152600760205260408120600301549091901580159061116b57506001600160a01b03811660009081526007602052604090205415155b801561119357506001600160a01b038181166000908152600760205260409020600201541615155b6111af5760405162461bcd60e51b81526004016104c590612d9c565b82600254426111be9190612de9565b8110156111dd5760405162461bcd60e51b81526004016104c59061324a565b50503360009081526007602052604090206003018290555090565b6001600160a01b03851660009081526007602052604090206003015485901580159061123b57506001600160a01b03811660009081526007602052604090205415155b801561126357506001600160a01b038181166000908152600760205260409020600201541615155b61127f5760405162461bcd60e51b81526004016104c590612d9c565b6001600160a01b03861660009081526007602052604090206003015486904210156112bc5760405162461bcd60e51b81526004016104c590612e68565b866000805b6001600160a01b03831660009081526007602052604090205481101561133d576001600160a01b038316600090815260076020526040902080548290811061130b5761130b612e39565b6000918252602090912001546001600160a01b0316330361132b57600191505b8061133581612e4f565b9150506112c1565b506001600160a01b03808316600090815260076020526040902060020154163303611366575060015b806113835760405162461bcd60e51b81526004016104c590612e96565b61138b6119d3565b60005b878110156113fc576113ea8a8a8a848181106113ac576113ac612e39565b90506020020160208101906113c19190612965565b8989858181106113d3576113d3612e39565b90506020028101906113e5919061305a565b612211565b806113f481612e4f565b91505061138e565b5061140660018055565b505050505050505050565b336000818152600760205260409020600301541580159061144957506001600160a01b03811660009081526007602052604090205415155b801561147157506001600160a01b038181166000908152600760205260409020600201541615155b61148d5760405162461bcd60e51b81526004016104c590612d9c565b816001600160a01b0381166114b45760405162461bcd60e51b81526004016104c5906132a7565b505033600090815260076020526040902060020180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03851660009081526007602052604090206003015485901580159061152b57506001600160a01b03811660009081526007602052604090205415155b801561155357506001600160a01b038181166000908152600760205260409020600201541615155b61156f5760405162461bcd60e51b81526004016104c590612d9c565b6005546001600160a01b038716600090815260076020526040902060030154879161159991612de9565b4210156115b85760405162461bcd60e51b81526004016104c590612e02565b6115c06119d3565b60005b85811015610efa5761161f888888848181106115e1576115e1612e39565b90506020020160208101906115f69190612965565b87878581811061160857611608612e39565b905060200281019061161a919061305a565b6122da565b8061162981612e4f565b9150506115c3565b6001600160a01b03831660009081526007602052604090206003015483901580159061167457506001600160a01b03811660009081526007602052604090205415155b801561169c57506001600160a01b038181166000908152600760205260409020600201541615155b6116b85760405162461bcd60e51b81526004016104c590612d9c565b6005546001600160a01b03851660009081526007602052604090206003015485916116e291612de9565b4210156117015760405162461bcd60e51b81526004016104c590612e02565b6117096119d3565b60005b83811015611756576117448686868481811061172a5761172a612e39565b905060200201602081019061173f9190612965565b612391565b8061174e81612e4f565b91505061170c565b5061176060018055565b5050505050565b6001600160a01b03811660009081526007602090815260409182902060040180548351818402810184019094528084526060939283018282801561043257602002820191906000526020600020905b8154815260200190600101908083116117b65750505050509050919050565b6117dd611c51565b6001600160a01b0381166118425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c5565b61184b81611cab565b50565b604051635137510f60e11b8152309063a26ea21e90611875908e908e908e90600401612ed9565b600060405180830381600087803b15801561188f57600080fd5b505af11580156118a3573d6000803e3d6000fd5b5050604051635645e3bf60e11b815230925063ac8bc77e91506118d2908e908c908c908a908a90600401612f67565b600060405180830381600087803b1580156118ec57600080fd5b505af1158015611900573d6000803e3d6000fd5b5050505060005b858110156119c55730637ce752c68d89898581811061192857611928612e39565b905060200201602081019061193d9190612965565b86868681811061194f5761194f612e39565b9050602002810190611961919061305a565b6040518563ffffffff1660e01b815260040161198094939291906130a4565b600060405180830381600087803b15801561199a57600080fd5b505af11580156119ae573d6000803e3d6000fd5b5050505080806119bd90612e4f565b915050611907565b505050505050505050505050565b600260015403611a255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104c5565b6002600155565b604051627eeac760e11b81526001600160a01b038481166004830152602482018390526000919084169062fdd58e90604401602060405180830381865afa158015611a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9f9190613304565b90506000805b6001600160a01b038616600090815260076020526040902054811015610569576001600160a01b03861660009081526007602052604090206004018054611b27919083908110611af757611af7612e39565b60009182526020808320909101546001600160a01b038a1683526007909152604090912060010154859190612511565b6001600160a01b038716600090815260076020526040902054909250611b4f9060019061331d565b8103611bc757604051627eeac760e11b81526001600160a01b0387811660048301526024820186905286169062fdd58e90604401602060405180830381865afa158015611ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc49190613304565b91505b60065460408051602081018252600081529051637921219560e11b81526001600160a01b038881169363f242432a93611c0c938c93909216918a918991600401613380565b600060405180830381600087803b158015611c2657600080fd5b505af1158015611c3a573d6000803e3d6000fd5b505050508080611c4990612e4f565b915050611aa5565b6000546001600160a01b031633146105ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051627eeac760e11b81526001600160a01b038481166004830152602482018390526000919084169062fdd58e90604401602060405180830381865afa158015611d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6e9190613304565b90506000805b6001600160a01b038616600090815260076020526040902054811015610569576001600160a01b03861660009081526007602052604090206004018054611dc6919083908110611af757611af7612e39565b6001600160a01b038716600090815260076020526040902054909250611dee9060019061331d565b8103611e6657604051627eeac760e11b81526001600160a01b0387811660048301526024820186905286169062fdd58e90604401602060405180830381865afa158015611e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e639190613304565b91505b6001600160a01b03868116600090815260076020526040902080549187169163f242432a91899185908110611e9d57611e9d612e39565b600091825260208083209091015460408051928301815292825291516001600160e01b031960e086901b168152611ee693926001600160a01b0316918a91899190600401613380565b600060405180830381600087803b158015611f0057600080fd5b505af1158015611f14573d6000803e3d6000fd5b505050508080611f2390612e4f565b915050611d74565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908316906370a0823190602401602060405180830381865afa158015611f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f999190613304565b9050600081600003611fbd5760405162461bcd60e51b81526004016104c5906133ba565b604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561200d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120319190613304565b9050806000036120835760405162461bcd60e51b815260206004820152601c60248201527f57696c6c65723a204552433230207a65726f20616c6c6f77616e63650000000060448201526064016104c5565b8281101561208f578092505b60005b6001600160a01b038616600090815260076020526040902054811015610569576001600160a01b038616600090815260076020526040902060040180546121149190839081106120e4576120e4612e39565b60009182526020808320909101546001600160a01b038a1683526007909152604090912060010154869190612511565b6001600160a01b03871660009081526007602052604090205490935061213c9060019061331d565b81036121af576040516370a0823160e01b81526001600160a01b0387811660048301528616906370a0823190602401602060405180830381865afa158015612188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ac9190613304565b92505b6001600160a01b038616600090815260076020526040902080546121ff918891849081106121df576121df612e39565b6000918252602090912001546001600160a01b03888116929116866125c6565b8061220981612e4f565b915050612092565b60005b81811015611760576001600160a01b03858116600090815260076020526040902060020154818616916342842e0e9188911686868681811061225857612258612e39565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156122af57600080fd5b505af11580156122c3573d6000803e3d6000fd5b5050505080806122d290612e4f565b915050612214565b60005b81811015611760576006546001600160a01b03808616916342842e0e9188911686868681811061230f5761230f612e39565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561236657600080fd5b505af115801561237a573d6000803e3d6000fd5b50505050808061238990612e4f565b9150506122dd565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908316906370a0823190602401602060405180830381865afa1580156123db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ff9190613304565b90506000816000036124235760405162461bcd60e51b81526004016104c5906133ba565b604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301526000919085169063dd62ed3e90604401602060405180830381865afa158015612473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124979190613304565b9050806000036124e95760405162461bcd60e51b815260206004820152601c60248201527f57696c6c65723a204552433230207a65726f20616c6c6f77616e63650000000060448201526064016104c5565b828110156124f5578092505b600654611760906001600160a01b0386811691889116866125c6565b600080806000198587098587029250828110838203039150508060000361254b57838281612541576125416133fc565b04925050506125bf565b80841161255757600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052612620908590612626565b50505050565b600061267b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126fd9092919063ffffffff16565b8051909150156126f857808060200190518101906126999190613412565b6126f85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104c5565b505050565b606061270c8484600085612714565b949350505050565b6060824710156127755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104c5565b600080866001600160a01b031685876040516127919190613434565b60006040518083038185875af1925050503d80600081146127ce576040519150601f19603f3d011682016040523d82523d6000602084013e6127d3565b606091505b50915091506127e4878383876127ef565b979650505050505050565b6060831561285e578251600003612857576001600160a01b0385163b6128575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c5565b508161270c565b61270c83838151156128735781518083602001fd5b8060405162461bcd60e51b81526004016104c59190613450565b8280548282559060005260206000209081019282156128e0579160200282015b828111156128e05781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906128ad565b506128ec92915061292b565b5090565b8280548282559060005260206000209081019282156128e0579160200282015b828111156128e0578235825591602001919060010190612910565b5b808211156128ec576000815560010161292c565b6001600160a01b038116811461184b57600080fd5b803561296081612940565b919050565b60006020828403121561297757600080fd5b81356125bf81612940565b6020808252825182820181905260009190848201906040850190845b818110156129c35783516001600160a01b03168352928401929184019160010161299e565b50909695505050505050565b60008083601f8401126129e157600080fd5b50813567ffffffffffffffff8111156129f957600080fd5b6020830191508360208260051b8501011115612a1457600080fd5b9250929050565b60008060008060608587031215612a3157600080fd5b8435612a3c81612940565b93506020850135612a4c81612940565b9250604085013567ffffffffffffffff811115612a6857600080fd5b612a74878288016129cf565b95989497509550505050565b600080600080600080600080600080600060c08c8e031215612aa157600080fd5b612aaa8c612955565b9a5067ffffffffffffffff8060208e01351115612ac657600080fd5b612ad68e60208f01358f016129cf565b909b50995060408d0135811015612aec57600080fd5b612afc8e60408f01358f016129cf565b909950975060608d0135811015612b1257600080fd5b612b228e60608f01358f016129cf565b909750955060808d0135811015612b3857600080fd5b612b488e60808f01358f016129cf565b909550935060a08d0135811015612b5e57600080fd5b50612b6f8d60a08e01358e016129cf565b81935080925050509295989b509295989b9093969950565b60008060008060008060808789031215612ba057600080fd5b863567ffffffffffffffff80821115612bb857600080fd5b612bc48a838b016129cf565b90985096506020890135915080821115612bdd57600080fd5b50612bea89828a016129cf565b9095509350506040870135612bfe81612940565b80925050606087013590509295509295509295565b600080600060408486031215612c2857600080fd5b8335612c3381612940565b9250602084013567ffffffffffffffff811115612c4f57600080fd5b612c5b868287016129cf565b9497909650939450505050565b60008060008060408587031215612c7e57600080fd5b843567ffffffffffffffff80821115612c9657600080fd5b612ca2888389016129cf565b90965094506020870135915080821115612cbb57600080fd5b50612a74878288016129cf565b600060208284031215612cda57600080fd5b5035919050565b600080600080600060608688031215612cf957600080fd5b8535612d0481612940565b9450602086013567ffffffffffffffff80821115612d2157600080fd5b612d2d89838a016129cf565b90965094506040880135915080821115612d4657600080fd5b50612d53888289016129cf565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b818110156129c357835183529284019291840191600101612d80565b6020808252601a908201527f57696c6c65723a2077696c6c20646f65736e2774206578697374000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115612dfc57612dfc612dd3565b92915050565b60208082526019908201527f57696c6c65723a20546f6f206561726c7920746f207265617000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201612e6157612e61612dd3565b5060010190565b60208082526014908201527357696c6c65723a20756e72656c65617361626c6560601b604082015260600190565b60208082526023908201527f57696c6c65723a206578656375746f72206973206e6f742062656e656669636960408201526261727960e81b606082015260800190565b6001600160a01b03848116825260406020808401829052908301849052600091859160608501845b87811015612f28578435612f1481612940565b841682529382019390820190600101612f01565b5098975050505050505050565b81835260006001600160fb1b03831115612f4e57600080fd5b8260051b80836020870137939093016020019392505050565b6001600160a01b03868116825260606020808401829052908301869052600091879160808501845b89811015612fb6578435612fa281612940565b841682529382019390820190600101612f8f565b50858103604087015286815281810193506005925086831b810182018860005b8981101561304857838303601f190187528135368c9003601e19018112612ffc57600080fd5b8b01858101903567ffffffffffffffff81111561301857600080fd5b80881b360382131561302957600080fd5b613034858284612f35565b988701989450505090840190600101612fd6565b50909c9b505050505050505050505050565b6000808335601e1984360301811261307157600080fd5b83018035915067ffffffffffffffff82111561308c57600080fd5b6020019150600581901b3603821315612a1457600080fd5b6001600160a01b038581168252841660208201526060604082018190526000906130d19083018486612f35565b9695505050505050565b60208082526032908201527f57696c6c65723a2062656e656669636961726965735f20616e642073686172656040820152710e6be40d8cadccee8d040dad2e6dac2e8c6d60731b606082015260800190565b6020808252602f908201527f57696c6c65723a2061646472657373207a65726f206973206e6f74206120766160408201526e6c69642062656e656669636961727960881b606082015260800190565b6020808252602b908201527f57696c6c65723a207465737461746f72206973206e6f7420612076616c69642060408201526a62656e656669636961727960a81b606082015260800190565b6020808252602c908201527f57696c6c65723a2073686172652063616e27742062652067726561746572207460408201526b68616e204d4158534841524560a01b606082015260800190565b60208082526018908201527f57696c6c65723a2073686172652063616e277420626520300000000000000000604082015260600190565b60208082526037908201527f57696c6c65723a2072657175697265282072656c656173652074696d65203e2060408201527f63757272656e742074696d65202b204255464645522029000000000000000000606082015260800190565b60208082526037908201527f57696c6c65723a2061646472657373207a65726f206973206e6f74206120766160408201527f6c69642062656e65666963696172794f66455243373231000000000000000000606082015260800190565b60006020828403121561331657600080fd5b5051919050565b81810381811115612dfc57612dfc612dd3565b60005b8381101561334b578181015183820152602001613333565b50506000910152565b6000815180845261336c816020860160208601613330565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906127e490830184613354565b60208082526022908201527f57696c6c65723a204e6f20455243323020746f6b656e7320746f2072656c6561604082015261736560f01b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60006020828403121561342457600080fd5b815180151581146125bf57600080fd5b60008251613446818460208701613330565b9190910192915050565b6020815260006125bf602083018461335456fea2646970667358221220d6a37bed79769aa455a187184e912174d53b110ad85aacc76e3d86f9bb05c38964736f6c63430008100033",
  "bytecodeSha1": "0438971e76a6464caf720bf743900b56cb9ff285",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.16+commit.07a7930e"
  },
  "contractName": "Willer",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "125": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "124": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {
        "ReentrancyGuard._nonReentrantBefore": {
          "126": [
            2468,
            2487,
            true
          ]
        }
      },
      "10": {
        "Math.mulDiv": {
          "122": [
            2516,
            2526,
            false
          ],
          "123": [
            2697,
            2716,
            true
          ]
        }
      },
      "11": {
        "Willer.addWill": {
          "96": [
            2912,
            2934,
            true
          ],
          "97": [
            3034,
            3049,
            true
          ]
        },
        "Willer.batchReleaseERC20ToTreasury": {
          "105": [
            3183,
            3225,
            false
          ],
          "106": [
            3245,
            3296,
            false
          ],
          "107": [
            3316,
            3375,
            true
          ],
          "108": [
            1280,
            1365,
            true
          ]
        },
        "Willer.batchReleaseERC721": {
          "103": [
            1074,
            1130,
            true
          ]
        },
        "Willer.releaseERC1155": {
          "110": [
            12695,
            12749,
            false
          ]
        },
        "Willer.releaseERC1155ToTreasury": {
          "109": [
            13737,
            13791,
            false
          ]
        },
        "Willer.releaseERC20": {
          "111": [
            8520,
            8532,
            true
          ],
          "112": [
            8659,
            8671,
            true
          ],
          "113": [
            8718,
            8735,
            false
          ],
          "114": [
            9141,
            9195,
            false
          ]
        },
        "Willer.releaseERC20ToTreasury": {
          "115": [
            7953,
            7965,
            true
          ],
          "116": [
            8092,
            8104,
            true
          ],
          "117": [
            8151,
            8168,
            false
          ]
        },
        "Willer.setNewBeneficiaries": {
          "98": [
            2072,
            2111,
            true
          ],
          "99": [
            2282,
            2313,
            true
          ],
          "100": [
            2433,
            2463,
            true
          ],
          "101": [
            2579,
            2601,
            true
          ]
        },
        "Willer.setNewBeneficiaryOfERC721": {
          "104": [
            1756,
            1790,
            true
          ]
        },
        "Willer.setNewReleaseTime": {
          "102": [
            1516,
            1556,
            true
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "127": [
            4275,
            4296,
            false
          ],
          "128": [
            4359,
            4389,
            true
          ]
        }
      },
      "6": {},
      "7": {
        "Address._revert": {
          "121": [
            8775,
            8796,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "118": [
            5157,
            5187,
            true
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "119": [
            7674,
            7681,
            false
          ],
          "120": [
            7701,
            7723,
            false
          ]
        }
      },
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "54": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "55": [
            2541,
            2558
          ],
          "56": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "4": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "13": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "41": [
            2161,
            2234
          ],
          "42": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "ReentrancyGuard._nonReentrantAfter": {
          "11": [
            2809,
            2831
          ]
        },
        "ReentrancyGuard._nonReentrantBefore": {
          "47": [
            2460,
            2523
          ],
          "48": [
            2598,
            2616
          ]
        }
      },
      "10": {
        "Math.mulDiv": {
          "76": [
            2546,
            2572
          ],
          "77": [
            2689,
            2717
          ],
          "78": [
            4109,
            4130
          ],
          "79": [
            4704,
            4740
          ],
          "80": [
            4773,
            4809
          ],
          "81": [
            4843,
            4879
          ],
          "82": [
            4913,
            4949
          ],
          "83": [
            4983,
            5019
          ],
          "84": [
            5054,
            5090
          ],
          "85": [
            5524,
            5548
          ]
        }
      },
      "11": {
        "Willer.addWill": {
          "20": [
            5172,
            5204
          ],
          "21": [
            5214,
            5232
          ],
          "22": [
            5242,
            5257
          ],
          "23": [
            5267,
            5311
          ],
          "24": [
            5321,
            5349
          ],
          "25": [
            5416,
            5441
          ],
          "26": [
            5397,
            5400
          ]
        },
        "Willer.batchRelease": {
          "43": [
            15346,
            15394
          ],
          "44": [
            15404,
            15474
          ],
          "45": [
            15549,
            15690
          ],
          "46": [
            15530,
            15533
          ]
        },
        "Willer.batchReleaseERC1155": {
          "14": [
            14514,
            14569
          ],
          "15": [
            14495,
            14498
          ]
        },
        "Willer.batchReleaseERC1155ToTreasury": {
          "9": [
            14898,
            15025
          ],
          "10": [
            14879,
            14882
          ]
        },
        "Willer.batchReleaseERC20": {
          "27": [
            9843,
            9884
          ],
          "28": [
            9824,
            9827
          ]
        },
        "Willer.batchReleaseERC20ToTreasury": {
          "38": [
            10203,
            10254
          ],
          "39": [
            10184,
            10187
          ]
        },
        "Willer.batchReleaseERC721": {
          "33": [
            11550,
            11610
          ],
          "34": [
            11531,
            11534
          ]
        },
        "Willer.batchReleaseERC721ToTreasury": {
          "36": [
            11955,
            12087
          ],
          "37": [
            11936,
            11939
          ]
        },
        "Willer.batchReleaseToTreasury": {
          "16": [
            16073,
            16131
          ],
          "17": [
            16141,
            16267
          ],
          "18": [
            16342,
            16493
          ],
          "19": [
            16323,
            16326
          ]
        },
        "Willer.getBeneficiaries": {
          "8": [
            5969,
            6014
          ]
        },
        "Willer.getBeneficiaryOfERC721": {
          "1": [
            6417,
            6469
          ]
        },
        "Willer.getBuffer": {
          "2": [
            5522,
            5535
          ]
        },
        "Willer.getMaxShare": {
          "3": [
            5699,
            5714
          ]
        },
        "Willer.getReapDelay": {
          "5": [
            5609,
            5626
          ]
        },
        "Willer.getReleaseTime": {
          "0": [
            5806,
            5849
          ]
        },
        "Willer.getShares": {
          "40": [
            6110,
            6148
          ]
        },
        "Willer.getSumShares": {
          "6": [
            6238,
            6279
          ]
        },
        "Willer.getTreasuryAddress": {
          "7": [
            16714,
            16736
          ]
        },
        "Willer.releaseERC1155": {
          "57": [
            12475,
            12617
          ],
          "58": [
            12769,
            12820
          ],
          "59": [
            12848,
            13053
          ],
          "60": [
            12447,
            12450
          ]
        },
        "Willer.releaseERC1155ToTreasury": {
          "49": [
            13517,
            13659
          ],
          "50": [
            13811,
            13862
          ],
          "51": [
            13890,
            14069
          ],
          "52": [
            13489,
            13492
          ]
        },
        "Willer.releaseERC20": {
          "61": [
            8512,
            8571
          ],
          "62": [
            8651,
            8704
          ],
          "63": [
            8751,
            8768
          ],
          "64": [
            8921,
            9063
          ],
          "65": [
            9215,
            9255
          ],
          "66": [
            9283,
            9434
          ],
          "67": [
            8893,
            8896
          ]
        },
        "Willer.releaseERC20ToTreasury": {
          "72": [
            7945,
            8004
          ],
          "73": [
            8084,
            8137
          ],
          "74": [
            8184,
            8201
          ],
          "75": [
            8221,
            8284
          ]
        },
        "Willer.releaseERC721": {
          "68": [
            10488,
            10650
          ],
          "69": [
            10469,
            10472
          ]
        },
        "Willer.releaseERC721ToTreasury": {
          "70": [
            10958,
            11091
          ],
          "71": [
            10939,
            10942
          ]
        },
        "Willer.setNewBeneficiaries": {
          "29": [
            6856,
            6915
          ],
          "30": [
            6925,
            6970
          ],
          "31": [
            7025,
            7036
          ]
        },
        "Willer.setNewBeneficiaryOfERC721": {
          "35": [
            7618,
            7689
          ]
        },
        "Willer.setNewReleaseTime": {
          "32": [
            7237,
            7292
          ]
        },
        "Willer.setTreasuryAddress": {
          "12": [
            16597,
            16631
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {},
      "5": {
        "SafeERC20._callOptionalReturn": {
          "87": [
            4351,
            4436
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "86": [
            1112,
            1208
          ]
        }
      },
      "6": {},
      "7": {
        "Address._revert": {
          "95": [
            9119,
            9139
          ]
        },
        "Address.functionCall": {
          "88": [
            4030,
            4089
          ]
        },
        "Address.functionCallWithValue": {
          "89": [
            5149,
            5230
          ],
          "90": [
            5323,
            5399
          ]
        },
        "Address.isContract": {
          "91": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResultFromTarget": {
          "92": [
            7908,
            7968
          ],
          "93": [
            7996,
            8013
          ],
          "94": [
            8044,
            8077
          ]
        }
      },
      "8": {
        "Context._msgSender": {
          "53": [
            712,
            729
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC20Permit",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101735760003560e01c80639181141a116100de578063caee863e11610097578063e6728edb11610071578063e6728edb1461036f578063f04da65b14610382578063f2fde38b146103a2578063fe36b4c8146103b557600080fd5b8063caee863e14610338578063d9732f4d1461034b578063e00246041461035e57600080fd5b80639181141a1461029d578063a26ea21e146102b0578063a29093b1146102c3578063a3da0ecd146102ef578063a6fd233914610312578063ac8bc77e1461032557600080fd5b8063715018a611610130578063715018a61461024e578063745137b4146102565780637ce752c61461025e5780638b61e1aa146102715780638da5cb5b146102845780638ec027731461029557600080fd5b80630cb7eb4c146101785780631cab59a4146101b7578063341b46dd146101d757806347ff5d8a146101ec5780636605bfda14610233578063705e8b2e14610246575b600080fd5b6101a4610186366004612965565b6001600160a01b031660009081526007602052604090206003015490565b6040519081526020015b60405180910390f35b6101ca6101c5366004612965565b6103c8565b6040516101ae9190612982565b6101ea6101e5366004612a1b565b61043e565b005b61021b6101fa366004612965565b6001600160a01b039081166000908152600760205260409020600201541690565b6040516001600160a01b0390911681526020016101ae565b6101ea610241366004612965565b610571565b6002546101a4565b6101ea61059b565b6004546101a4565b6101ea61026c366004612a1b565b6105af565b6101ea61027f366004612a80565b610796565b6000546001600160a01b031661021b565b6005546101a4565b6101ea6102ab366004612b87565b6109ff565b6101ea6102be366004612c13565b610d1a565b6101a46102d1366004612965565b6001600160a01b031660009081526007602052604090206001015490565b6103026102fd366004612c68565b610f0d565b60405190151581526020016101ae565b6101a4610320366004612cc8565b611130565b6101ea610333366004612ce1565b6111f8565b6101ea610346366004612965565b611411565b6101ea610359366004612ce1565b6114e8565b6006546001600160a01b031661021b565b6101ea61037d366004612c13565b611631565b610395610390366004612965565b611767565b6040516101ae9190612d64565b6101ea6103b0366004612965565b6117d5565b6101ea6103c3366004612a80565b61184e565b6001600160a01b03811660009081526007602090815260409182902080548351818402810184019094528084526060939283018282801561043257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610414575b50505050509050919050565b6001600160a01b03841660009081526007602052604090206003015484901580159061048157506001600160a01b03811660009081526007602052604090205415155b80156104a957506001600160a01b038181166000908152600760205260409020600201541615155b6104ce5760405162461bcd60e51b81526004016104c590612d9c565b60405180910390fd5b6005546001600160a01b03861660009081526007602052604090206003015486916104f891612de9565b4210156105175760405162461bcd60e51b81526004016104c590612e02565b61051f6119d3565b60005b8381101561055f5761054d878787878581811061054157610541612e39565b90506020020135611a2c565b8061055781612e4f565b915050610522565b5061056960018055565b505050505050565b610579611c51565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6105a3611c51565b6105ad6000611cab565b565b6001600160a01b0384166000908152600760205260409020600301548490158015906105f257506001600160a01b03811660009081526007602052604090205415155b801561061a57506001600160a01b038181166000908152600760205260409020600201541615155b6106365760405162461bcd60e51b81526004016104c590612d9c565b6001600160a01b03851660009081526007602052604090206003015485904210156106735760405162461bcd60e51b81526004016104c590612e68565b856000805b6001600160a01b0383166000908152600760205260409020548110156106f4576001600160a01b03831660009081526007602052604090208054829081106106c2576106c2612e39565b6000918252602090912001546001600160a01b031633036106e257600191505b806106ec81612e4f565b915050610678565b506001600160a01b0380831660009081526007602052604090206002015416330361071d575060015b8061073a5760405162461bcd60e51b81526004016104c590612e96565b6107426119d3565b60005b8581101561078257610770898989898581811061076457610764612e39565b90506020020135611cfb565b8061077a81612e4f565b915050610745565b5061078c60018055565b5050505050505050565b6001600160a01b038b166000908152600760205260409020600301548b90158015906107d957506001600160a01b03811660009081526007602052604090205415155b801561080157506001600160a01b038181166000908152600760205260409020600201541615155b61081d5760405162461bcd60e51b81526004016104c590612d9c565b6005546001600160a01b038d166000908152600760205260409020600301548d9161084791612de9565b4210156108665760405162461bcd60e51b81526004016104c590612e02565b306001600160a01b031663e6728edb8e8e8e6040518463ffffffff1660e01b815260040161089693929190612ed9565b600060405180830381600087803b1580156108b057600080fd5b505af11580156108c4573d6000803e3d6000fd5b50505050306001600160a01b031663d9732f4d8e8c8c8a8a6040518663ffffffff1660e01b81526004016108fc959493929190612f67565b600060405180830381600087803b15801561091657600080fd5b505af115801561092a573d6000803e3d6000fd5b5050505060005b878110156109ef573063341b46dd8f8b8b8581811061095257610952612e39565b90506020020160208101906109679190612965565b88888681811061097957610979612e39565b905060200281019061098b919061305a565b6040518563ffffffff1660e01b81526004016109aa94939291906130a4565b600060405180830381600087803b1580156109c457600080fd5b505af11580156109d8573d6000803e3d6000fd5b5050505080806109e790612e4f565b915050610931565b5050505050505050505050505050565b8585858533818414610a235760405162461bcd60e51b81526004016104c5906130db565b60005b84811015610b58576000868683818110610a4257610a42612e39565b9050602002016020810190610a579190612965565b6001600160a01b031603610a7d5760405162461bcd60e51b81526004016104c59061312d565b816001600160a01b0316868683818110610a9957610a99612e39565b9050602002016020810190610aae9190612965565b6001600160a01b031603610ad45760405162461bcd60e51b81526004016104c59061317c565b600454848483818110610ae957610ae9612e39565b905060200201351115610b0e5760405162461bcd60e51b81526004016104c5906131c7565b838382818110610b2057610b20612e39565b90506020020135600003610b465760405162461bcd60e51b81526004016104c590613213565b80610b5081612e4f565b915050610a26565b508560025442610b689190612de9565b811015610b875760405162461bcd60e51b81526004016104c59061324a565b876001600160a01b038116610bae5760405162461bcd60e51b81526004016104c5906132a7565b8a8a60005b81811015610c4057600454838383818110610bd057610bd0612e39565b905060200201351115610bf55760405162461bcd60e51b81526004016104c5906131c7565b6000838383818110610c0957610c09612e39565b905060200201351015610c2e5760405162461bcd60e51b81526004016104c590613213565b80610c3881612e4f565b915050610bb3565b50600060076000336001600160a01b03166001600160a01b0316815260200190815260200160002090508f8f826000019190610c7d92919061288d565b50610c8c600482018f8f6128f0565b506000600182018190556002820180546001600160a01b0319166001600160a01b038f16179055600382018c90555b8d811015610d07578e8e82818110610cd557610cd5612e39565b90506020020135826001016000828254610cef9190612de9565b90915550819050610cff81612e4f565b915050610cbb565b5050505050505050505050505050505050565b6001600160a01b038316600090815260076020526040902060030154839015801590610d5d57506001600160a01b03811660009081526007602052604090205415155b8015610d8557506001600160a01b038181166000908152600760205260409020600201541615155b610da15760405162461bcd60e51b81526004016104c590612d9c565b6001600160a01b0384166000908152600760205260409020600301548490421015610dde5760405162461bcd60e51b81526004016104c590612e68565b846000805b6001600160a01b038316600090815260076020526040902054811015610e5f576001600160a01b0383166000908152600760205260409020805482908110610e2d57610e2d612e39565b6000918252602090912001546001600160a01b03163303610e4d57600191505b80610e5781612e4f565b915050610de3565b506001600160a01b03808316600090815260076020526040902060020154163303610e88575060015b80610ea55760405162461bcd60e51b81526004016104c590612e96565b610ead6119d3565b60005b85811015610efa57610ee888888884818110610ece57610ece612e39565b9050602002016020810190610ee39190612965565b611f2b565b80610ef281612e4f565b915050610eb0565b50610f0460018055565b50505050505050565b3360008181526007602052604081206003015490919015801590610f4857506001600160a01b03811660009081526007602052604090205415155b8015610f7057506001600160a01b038181166000908152600760205260409020600201541615155b610f8c5760405162461bcd60e51b81526004016104c590612d9c565b8585858533818414610fb05760405162461bcd60e51b81526004016104c5906130db565b60005b848110156110e5576000868683818110610fcf57610fcf612e39565b9050602002016020810190610fe49190612965565b6001600160a01b03160361100a5760405162461bcd60e51b81526004016104c59061312d565b816001600160a01b031686868381811061102657611026612e39565b905060200201602081019061103b9190612965565b6001600160a01b0316036110615760405162461bcd60e51b81526004016104c59061317c565b60045484848381811061107657611076612e39565b90506020020135111561109b5760405162461bcd60e51b81526004016104c5906131c7565b8383828181106110ad576110ad612e39565b905060200201356000036110d35760405162461bcd60e51b81526004016104c590613213565b806110dd81612e4f565b915050610fb3565b50336000908152600760205260409020611100908c8c61288d565b5033600090815260076020526040902061111e906004018a8a6128f0565b5060019b9a5050505050505050505050565b336000818152600760205260408120600301549091901580159061116b57506001600160a01b03811660009081526007602052604090205415155b801561119357506001600160a01b038181166000908152600760205260409020600201541615155b6111af5760405162461bcd60e51b81526004016104c590612d9c565b82600254426111be9190612de9565b8110156111dd5760405162461bcd60e51b81526004016104c59061324a565b50503360009081526007602052604090206003018290555090565b6001600160a01b03851660009081526007602052604090206003015485901580159061123b57506001600160a01b03811660009081526007602052604090205415155b801561126357506001600160a01b038181166000908152600760205260409020600201541615155b61127f5760405162461bcd60e51b81526004016104c590612d9c565b6001600160a01b03861660009081526007602052604090206003015486904210156112bc5760405162461bcd60e51b81526004016104c590612e68565b866000805b6001600160a01b03831660009081526007602052604090205481101561133d576001600160a01b038316600090815260076020526040902080548290811061130b5761130b612e39565b6000918252602090912001546001600160a01b0316330361132b57600191505b8061133581612e4f565b9150506112c1565b506001600160a01b03808316600090815260076020526040902060020154163303611366575060015b806113835760405162461bcd60e51b81526004016104c590612e96565b61138b6119d3565b60005b878110156113fc576113ea8a8a8a848181106113ac576113ac612e39565b90506020020160208101906113c19190612965565b8989858181106113d3576113d3612e39565b90506020028101906113e5919061305a565b612211565b806113f481612e4f565b91505061138e565b5061140660018055565b505050505050505050565b336000818152600760205260409020600301541580159061144957506001600160a01b03811660009081526007602052604090205415155b801561147157506001600160a01b038181166000908152600760205260409020600201541615155b61148d5760405162461bcd60e51b81526004016104c590612d9c565b816001600160a01b0381166114b45760405162461bcd60e51b81526004016104c5906132a7565b505033600090815260076020526040902060020180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03851660009081526007602052604090206003015485901580159061152b57506001600160a01b03811660009081526007602052604090205415155b801561155357506001600160a01b038181166000908152600760205260409020600201541615155b61156f5760405162461bcd60e51b81526004016104c590612d9c565b6005546001600160a01b038716600090815260076020526040902060030154879161159991612de9565b4210156115b85760405162461bcd60e51b81526004016104c590612e02565b6115c06119d3565b60005b85811015610efa5761161f888888848181106115e1576115e1612e39565b90506020020160208101906115f69190612965565b87878581811061160857611608612e39565b905060200281019061161a919061305a565b6122da565b8061162981612e4f565b9150506115c3565b6001600160a01b03831660009081526007602052604090206003015483901580159061167457506001600160a01b03811660009081526007602052604090205415155b801561169c57506001600160a01b038181166000908152600760205260409020600201541615155b6116b85760405162461bcd60e51b81526004016104c590612d9c565b6005546001600160a01b03851660009081526007602052604090206003015485916116e291612de9565b4210156117015760405162461bcd60e51b81526004016104c590612e02565b6117096119d3565b60005b83811015611756576117448686868481811061172a5761172a612e39565b905060200201602081019061173f9190612965565b612391565b8061174e81612e4f565b91505061170c565b5061176060018055565b5050505050565b6001600160a01b03811660009081526007602090815260409182902060040180548351818402810184019094528084526060939283018282801561043257602002820191906000526020600020905b8154815260200190600101908083116117b65750505050509050919050565b6117dd611c51565b6001600160a01b0381166118425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c5565b61184b81611cab565b50565b604051635137510f60e11b8152309063a26ea21e90611875908e908e908e90600401612ed9565b600060405180830381600087803b15801561188f57600080fd5b505af11580156118a3573d6000803e3d6000fd5b5050604051635645e3bf60e11b815230925063ac8bc77e91506118d2908e908c908c908a908a90600401612f67565b600060405180830381600087803b1580156118ec57600080fd5b505af1158015611900573d6000803e3d6000fd5b5050505060005b858110156119c55730637ce752c68d89898581811061192857611928612e39565b905060200201602081019061193d9190612965565b86868681811061194f5761194f612e39565b9050602002810190611961919061305a565b6040518563ffffffff1660e01b815260040161198094939291906130a4565b600060405180830381600087803b15801561199a57600080fd5b505af11580156119ae573d6000803e3d6000fd5b5050505080806119bd90612e4f565b915050611907565b505050505050505050505050565b600260015403611a255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104c5565b6002600155565b604051627eeac760e11b81526001600160a01b038481166004830152602482018390526000919084169062fdd58e90604401602060405180830381865afa158015611a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9f9190613304565b90506000805b6001600160a01b038616600090815260076020526040902054811015610569576001600160a01b03861660009081526007602052604090206004018054611b27919083908110611af757611af7612e39565b60009182526020808320909101546001600160a01b038a1683526007909152604090912060010154859190612511565b6001600160a01b038716600090815260076020526040902054909250611b4f9060019061331d565b8103611bc757604051627eeac760e11b81526001600160a01b0387811660048301526024820186905286169062fdd58e90604401602060405180830381865afa158015611ba0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc49190613304565b91505b60065460408051602081018252600081529051637921219560e11b81526001600160a01b038881169363f242432a93611c0c938c93909216918a918991600401613380565b600060405180830381600087803b158015611c2657600080fd5b505af1158015611c3a573d6000803e3d6000fd5b505050508080611c4990612e4f565b915050611aa5565b6000546001600160a01b031633146105ad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604051627eeac760e11b81526001600160a01b038481166004830152602482018390526000919084169062fdd58e90604401602060405180830381865afa158015611d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6e9190613304565b90506000805b6001600160a01b038616600090815260076020526040902054811015610569576001600160a01b03861660009081526007602052604090206004018054611dc6919083908110611af757611af7612e39565b6001600160a01b038716600090815260076020526040902054909250611dee9060019061331d565b8103611e6657604051627eeac760e11b81526001600160a01b0387811660048301526024820186905286169062fdd58e90604401602060405180830381865afa158015611e3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e639190613304565b91505b6001600160a01b03868116600090815260076020526040902080549187169163f242432a91899185908110611e9d57611e9d612e39565b600091825260208083209091015460408051928301815292825291516001600160e01b031960e086901b168152611ee693926001600160a01b0316918a91899190600401613380565b600060405180830381600087803b158015611f0057600080fd5b505af1158015611f14573d6000803e3d6000fd5b505050508080611f2390612e4f565b915050611d74565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908316906370a0823190602401602060405180830381865afa158015611f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f999190613304565b9050600081600003611fbd5760405162461bcd60e51b81526004016104c5906133ba565b604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561200d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120319190613304565b9050806000036120835760405162461bcd60e51b815260206004820152601c60248201527f57696c6c65723a204552433230207a65726f20616c6c6f77616e63650000000060448201526064016104c5565b8281101561208f578092505b60005b6001600160a01b038616600090815260076020526040902054811015610569576001600160a01b038616600090815260076020526040902060040180546121149190839081106120e4576120e4612e39565b60009182526020808320909101546001600160a01b038a1683526007909152604090912060010154869190612511565b6001600160a01b03871660009081526007602052604090205490935061213c9060019061331d565b81036121af576040516370a0823160e01b81526001600160a01b0387811660048301528616906370a0823190602401602060405180830381865afa158015612188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ac9190613304565b92505b6001600160a01b038616600090815260076020526040902080546121ff918891849081106121df576121df612e39565b6000918252602090912001546001600160a01b03888116929116866125c6565b8061220981612e4f565b915050612092565b60005b81811015611760576001600160a01b03858116600090815260076020526040902060020154818616916342842e0e9188911686868681811061225857612258612e39565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b1580156122af57600080fd5b505af11580156122c3573d6000803e3d6000fd5b5050505080806122d290612e4f565b915050612214565b60005b81811015611760576006546001600160a01b03808616916342842e0e9188911686868681811061230f5761230f612e39565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152606401600060405180830381600087803b15801561236657600080fd5b505af115801561237a573d6000803e3d6000fd5b50505050808061238990612e4f565b9150506122dd565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908316906370a0823190602401602060405180830381865afa1580156123db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ff9190613304565b90506000816000036124235760405162461bcd60e51b81526004016104c5906133ba565b604051636eb1769f60e11b81526001600160a01b0385811660048301523060248301526000919085169063dd62ed3e90604401602060405180830381865afa158015612473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124979190613304565b9050806000036124e95760405162461bcd60e51b815260206004820152601c60248201527f57696c6c65723a204552433230207a65726f20616c6c6f77616e63650000000060448201526064016104c5565b828110156124f5578092505b600654611760906001600160a01b0386811691889116866125c6565b600080806000198587098587029250828110838203039150508060000361254b57838281612541576125416133fc565b04925050506125bf565b80841161255757600080fd5b600084868809851960019081018716968790049682860381900495909211909303600082900391909104909201919091029190911760038402600290811880860282030280860282030280860282030280860282030280860282030280860290910302029150505b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052612620908590612626565b50505050565b600061267b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126fd9092919063ffffffff16565b8051909150156126f857808060200190518101906126999190613412565b6126f85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104c5565b505050565b606061270c8484600085612714565b949350505050565b6060824710156127755760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104c5565b600080866001600160a01b031685876040516127919190613434565b60006040518083038185875af1925050503d80600081146127ce576040519150601f19603f3d011682016040523d82523d6000602084013e6127d3565b606091505b50915091506127e4878383876127ef565b979650505050505050565b6060831561285e578251600003612857576001600160a01b0385163b6128575760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c5565b508161270c565b61270c83838151156128735781518083602001fd5b8060405162461bcd60e51b81526004016104c59190613450565b8280548282559060005260206000209081019282156128e0579160200282015b828111156128e05781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906128ad565b506128ec92915061292b565b5090565b8280548282559060005260206000209081019282156128e0579160200282015b828111156128e0578235825591602001919060010190612910565b5b808211156128ec576000815560010161292c565b6001600160a01b038116811461184b57600080fd5b803561296081612940565b919050565b60006020828403121561297757600080fd5b81356125bf81612940565b6020808252825182820181905260009190848201906040850190845b818110156129c35783516001600160a01b03168352928401929184019160010161299e565b50909695505050505050565b60008083601f8401126129e157600080fd5b50813567ffffffffffffffff8111156129f957600080fd5b6020830191508360208260051b8501011115612a1457600080fd5b9250929050565b60008060008060608587031215612a3157600080fd5b8435612a3c81612940565b93506020850135612a4c81612940565b9250604085013567ffffffffffffffff811115612a6857600080fd5b612a74878288016129cf565b95989497509550505050565b600080600080600080600080600080600060c08c8e031215612aa157600080fd5b612aaa8c612955565b9a5067ffffffffffffffff8060208e01351115612ac657600080fd5b612ad68e60208f01358f016129cf565b909b50995060408d0135811015612aec57600080fd5b612afc8e60408f01358f016129cf565b909950975060608d0135811015612b1257600080fd5b612b228e60608f01358f016129cf565b909750955060808d0135811015612b3857600080fd5b612b488e60808f01358f016129cf565b909550935060a08d0135811015612b5e57600080fd5b50612b6f8d60a08e01358e016129cf565b81935080925050509295989b509295989b9093969950565b60008060008060008060808789031215612ba057600080fd5b863567ffffffffffffffff80821115612bb857600080fd5b612bc48a838b016129cf565b90985096506020890135915080821115612bdd57600080fd5b50612bea89828a016129cf565b9095509350506040870135612bfe81612940565b80925050606087013590509295509295509295565b600080600060408486031215612c2857600080fd5b8335612c3381612940565b9250602084013567ffffffffffffffff811115612c4f57600080fd5b612c5b868287016129cf565b9497909650939450505050565b60008060008060408587031215612c7e57600080fd5b843567ffffffffffffffff80821115612c9657600080fd5b612ca2888389016129cf565b90965094506020870135915080821115612cbb57600080fd5b50612a74878288016129cf565b600060208284031215612cda57600080fd5b5035919050565b600080600080600060608688031215612cf957600080fd5b8535612d0481612940565b9450602086013567ffffffffffffffff80821115612d2157600080fd5b612d2d89838a016129cf565b90965094506040880135915080821115612d4657600080fd5b50612d53888289016129cf565b969995985093965092949392505050565b6020808252825182820181905260009190848201906040850190845b818110156129c357835183529284019291840191600101612d80565b6020808252601a908201527f57696c6c65723a2077696c6c20646f65736e2774206578697374000000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115612dfc57612dfc612dd3565b92915050565b60208082526019908201527f57696c6c65723a20546f6f206561726c7920746f207265617000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060018201612e6157612e61612dd3565b5060010190565b60208082526014908201527357696c6c65723a20756e72656c65617361626c6560601b604082015260600190565b60208082526023908201527f57696c6c65723a206578656375746f72206973206e6f742062656e656669636960408201526261727960e81b606082015260800190565b6001600160a01b03848116825260406020808401829052908301849052600091859160608501845b87811015612f28578435612f1481612940565b841682529382019390820190600101612f01565b5098975050505050505050565b81835260006001600160fb1b03831115612f4e57600080fd5b8260051b80836020870137939093016020019392505050565b6001600160a01b03868116825260606020808401829052908301869052600091879160808501845b89811015612fb6578435612fa281612940565b841682529382019390820190600101612f8f565b50858103604087015286815281810193506005925086831b810182018860005b8981101561304857838303601f190187528135368c9003601e19018112612ffc57600080fd5b8b01858101903567ffffffffffffffff81111561301857600080fd5b80881b360382131561302957600080fd5b613034858284612f35565b988701989450505090840190600101612fd6565b50909c9b505050505050505050505050565b6000808335601e1984360301811261307157600080fd5b83018035915067ffffffffffffffff82111561308c57600080fd5b6020019150600581901b3603821315612a1457600080fd5b6001600160a01b038581168252841660208201526060604082018190526000906130d19083018486612f35565b9695505050505050565b60208082526032908201527f57696c6c65723a2062656e656669636961726965735f20616e642073686172656040820152710e6be40d8cadccee8d040dad2e6dac2e8c6d60731b606082015260800190565b6020808252602f908201527f57696c6c65723a2061646472657373207a65726f206973206e6f74206120766160408201526e6c69642062656e656669636961727960881b606082015260800190565b6020808252602b908201527f57696c6c65723a207465737461746f72206973206e6f7420612076616c69642060408201526a62656e656669636961727960a81b606082015260800190565b6020808252602c908201527f57696c6c65723a2073686172652063616e27742062652067726561746572207460408201526b68616e204d4158534841524560a01b606082015260800190565b60208082526018908201527f57696c6c65723a2073686172652063616e277420626520300000000000000000604082015260600190565b60208082526037908201527f57696c6c65723a2072657175697265282072656c656173652074696d65203e2060408201527f63757272656e742074696d65202b204255464645522029000000000000000000606082015260800190565b60208082526037908201527f57696c6c65723a2061646472657373207a65726f206973206e6f74206120766160408201527f6c69642062656e65666963696172794f66455243373231000000000000000000606082015260800190565b60006020828403121561331657600080fd5b5051919050565b81810381811115612dfc57612dfc612dd3565b60005b8381101561334b578181015183820152602001613333565b50506000910152565b6000815180845261336c816020860160208601613330565b601f01601f19169290920160200192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906127e490830184613354565b60208082526022908201527f57696c6c65723a204e6f20455243323020746f6b656e7320746f2072656c6561604082015261736560f01b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b60006020828403121561342457600080fd5b815180151581146125bf57600080fd5b60008251613446818460208701613330565b9190910192915050565b6020815260006125bf602083018461335456fea2646970667358221220d6a37bed79769aa455a187184e912174d53b110ad85aacc76e3d86f9bb05c38964736f6c63430008100033",
  "deployedSourceMap": "520:16225:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5727:129;;;;;;:::i;:::-;-1:-1:-1;;;;;5813:24:11;5790:4;5813:24;;;:14;:24;;;;;:36;;;;5727:129;;;;687:25:12;;;675:2;660:18;5727:129:11;;;;;;;;5862:159;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14592:450::-;;;;;;:::i;:::-;;:::i;:::-;;6292:184;;;;;;:::i;:::-;-1:-1:-1;;;;;6424:25:11;;;6378:27;6424:25;;;:14;:25;;;;;:45;;;;;6292:184;;;;-1:-1:-1;;;;;2657:32:12;;;2639:51;;2627:2;2612:18;6292:184:11;2493:203:12;16516:122:11;;;;;;:::i;:::-;;:::i;5464:78::-;5529:6;;5464:78;;1831:101:0;;;:::i;5639:82:11:-;5706:8;;5639:82;;14171:415;;;;;;:::i;:::-;;:::i;15713:797::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;5548::11;5616:10;;5548:85;;4730:728;;;;;;:::i;:::-;;:::i;9527:374::-;;;;;;:::i;:::-;;:::i;6161:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6245:24:11;6222:4;6245:24;;;:14;:24;;;;;:34;;;;6161:125;6581:462;;;;;;:::i;:::-;;:::i;:::-;;;7087:14:12;;7080:22;7062:41;;7050:2;7035:18;6581:462:11;6922:187:12;7049:365:11;;;;;;:::i;:::-;;:::i;11190:437::-;;;;;;:::i;:::-;;:::i;7420:329::-;;;;;;:::i;:::-;;:::i;11633:471::-;;;;;;:::i;:::-;;:::i;16644:99::-;16721:15;;-1:-1:-1;;;;;16721:15:11;16644:99;;9907:364;;;;;;:::i;:::-;;:::i;6027:128::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;15048:659:11:-;;;;;;:::i;:::-;;:::i;5862:159::-;-1:-1:-1;;;;;5976:24:11;;;;;;:14;:24;;;;;;;;;5969:45;;;;;;;;;;;;;;;;;5941:16;;5969:45;;;5976:24;5969:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5969:45:11;;;;;;;;;;;;;;;;;;;;;;;5862:159;;;:::o;14592:450::-;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;14757:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;;;;;;;;;1355:10:::1;::::0;-1:-1:-1;;;;;1315:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;14793:8;;1315:50:::1;::::0;::::1;:::i;:::-;1280:15;:85;;1259:157;;;;-1:-1:-1::0;;;1259:157:11::1;;;;;;;:::i;:::-;2261:21:1::2;:19;:21::i;:::-;14842:6:11::3;14837:199;14854:23:::0;;::::3;14837:199;;;14898:127;14940:8;14966:12;14996;;15009:1;14996:15;;;;;;;:::i;:::-;;;;;;;14898:24;:127::i;:::-;14879:3:::0;::::3;::::0;::::3;:::i;:::-;;;;14837:199;;;;2303:20:1::2;1716:1:::0;2809:22;;2629:209;2303:20:::2;3438:1:11::1;14592:450:::0;;;;;:::o;16516:122::-;1094:13:0;:11;:13::i;:::-;16597:15:11::1;:34:::0;;-1:-1:-1;;;;;;16597:34:11::1;-1:-1:-1::0;;;;;16597:34:11;;;::::1;::::0;;;::::1;::::0;;16516:122::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;14171:415:11:-;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;14337:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1093:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;14366:8;;1074:15:::1;:56;;1053:123;;;;-1:-1:-1::0;;;1053:123:11::1;;;;;;;:::i;:::-;14406:8:::2;4185:27;4248:6:::0;4230:268:::2;-1:-1:-1::0;;;;;4276:25:11;::::2;;::::0;;;:14:::2;:25;::::0;;;;:46;4272:50;::::2;4230:268;;;-1:-1:-1::0;;;;;4382:25:11;::::2;;::::0;;;:14:::2;:25;::::0;;;;:42;;4422:1;;4382:42;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;-1:-1:-1;;;;;4382:42:11::2;4368:10;:56:::0;4364:124:::2;;4469:4;4444:29;;4364:124;4336:3:::0;::::2;::::0;::::2;:::i;:::-;;;;4230:268;;;-1:-1:-1::0;;;;;;4525:25:11;;::::2;;::::0;;;:14:::2;:25;::::0;;;;:45:::2;;::::0;::::2;4511:10;:59:::0;4507:119:::2;;-1:-1:-1::0;4611:4:11::2;4507:119;4644:22;4636:70;;;;-1:-1:-1::0;;;4636:70:11::2;;;;;;;:::i;:::-;2261:21:1::3;:19;:21::i;:::-;14458:6:11::4;14453:127;14470:23:::0;;::::4;14453:127;;;14514:55;14529:8;14539:12;14553;;14566:1;14553:15;;;;;;;:::i;:::-;;;;;;;14514:14;:55::i;:::-;14495:3:::0;::::4;::::0;::::4;:::i;:::-;;;;14453:127;;;;2303:20:1::3;1716:1:::0;2809:22;;2629:209;2303:20:::3;4175:549:11::2;1186:1;3438::::1;14171:415:::0;;;;;:::o;15713:797::-;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;16022:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;1355:10:::1;::::0;-1:-1:-1;;;;;1315:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;16053:8;;1315:50:::1;::::0;::::1;:::i;:::-;1280:15;:85;;1259:157;;;;-1:-1:-1::0;;;1259:157:11::1;;;;;;;:::i;:::-;16073:4:::2;-1:-1:-1::0;;;;;16073:32:11::2;;16106:8;16116:14;;16073:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;16141:4;-1:-1:-1::0;;;;;16141:33:11::2;;16188:8;16210:15;;16239:18;;16141:126;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;16282:6;16277:227;16294:27:::0;;::::2;16277:227;;;16342:4;:34;16394:8:::0;16420:16;;16437:1;16420:19;;::::2;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;16457;;16477:1;16457:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;16342:151;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;16323:3;;;;;:::i;:::-;;;;16277:227;;;;3438:1:::1;15713:797:::0;;;;;;;;;;;;:::o;4730:728::-;4945:14;;4961:7;;4970:10;2072:39;;;2051:136;;;;-1:-1:-1;;;2051:136:11;;;;;;;:::i;:::-;2203:6;2198:558;2211:25;;;2198:558;;;2311:1;2282:14;;2297:1;2282:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2282:31:11;;2257:137;;;;-1:-1:-1;;;2257:137:11;;;;;;;:::i;:::-;2454:9;-1:-1:-1;;;;;2433:30:11;:14;;2448:1;2433:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2433:30:11;;2408:132;;;;-1:-1:-1;;;2408:132:11;;;;;;;:::i;:::-;2593:8;;2579:7;;2587:1;2579:10;;;;;;;:::i;:::-;;;;;;;:22;;2554:125;;;;-1:-1:-1;;;2554:125:11;;;;;;;:::i;:::-;2701:7;;2709:1;2701:10;;;;;;;:::i;:::-;;;;;;;2715:1;2701:15;2693:52;;;;-1:-1:-1;;;2693:52:11;;;;;;;:::i;:::-;2238:3;;;;:::i;:::-;;;;2198:558;;;;5007:12:::1;1550:6;;1532:15;:24;;;;:::i;:::-;1516:12;:40;;1495:142;;;;-1:-1:-1::0;;;1495:142:11::1;;;;;;;:::i;:::-;5054:20:::0;-1:-1:-1;;;;;1756:34:11;::::2;1735:136;;;;-1:-1:-1::0;;;1735:136:11::2;;;;;;;:::i;:::-;5096:7:::3;;2840:6;2835:254;2848:18:::0;;::::3;2835:254;;;2926:8;;2912:7;;2920:1;2912:10;;;;;;;:::i;:::-;;;;;;;:22;;2887:125;;;;-1:-1:-1::0;;;2887:125:11::3;;;;;;;:::i;:::-;3048:1;3034:7;;3042:1;3034:10;;;;;;;:::i;:::-;;;;;;;:15;;3026:52;;;;-1:-1:-1::0;;;3026:52:11::3;;;;;;;:::i;:::-;2868:3:::0;::::3;::::0;::::3;:::i;:::-;;;;2835:254;;;;5119:14:::4;5136;:26;5151:10;-1:-1:-1::0;;;;;5136:26:11::4;-1:-1:-1::0;;;;;5136:26:11::4;;;;;;;;;;;;5119:43;;5190:14;;5172:1;:15;;:32;;;;;;;:::i;:::-;-1:-1:-1::0;5214:18:11::4;:8;::::0;::::4;5225:7:::0;;5214:18:::4;:::i;:::-;-1:-1:-1::0;5256:1:11::4;5242:11;::::0;::::4;:15:::0;;;5267:21:::4;::::0;::::4;:44:::0;;-1:-1:-1;;;;;;5267:44:11::4;-1:-1:-1::0;;;;;5267:44:11;::::4;;::::0;;5321:13:::4;::::0;::::4;:28:::0;;;5360:92:::4;5377:18:::0;;::::4;5360:92;;;5431:7;;5439:1;5431:10;;;;;;;:::i;:::-;;;;;;;5416:1;:11;;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5397:3:11;;-1:-1:-1;5397:3:11::4;::::0;::::4;:::i;:::-;;;;5360:92;;;;5109:349;1881:1:::3;;1647::::2;2765::::1;4730:728:::0;;;;;;;;;;;:::o;9527:374::-;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;9664:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1093:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;9693:8;;1074:15:::1;:56;;1053:123;;;;-1:-1:-1::0;;;1053:123:11::1;;;;;;;:::i;:::-;9733:8:::2;4185:27;4248:6:::0;4230:268:::2;-1:-1:-1::0;;;;;4276:25:11;::::2;;::::0;;;:14:::2;:25;::::0;;;;:46;4272:50;::::2;4230:268;;;-1:-1:-1::0;;;;;4382:25:11;::::2;;::::0;;;:14:::2;:25;::::0;;;;:42;;4422:1;;4382:42;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;-1:-1:-1;;;;;4382:42:11::2;4368:10;:56:::0;4364:124:::2;;4469:4;4444:29;;4364:124;4336:3:::0;::::2;::::0;::::2;:::i;:::-;;;;4230:268;;;-1:-1:-1::0;;;;;;4525:25:11;;::::2;;::::0;;;:14:::2;:25;::::0;;;;:45:::2;;::::0;::::2;4511:10;:59:::0;4507:119:::2;;-1:-1:-1::0;4611:4:11::2;4507:119;4644:22;4636:70;;;;-1:-1:-1::0;;;4636:70:11::2;;;;;;;:::i;:::-;2261:21:1::3;:19;:21::i;:::-;9785:6:11::4;9780:115;9797:25:::0;;::::4;9780:115;;;9843:41;9856:8;9866:14;;9881:1;9866:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9843:12;:41::i;:::-;9824:3:::0;::::4;::::0;::::4;:::i;:::-;;;;9780:115;;;;2303:20:1::3;1716:1:::0;2809:22;;2629:209;2303:20:::3;4175:549:11::2;1186:1;3438::::1;9527:374:::0;;;;:::o;6581:462::-;6730:10;6836:4;3183:25;;;:14;:25;;;;;:37;;;6836:4;;6730:10;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;6778:16;;6796:9;;6807:10:::1;2072:39:::0;;::::1;2051:136;;;;-1:-1:-1::0;;;2051:136:11::1;;;;;;;:::i;:::-;2203:6;2198:558;2211:25:::0;;::::1;2198:558;;;2311:1;2282:14:::0;;2297:1;2282:17;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2282:31:11::1;::::0;2257:137:::1;;;;-1:-1:-1::0;;;2257:137:11::1;;;;;;;:::i;:::-;2454:9;-1:-1:-1::0;;;;;2433:30:11::1;:14;;2448:1;2433:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2433:30:11::1;::::0;2408:132:::1;;;;-1:-1:-1::0;;;2408:132:11::1;;;;;;;:::i;:::-;2593:8;;2579:7;;2587:1;2579:10;;;;;;;:::i;:::-;;;;;;;:22;;2554:125;;;;-1:-1:-1::0;;;2554:125:11::1;;;;;;;:::i;:::-;2701:7;;2709:1;2701:10;;;;;;;:::i;:::-;;;;;;;2715:1;2701:15:::0;2693:52:::1;;;;-1:-1:-1::0;;;2693:52:11::1;;;;;;;:::i;:::-;2238:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2198:558;;;-1:-1:-1::0;6871:10:11::2;6856:26;::::0;;;:14:::2;:26;::::0;;;;:59:::2;::::0;6899:16;;6856:59:::2;:::i;:::-;-1:-1:-1::0;6940:10:11::2;6925:26;::::0;;;:14:::2;:26;::::0;;;;:45:::2;::::0;:33:::2;;6961:9:::0;;6925:45:::2;:::i;:::-;-1:-1:-1::0;7032:4:11::2;::::0;6581:462;-1:-1:-1;;;;;;;;;;;6581:462:11:o;7049:365::-;7147:10;7217:4;3183:25;;;:14;:25;;;;;:37;;;7217:4;;7147:10;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;7184:14:::1;1550:6;;1532:15;:24;;;;:::i;:::-;1516:12;:40;;1495:142;;;;-1:-1:-1::0;;;1495:142:11::1;;;;;;;:::i;:::-;-1:-1:-1::0;;7252:10:11::2;7237:26;::::0;;;:14:::2;:26;::::0;;;;:38:::2;;:55:::0;;;-1:-1:-1;7237:55:11;7049:365::o;11190:437::-;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;11370:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;1093:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;11399:8;;1074:15:::1;:56;;1053:123;;;;-1:-1:-1::0;;;1053:123:11::1;;;;;;;:::i;:::-;11439:8:::2;4185:27;4248:6:::0;4230:268:::2;-1:-1:-1::0;;;;;4276:25:11;::::2;;::::0;;;:14:::2;:25;::::0;;;;:46;4272:50;::::2;4230:268;;;-1:-1:-1::0;;;;;4382:25:11;::::2;;::::0;;;:14:::2;:25;::::0;;;;:42;;4422:1;;4382:42;::::2;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;::::0;-1:-1:-1;;;;;4382:42:11::2;4368:10;:56:::0;4364:124:::2;;4469:4;4444:29;;4364:124;4336:3:::0;::::2;::::0;::::2;:::i;:::-;;;;4230:268;;;-1:-1:-1::0;;;;;;4525:25:11;;::::2;;::::0;;;:14:::2;:25;::::0;;;;:45:::2;;::::0;::::2;4511:10;:59:::0;4507:119:::2;;-1:-1:-1::0;4611:4:11::2;4507:119;4644:22;4636:70;;;;-1:-1:-1::0;;;4636:70:11::2;;;;;;;:::i;:::-;2261:21:1::3;:19;:21::i;:::-;11491:6:11::4;11486:135;11503:26:::0;;::::4;11486:135;;;11550:60;11564:8;11574:15;;11590:1;11574:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11594:12;;11607:1;11594:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;11550:13;:60::i;:::-;11531:3:::0;::::4;::::0;::::4;:::i;:::-;;;;11486:135;;;;2303:20:1::3;1716:1:::0;2809:22;;2629:209;2303:20:::3;4175:549:11::2;1186:1;3438::::1;11190:437:::0;;;;;;:::o;7420:329::-;7535:10;3183:25;;;;:14;:25;;;;;:37;;;:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;7580:22;-1:-1:-1;;;;;1756:34:11;::::1;1735:136;;;;-1:-1:-1::0;;;1735:136:11::1;;;;;;;:::i;:::-;-1:-1:-1::0;;7633:10:11::2;7618:26;::::0;;;:14:::2;:26;::::0;;;;:46:::2;;:71:::0;;-1:-1:-1;;;;;;7618:71:11::2;-1:-1:-1::0;;;;;7618:71:11;;;::::2;::::0;;;::::2;::::0;;7420:329::o;11633:471::-;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;11812:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;1355:10:::1;::::0;-1:-1:-1;;;;;1315:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;11848:8;;1315:50:::1;::::0;::::1;:::i;:::-;1280:15;:85;;1259:157;;;;-1:-1:-1::0;;;1259:157:11::1;;;;;;;:::i;:::-;2261:21:1::2;:19;:21::i;:::-;11896:6:11::3;11891:207;11908:26:::0;;::::3;11891:207;;;11955:132;11996:8;12022:15;;12038:1;12022:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12058:12;;12071:1;12058:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;11955:23;:132::i;:::-;11936:3:::0;::::3;::::0;::::3;:::i;:::-;;;;11891:207;;9907:364:::0;-1:-1:-1;;;;;3183:25:11;;;;;;:14;:25;;;;;:37;;;10054:8;;3183:42;;;;:113;;-1:-1:-1;;;;;;3245:25:11;;;;;;:14;:25;;;;;:46;:51;;3183:113;:192;;;;-1:-1:-1;;;;;;3316:25:11;;;3373:1;3316:25;;;:14;:25;;;;;:45;;;;:59;;3183:192;3161:267;;;;-1:-1:-1;;;3161:267:11;;;;;;;:::i;:::-;1355:10:::1;::::0;-1:-1:-1;;;;;1315:25:11;::::1;;::::0;;;:14:::1;:25;::::0;;;;:37:::1;;::::0;10093:8;;1315:50:::1;::::0;::::1;:::i;:::-;1280:15;:85;;1259:157;;;;-1:-1:-1::0;;;1259:157:11::1;;;;;;;:::i;:::-;2261:21:1::2;:19;:21::i;:::-;10145:6:11::3;10140:125;10157:25:::0;;::::3;10140:125;;;10203:51;10226:8;10236:14;;10251:1;10236:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10203:22;:51::i;:::-;10184:3:::0;::::3;::::0;::::3;:::i;:::-;;;;10140:125;;;;2303:20:1::2;1716:1:::0;2809:22;;2629:209;2303:20:::2;3438:1:11::1;9907:364:::0;;;;:::o;6027:128::-;-1:-1:-1;;;;;6117:24:11;;;;;;:14;:24;;;;;;;;;:31;;6110:38;;;;;;;;;;;;;;;;;6085:13;;6110:38;;;6117:31;6110:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6027:128;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;18955:2:12;2161:73:0::1;::::0;::::1;18937:21:12::0;18994:2;18974:18;;;18967:30;19033:34;19013:18;;;19006:62;-1:-1:-1;;;19084:18:12;;;19077:36;19130:19;;2161:73:0::1;18753:402:12::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;15048:659:11:-;15346:48;;-1:-1:-1;;;15346:48:11;;:4;;:22;;:48;;15369:8;;15379:14;;;;15346:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15404:70:11;;-1:-1:-1;;;15404:70:11;;:4;;-1:-1:-1;15404:23:11;;-1:-1:-1;15404:70:11;;15428:8;;15438:15;;;;15455:18;;;;15404:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15489:6;15484:217;15501:27;;;15484:217;;;15549:4;:24;15591:8;15617:16;;15634:1;15617:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;15654;;15674:1;15654:22;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;15549:141;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15530:3;;;;;:::i;:::-;;;;15484:217;;;;15048:659;;;;;;;;;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;19362:2:12;2460:63:1;;;19344:21:12;19401:2;19381:18;;;19374:30;19440:33;19420:18;;;19413:61;19491:18;;2460:63:1;19160:355:12;2460:63:1;1759:1;2598:7;:18;2336:287::o;13155:1010:11:-;13307:41;;-1:-1:-1;;;13307:41:11;;-1:-1:-1;;;;;19712:32:12;;;13307:41:11;;;19694:51:12;19761:18;;;19754:34;;;13292:12:11;;13307:22;;;;;;19667:18:12;;13307:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13292:56;;13358:12;13402:6;13384:696;-1:-1:-1;;;;;13430:24:11;;;;;;:14;:24;;;;;:45;13426:49;;13384:696;;;-1:-1:-1;;;;;13559:24:11;;;;;;:14;:24;;;;;:31;;:34;;13527:132;;13559:31;13591:1;;13559:34;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;13611:24:11;;;;:14;:24;;;;;;;:34;;;13527:7;;13559:34;13527:14;:132::i;:::-;-1:-1:-1;;;;;13742:24:11;;;;;;:14;:24;;;;;:45;13517:142;;-1:-1:-1;13742:49:11;;13790:1;;13742:49;:::i;:::-;13737:1;:54;13733:144;;13821:41;;-1:-1:-1;;;13821:41:11;;-1:-1:-1;;;;;19712:32:12;;;13821:41:11;;;19694:51:12;19761:18;;;19754:34;;;13821:22:11;;;;;19667:18:12;;13821:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13811:51;;13733:144;13963:15;;14046:9;;;;;;;;-1:-1:-1;14046:9:11;;13890:179;;-1:-1:-1;;;13890:179:11;;-1:-1:-1;;;;;13890:29:11;;;;;;:179;;13937:8;;13963:15;;;;13996:7;;14021;;13890:179;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13489:3;;;;;:::i;:::-;;;;13384:696;;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;21418:2:12;1414:68:0;;;21400:21:12;;;21437:18;;;21430:30;21496:34;21476:18;;;21469:62;21548:18;;1414:68:0;21216:356:12;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;12110:1039:11:-;12265:41;;-1:-1:-1;;;12265:41:11;;-1:-1:-1;;;;;19712:32:12;;;12265:41:11;;;19694:51:12;19761:18;;;19754:34;;;12250:12:11;;12265:22;;;;;;19667:18:12;;12265:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12250:56;;12316:12;12360:6;12342:722;-1:-1:-1;;;;;12388:24:11;;;;;;:14;:24;;;;;:45;12384:49;;12342:722;;;-1:-1:-1;;;;;12517:24:11;;;;;;:14;:24;;;;;:31;;:34;;12485:132;;12517:31;12549:1;;12517:34;;;;;;:::i;12485:132::-;-1:-1:-1;;;;;12700:24:11;;;;;;:14;:24;;;;;:45;12475:142;;-1:-1:-1;12700:49:11;;12748:1;;12700:49;:::i;:::-;12695:1;:54;12691:144;;12779:41;;-1:-1:-1;;;12779:41:11;;-1:-1:-1;;;;;19712:32:12;;;12779:41:11;;;19694:51:12;19761:18;;;19754:34;;;12779:22:11;;;;;19667:18:12;;12779:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12769:51;;12691:144;-1:-1:-1;;;;;12921:24:11;;;;;;;:14;:24;;;;;:41;;12848:29;;;;;;12895:8;;12960:1;;12921:41;;;;;;:::i;:::-;;;;;;;;;;;;;13030:9;;;;;;;;;;;12848:205;;-1:-1:-1;;;;;;12848:205:11;;;;;;;;;;-1:-1:-1;;;;;12921:41:11;;12980:7;;13005;;13030:9;12848:205;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12447:3;;;;;:::i;:::-;;;;12342:722;;8297:1224;8446:30;;-1:-1:-1;;;8446:30:11;;-1:-1:-1;;;;;2657:32:12;;;8446:30:11;;;2639:51:12;8431:12:11;;8446:20;;;;;;2612:18:12;;8446:30:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8431:45;;8486:12;8520:7;8531:1;8520:12;8512:59;;;;-1:-1:-1;;;8512:59:11;;;;;;;:::i;:::-;8596:45;;-1:-1:-1;;;8596:45:11;;-1:-1:-1;;;;;22210:15:12;;;8596:45:11;;;22192:34:12;8635:4:11;22242:18:12;;;22235:43;8581:12:11;;8596:20;;;;;;22127:18:12;;8596:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8581:60;;8659:7;8670:1;8659:12;8651:53;;;;-1:-1:-1;;;8651:53:11;;22491:2:12;8651:53:11;;;22473:21:12;22530:2;22510:18;;;22503:30;22569;22549:18;;;22542:58;22617:18;;8651:53:11;22289:352:12;8651:53:11;8728:7;8718;:17;8714:65;;;8761:7;8751:17;;8714:65;8806:6;8788:727;-1:-1:-1;;;;;8834:24:11;;;;;;:14;:24;;;;;:45;8830:49;;8788:727;;;-1:-1:-1;;;;;8963:24:11;;;;;;:14;:24;;;;;:31;;:34;;8931:132;;8963:31;8995:1;;8963:34;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;9015:24:11;;;;:14;:24;;;;;;;:34;;;8931:7;;8963:34;8931:14;:132::i;:::-;-1:-1:-1;;;;;9146:24:11;;;;;;:14;:24;;;;;:45;8921:142;;-1:-1:-1;9146:49:11;;9194:1;;9146:49;:::i;:::-;9141:1;:54;9137:133;;9225:30;;-1:-1:-1;;;9225:30:11;;-1:-1:-1;;;;;2657:32:12;;;9225:30:11;;;2639:51:12;9225:20:11;;;;;2612:18:12;;9225:30:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9215:40;;9137:133;-1:-1:-1;;;;;9354:24:11;;;;;;:14;:24;;;;;:41;;9283:151;;9328:8;;9393:1;;9354:41;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;9283:27:11;;;;:151;9354:41;9413:7;9283:27;:151::i;:::-;8893:3;;;;:::i;:::-;;;;8788:727;;10277:466;10433:6;10428:233;10445:22;;;10428:233;;;-1:-1:-1;;;;;10560:24:11;;;;;;;:14;:24;;;;;:44;;;10488:28;;;;;;10534:8;;10560:44;10622:11;;10634:1;10622:14;;;;;;;:::i;:::-;10488:162;;-1:-1:-1;;;;;;10488:162:11;;;;;;;-1:-1:-1;;;;;22904:15:12;;;10488:162:11;;;22886:34:12;22956:15;;;;22936:18;;;22929:43;-1:-1:-1;10622:14:11;;;;;;22988:18:12;;;22981:34;22821:18;;10488:162:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10469:3;;;;;:::i;:::-;;;;10428:233;;10749:435;10903:6;10898:204;10915:22;;;10898:204;;;11030:15;;-1:-1:-1;;;;;10958:28:11;;;;;;11004:8;;11030:15;11063:11;;11075:1;11063:14;;;;;;;:::i;:::-;10958:133;;-1:-1:-1;;;;;;10958:133:11;;;;;;;-1:-1:-1;;;;;22904:15:12;;;10958:133:11;;;22886:34:12;22956:15;;;;22936:18;;;22929:43;-1:-1:-1;11063:14:11;;;;;;22988:18:12;;;22981:34;22821:18;;10958:133:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10939:3;;;;;:::i;:::-;;;;10898:204;;7755:536;7879:30;;-1:-1:-1;;;7879:30:11;;-1:-1:-1;;;;;2657:32:12;;;7879:30:11;;;2639:51:12;7864:12:11;;7879:20;;;;;;2612:18:12;;7879:30:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7864:45;;7919:12;7953:7;7964:1;7953:12;7945:59;;;;-1:-1:-1;;;7945:59:11;;;;;;;:::i;:::-;8029:45;;-1:-1:-1;;;8029:45:11;;-1:-1:-1;;;;;22210:15:12;;;8029:45:11;;;22192:34:12;8068:4:11;22242:18:12;;;22235:43;8014:12:11;;8029:20;;;;;;22127:18:12;;8029:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8014:60;;8092:7;8103:1;8092:12;8084:53;;;;-1:-1:-1;;;8084:53:11;;22491:2:12;8084:53:11;;;22473:21:12;22530:2;22510:18;;;22503:30;22569;22549:18;;;22542:58;22617:18;;8084:53:11;22289:352:12;8084:53:11;8161:7;8151;:17;8147:65;;;8194:7;8184:17;;8147:65;8259:15;;8221:63;;-1:-1:-1;;;;;8221:27:11;;;;8249:8;;8259:15;8276:7;8221:27;:63::i;1667:3925:10:-;1779:14;;;-1:-1:-1;;2316:1:10;2313;2306:20;2359:1;2356;2352:9;2343:18;;2414:5;2410:2;2407:13;2399:5;2395:2;2391:14;2387:34;2378:43;;;2516:5;2525:1;2516:10;2512:75;;2561:11;2553:5;:19;;;;;:::i;:::-;;2546:26;;;;;;2512:75;2711:5;2697:11;:19;2689:28;;;;;;2973:17;3108:11;3105:1;3102;3095:25;3641:12;;3656:1;3641:16;;;3626:32;;3761:22;;;;;3269:21;;;3859:16;;;3222:20;;;;3211:32;;;3611:12;4006;;;4002:23;;;;3998:31;;;4118:12;;;;4109:21;;;;4467:1;:15;;4486:1;4466:21;;;4719;;;4715:25;;4704:36;4788:21;;;4784:25;;4773:36;4858:21;;;4854:25;;4843:36;4928:21;;;4924:25;;4913:36;4998:21;;;4994:25;;4983:36;5069:21;;;5065:25;;;5054:36;5533:15;;-1:-1:-1;;1667:3925:10;;;;;;:::o;974:241:5:-;1139:68;;;-1:-1:-1;;;;;22904:15:12;;;1139:68:5;;;22886:34:12;22956:15;;22936:18;;;22929:43;22988:18;;;;22981:34;;;1139:68:5;;;;;;;;;;22821:18:12;;;;1139:68:5;;;;;;;;-1:-1:-1;;;;;1139:68:5;-1:-1:-1;;;1139:68:5;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:5;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:5;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:5;;23642:2:12;4351:85:5;;;23624:21:12;23681:2;23661:18;;;23654:30;23720:34;23700:18;;;23693:62;-1:-1:-1;;;23771:18:12;;;23764:40;23821:19;;4351:85:5;23440:406:12;4351:85:5;3817:636;3747:706;;:::o;3873:223:7:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:7:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:7;;24053:2:12;5149:81:7;;;24035:21:12;24092:2;24072:18;;;24065:30;24131:34;24111:18;;;24104:62;-1:-1:-1;;;24182:18:12;;;24175:36;24228:19;;5149:81:7;23851:402:12;5149:81:7;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:7;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:7:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:7;;;7908:60;;;;-1:-1:-1;;;7908:60:7;;24752:2:12;7908:60:7;;;24734:21:12;24791:2;24771:18;;;24764:30;24830:31;24810:18;;;24803:59;24879:18;;7908:60:7;24550:353:12;7908:60:7;-1:-1:-1;8003:10:7;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:7;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:12;-1:-1:-1;;;;;89:31:12;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:247::-;348:6;401:2;389:9;380:7;376:23;372:32;369:52;;;417:1;414;407:12;369:52;456:9;443:23;475:31;500:5;475:31;:::i;723:658::-;894:2;946:21;;;1016:13;;919:18;;;1038:22;;;865:4;;894:2;1117:15;;;;1091:2;1076:18;;;865:4;1160:195;1174:6;1171:1;1168:13;1160:195;;;1239:13;;-1:-1:-1;;;;;1235:39:12;1223:52;;1330:15;;;;1295:12;;;;1271:1;1189:9;1160:195;;;-1:-1:-1;1372:3:12;;723:658;-1:-1:-1;;;;;;723:658:12:o;1386:367::-;1449:8;1459:6;1513:3;1506:4;1498:6;1494:17;1490:27;1480:55;;1531:1;1528;1521:12;1480:55;-1:-1:-1;1554:20:12;;1597:18;1586:30;;1583:50;;;1629:1;1626;1619:12;1583:50;1666:4;1658:6;1654:17;1642:29;;1726:3;1719:4;1709:6;1706:1;1702:14;1694:6;1690:27;1686:38;1683:47;1680:67;;;1743:1;1740;1733:12;1680:67;1386:367;;;;;:::o;1758:730::-;1879:6;1887;1895;1903;1956:2;1944:9;1935:7;1931:23;1927:32;1924:52;;;1972:1;1969;1962:12;1924:52;2011:9;1998:23;2030:31;2055:5;2030:31;:::i;:::-;2080:5;-1:-1:-1;2137:2:12;2122:18;;2109:32;2150:33;2109:32;2150:33;:::i;:::-;2202:7;-1:-1:-1;2260:2:12;2245:18;;2232:32;2287:18;2276:30;;2273:50;;;2319:1;2316;2309:12;2273:50;2358:70;2420:7;2411:6;2400:9;2396:22;2358:70;:::i;:::-;1758:730;;;;-1:-1:-1;2447:8:12;-1:-1:-1;;;;1758:730:12:o;2701:1864::-;3042:6;3050;3058;3066;3074;3082;3090;3098;3106;3114;3122:7;3176:3;3164:9;3155:7;3151:23;3147:33;3144:53;;;3193:1;3190;3183:12;3144:53;3216:29;3235:9;3216:29;:::i;:::-;3206:39;;3264:18;3331:2;3325;3314:9;3310:18;3297:32;3294:40;3291:60;;;3347:1;3344;3337:12;3291:60;3386:96;3474:7;3467:2;3456:9;3452:18;3439:32;3428:9;3424:48;3386:96;:::i;:::-;3501:8;;-1:-1:-1;3528:8:12;-1:-1:-1;3579:2:12;3564:18;;3551:32;3548:40;-1:-1:-1;3545:60:12;;;3601:1;3598;3591:12;3545:60;3640:96;3728:7;3721:2;3710:9;3706:18;3693:32;3682:9;3678:48;3640:96;:::i;:::-;3755:8;;-1:-1:-1;3782:8:12;-1:-1:-1;3833:2:12;3818:18;;3805:32;3802:40;-1:-1:-1;3799:60:12;;;3855:1;3852;3845:12;3799:60;3894:96;3982:7;3975:2;3964:9;3960:18;3947:32;3936:9;3932:48;3894:96;:::i;:::-;4009:8;;-1:-1:-1;4036:8:12;-1:-1:-1;4087:3:12;4072:19;;4059:33;4056:41;-1:-1:-1;4053:61:12;;;4110:1;4107;4100:12;4053:61;4149:97;4238:7;4230:3;4219:9;4215:19;4202:33;4191:9;4187:49;4149:97;:::i;:::-;4265:8;;-1:-1:-1;4292:8:12;-1:-1:-1;4343:3:12;4328:19;;4315:33;4312:41;-1:-1:-1;4309:61:12;;;4366:1;4363;4356:12;4309:61;;4406:97;4495:7;4487:3;4476:9;4472:19;4459:33;4448:9;4444:49;4406:97;:::i;:::-;4522:8;4512:18;;4550:9;4539:20;;;;2701:1864;;;;;;;;;;;;;;:::o;4570:977::-;4710:6;4718;4726;4734;4742;4750;4803:3;4791:9;4782:7;4778:23;4774:33;4771:53;;;4820:1;4817;4810:12;4771:53;4860:9;4847:23;4889:18;4930:2;4922:6;4919:14;4916:34;;;4946:1;4943;4936:12;4916:34;4985:70;5047:7;5038:6;5027:9;5023:22;4985:70;:::i;:::-;5074:8;;-1:-1:-1;4959:96:12;-1:-1:-1;5162:2:12;5147:18;;5134:32;;-1:-1:-1;5178:16:12;;;5175:36;;;5207:1;5204;5197:12;5175:36;;5246:72;5310:7;5299:8;5288:9;5284:24;5246:72;:::i;:::-;5337:8;;-1:-1:-1;5220:98:12;-1:-1:-1;;5422:2:12;5407:18;;5394:32;5435:31;5394:32;5435:31;:::i;:::-;5485:5;5475:15;;;5537:2;5526:9;5522:18;5509:32;5499:42;;4570:977;;;;;;;;:::o;5552:587::-;5662:6;5670;5678;5731:2;5719:9;5710:7;5706:23;5702:32;5699:52;;;5747:1;5744;5737:12;5699:52;5786:9;5773:23;5805:31;5830:5;5805:31;:::i;:::-;5855:5;-1:-1:-1;5911:2:12;5896:18;;5883:32;5938:18;5927:30;;5924:50;;;5970:1;5967;5960:12;5924:50;6009:70;6071:7;6062:6;6051:9;6047:22;6009:70;:::i;:::-;5552:587;;6098:8;;-1:-1:-1;5983:96:12;;-1:-1:-1;;;;5552:587:12:o;6144:773::-;6266:6;6274;6282;6290;6343:2;6331:9;6322:7;6318:23;6314:32;6311:52;;;6359:1;6356;6349:12;6311:52;6399:9;6386:23;6428:18;6469:2;6461:6;6458:14;6455:34;;;6485:1;6482;6475:12;6455:34;6524:70;6586:7;6577:6;6566:9;6562:22;6524:70;:::i;:::-;6613:8;;-1:-1:-1;6498:96:12;-1:-1:-1;6701:2:12;6686:18;;6673:32;;-1:-1:-1;6717:16:12;;;6714:36;;;6746:1;6743;6736:12;6714:36;;6785:72;6849:7;6838:8;6827:9;6823:24;6785:72;:::i;7114:180::-;7173:6;7226:2;7214:9;7205:7;7201:23;7197:32;7194:52;;;7242:1;7239;7232:12;7194:52;-1:-1:-1;7265:23:12;;7114:180;-1:-1:-1;7114:180:12:o;7299:951::-;7473:6;7481;7489;7497;7505;7558:2;7546:9;7537:7;7533:23;7529:32;7526:52;;;7574:1;7571;7564:12;7526:52;7613:9;7600:23;7632:31;7657:5;7632:31;:::i;:::-;7682:5;-1:-1:-1;7738:2:12;7723:18;;7710:32;7761:18;7791:14;;;7788:34;;;7818:1;7815;7808:12;7788:34;7857:70;7919:7;7910:6;7899:9;7895:22;7857:70;:::i;:::-;7946:8;;-1:-1:-1;7831:96:12;-1:-1:-1;8034:2:12;8019:18;;8006:32;;-1:-1:-1;8050:16:12;;;8047:36;;;8079:1;8076;8069:12;8047:36;;8118:72;8182:7;8171:8;8160:9;8156:24;8118:72;:::i;:::-;7299:951;;;;-1:-1:-1;7299:951:12;;-1:-1:-1;8209:8:12;;8092:98;7299:951;-1:-1:-1;;;7299:951:12:o;8255:632::-;8426:2;8478:21;;;8548:13;;8451:18;;;8570:22;;;8397:4;;8426:2;8649:15;;;;8623:2;8608:18;;;8397:4;8692:169;8706:6;8703:1;8700:13;8692:169;;;8767:13;;8755:26;;8836:15;;;;8801:12;;;;8728:1;8721:9;8692:169;;8892:350;9094:2;9076:21;;;9133:2;9113:18;;;9106:30;9172:28;9167:2;9152:18;;9145:56;9233:2;9218:18;;8892:350::o;9247:127::-;9308:10;9303:3;9299:20;9296:1;9289:31;9339:4;9336:1;9329:15;9363:4;9360:1;9353:15;9379:125;9444:9;;;9465:10;;;9462:36;;;9478:18;;:::i;:::-;9379:125;;;;:::o;9509:349::-;9711:2;9693:21;;;9750:2;9730:18;;;9723:30;9789:27;9784:2;9769:18;;9762:55;9849:2;9834:18;;9509:349::o;9863:127::-;9924:10;9919:3;9915:20;9912:1;9905:31;9955:4;9952:1;9945:15;9979:4;9976:1;9969:15;9995:135;10034:3;10055:17;;;10052:43;;10075:18;;:::i;:::-;-1:-1:-1;10122:1:12;10111:13;;9995:135::o;10135:344::-;10337:2;10319:21;;;10376:2;10356:18;;;10349:30;-1:-1:-1;;;10410:2:12;10395:18;;10388:50;10470:2;10455:18;;10135:344::o;10484:399::-;10686:2;10668:21;;;10725:2;10705:18;;;10698:30;10764:34;10759:2;10744:18;;10737:62;-1:-1:-1;;;10830:2:12;10815:18;;10808:33;10873:3;10858:19;;10484:399::o;10888:821::-;-1:-1:-1;;;;;11199:15:12;;;11181:34;;11131:2;11234;11252:18;;;11245:30;;;11116:18;;;11310:22;;;11083:4;;11389:6;;11363:2;11348:18;;11083:4;11423:260;11437:6;11434:1;11431:13;11423:260;;;11512:6;11499:20;11532:31;11557:5;11532:31;:::i;:::-;11588:14;;11576:27;;11658:15;;;;11623:12;;;;11459:1;11452:9;11423:260;;;-1:-1:-1;11700:3:12;10888:821;-1:-1:-1;;;;;;;;10888:821:12:o;11714:311::-;11802:19;;;11784:3;-1:-1:-1;;;;;11833:31:12;;11830:51;;;11877:1;11874;11867:12;11830:51;11913:6;11910:1;11906:14;11965:8;11958:5;11951:4;11946:3;11942:14;11929:45;11994:18;;;;12014:4;11990:29;;11714:311;-1:-1:-1;;;11714:311:12:o;12030:1995::-;-1:-1:-1;;;;;12482:15:12;;;12464:34;;12414:2;12517;12535:18;;;12528:30;;;12399:18;;;12593:22;;;12366:4;;12673:6;;12646:3;12631:19;;12366:4;12707:260;12721:6;12718:1;12715:13;12707:260;;;12796:6;12783:20;12816:31;12841:5;12816:31;:::i;:::-;12872:14;;12860:27;;12942:15;;;;12907:12;;;;12743:1;12736:9;12707:260;;;-1:-1:-1;13003:19:12;;;12998:2;12983:18;;12976:47;13057:19;;;13094:12;;;;-1:-1:-1;13125:1:12;;-1:-1:-1;13162:15:12;;;13153:25;;13149:34;;13208:6;13234:1;13244:752;13260:6;13255:3;13252:15;13244:752;;;13331:16;;;-1:-1:-1;;13327:30:12;13313:45;;13397:22;;13474:14;13470:27;;;-1:-1:-1;;13466:41:12;13442:66;;13432:94;;13522:1;13519;13512:12;13432:94;13554:31;;13661:16;;;;13612:21;13704:18;13693:30;;13690:50;;;13736:1;13733;13726:12;13690:50;13797:6;13793:2;13789:15;13773:14;13769:36;13760:7;13756:50;13753:70;;;13819:1;13816;13809:12;13753:70;13846:62;13901:6;13893;13884:7;13846:62;:::i;:::-;13972:14;;;;13836:72;-1:-1:-1;;;13933:17:12;;;;13286:1;13277:11;13244:752;;;-1:-1:-1;14013:6:12;;12030:1995;-1:-1:-1;;;;;;;;;;;;12030:1995:12:o;14299:545::-;14392:4;14398:6;14458:11;14445:25;14552:2;14548:7;14537:8;14521:14;14517:29;14513:43;14493:18;14489:68;14479:96;;14571:1;14568;14561:12;14479:96;14598:33;;14650:20;;;-1:-1:-1;14693:18:12;14682:30;;14679:50;;;14725:1;14722;14715:12;14679:50;14758:4;14746:17;;-1:-1:-1;14809:1:12;14805:14;;;14789;14785:35;14775:46;;14772:66;;;14834:1;14831;14824:12;14849:503;-1:-1:-1;;;;;15149:15:12;;;15131:34;;15201:15;;15196:2;15181:18;;15174:43;15253:2;15248;15233:18;;15226:30;;;15074:4;;15273:73;;15327:18;;15319:6;15311;15273:73;:::i;:::-;15265:81;14849:503;-1:-1:-1;;;;;;14849:503:12:o;15357:414::-;15559:2;15541:21;;;15598:2;15578:18;;;15571:30;15637:34;15632:2;15617:18;;15610:62;-1:-1:-1;;;15703:2:12;15688:18;;15681:48;15761:3;15746:19;;15357:414::o;15776:411::-;15978:2;15960:21;;;16017:2;15997:18;;;15990:30;16056:34;16051:2;16036:18;;16029:62;-1:-1:-1;;;16122:2:12;16107:18;;16100:45;16177:3;16162:19;;15776:411::o;16192:407::-;16394:2;16376:21;;;16433:2;16413:18;;;16406:30;16472:34;16467:2;16452:18;;16445:62;-1:-1:-1;;;16538:2:12;16523:18;;16516:41;16589:3;16574:19;;16192:407::o;16604:408::-;16806:2;16788:21;;;16845:2;16825:18;;;16818:30;16884:34;16879:2;16864:18;;16857:62;-1:-1:-1;;;16950:2:12;16935:18;;16928:42;17002:3;16987:19;;16604:408::o;17017:348::-;17219:2;17201:21;;;17258:2;17238:18;;;17231:30;17297:26;17292:2;17277:18;;17270:54;17356:2;17341:18;;17017:348::o;17370:419::-;17572:2;17554:21;;;17611:2;17591:18;;;17584:30;17650:34;17645:2;17630:18;;17623:62;17721:25;17716:2;17701:18;;17694:53;17779:3;17764:19;;17370:419::o;17794:::-;17996:2;17978:21;;;18035:2;18015:18;;;18008:30;18074:34;18069:2;18054:18;;18047:62;18145:25;18140:2;18125:18;;18118:53;18203:3;18188:19;;17794:419::o;19799:184::-;19869:6;19922:2;19910:9;19901:7;19897:23;19893:32;19890:52;;;19938:1;19935;19928:12;19890:52;-1:-1:-1;19961:16:12;;19799:184;-1:-1:-1;19799:184:12:o;19988:128::-;20055:9;;;20076:11;;;20073:37;;;20090:18;;:::i;20121:250::-;20206:1;20216:113;20230:6;20227:1;20224:13;20216:113;;;20306:11;;;20300:18;20287:11;;;20280:39;20252:2;20245:10;20216:113;;;-1:-1:-1;;20363:1:12;20345:16;;20338:27;20121:250::o;20376:270::-;20417:3;20455:5;20449:12;20482:6;20477:3;20470:19;20498:76;20567:6;20560:4;20555:3;20551:14;20544:4;20537:5;20533:16;20498:76;:::i;:::-;20628:2;20607:15;-1:-1:-1;;20603:29:12;20594:39;;;;20635:4;20590:50;;20376:270;-1:-1:-1;;20376:270:12:o;20651:560::-;-1:-1:-1;;;;;20948:15:12;;;20930:34;;21000:15;;20995:2;20980:18;;20973:43;21047:2;21032:18;;21025:34;;;21090:2;21075:18;;21068:34;;;20910:3;21133;21118:19;;21111:32;;;20873:4;;21160:45;;21185:19;;21177:6;21160:45;:::i;21577:398::-;21779:2;21761:21;;;21818:2;21798:18;;;21791:30;21857:34;21852:2;21837:18;;21830:62;-1:-1:-1;;;21923:2:12;21908:18;;21901:32;21965:3;21950:19;;21577:398::o;23026:127::-;23087:10;23082:3;23078:20;23075:1;23068:31;23118:4;23115:1;23108:15;23142:4;23139:1;23132:15;23158:277;23225:6;23278:2;23266:9;23257:7;23253:23;23249:32;23246:52;;;23294:1;23291;23284:12;23246:52;23326:9;23320:16;23379:5;23372:13;23365:21;23358:5;23355:32;23345:60;;23401:1;23398;23391:12;24258:287;24387:3;24425:6;24419:13;24441:66;24500:6;24495:3;24488:4;24480:6;24476:17;24441:66;:::i;:::-;24523:16;;;;;24258:287;-1:-1:-1;;24258:287:12:o;24908:219::-;25057:2;25046:9;25039:21;25020:4;25077:44;25117:2;25106:9;25102:18;25094:6;25077:44;:::i",
  "language": "Solidity",
  "natspec": {
    "author": "DimaKush",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Willer",
    "version": 1
  },
  "offset": [
    520,
    16745
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9181141A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xCAEE863E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE6728EDB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE6728EDB EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF04DA65B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xFE36B4C8 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCAEE863E EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xD9732F4D EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xE0024604 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9181141A EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xA26EA21E EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA29093B1 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xA3DA0ECD EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA6FD2339 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xAC8BC77E EQ PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x745137B4 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x7CE752C6 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x8B61E1AA EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0x8EC02773 EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB7EB4C EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1CAB59A4 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x341B46DD EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x47FF5D8A EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x6605BFDA EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x705E8B2E EQ PUSH2 0x246 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A4 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2982 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A1B JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21B PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x571 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x59B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0x2A1B JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0x2A80 JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1A4 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B87 JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2C13 JUMP JUMPDEST PUSH2 0xD1A JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x2D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x302 PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2C68 JUMP JUMPDEST PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0x320 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE1 JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE1 JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x21B JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x2C13 JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH2 0x395 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x1767 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x17D5 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A80 JUMP JUMPDEST PUSH2 0x184E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x414 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x481 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x4A9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP7 SWAP2 PUSH2 0x4F8 SWAP2 PUSH2 0x2DE9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0x51F PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x55F JUMPI PUSH2 0x54D DUP8 DUP8 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x541 JUMPI PUSH2 0x541 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1A2C JUMP JUMPDEST DUP1 PUSH2 0x557 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x522 JUMP JUMPDEST POP PUSH2 0x569 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x579 PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x5A3 PUSH2 0x1C51 JUMP JUMPDEST PUSH2 0x5AD PUSH1 0x0 PUSH2 0x1CAB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5F2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x61A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP6 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x673 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP6 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6C2 JUMPI PUSH2 0x6C2 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x6E2 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x6EC DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER SUB PUSH2 0x71D JUMPI POP PUSH1 0x1 JUMPDEST DUP1 PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x742 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x782 JUMPI PUSH2 0x770 DUP10 DUP10 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x764 JUMPI PUSH2 0x764 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1CFB JUMP JUMPDEST DUP1 PUSH2 0x77A DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x745 JUMP JUMPDEST POP PUSH2 0x78C PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP12 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7D9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x801 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x81D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP14 SWAP2 PUSH2 0x847 SWAP2 PUSH2 0x2DE9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E02 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE6728EDB DUP15 DUP15 DUP15 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x896 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ED9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD9732F4D DUP15 DUP13 DUP13 DUP11 DUP11 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x9EF JUMPI ADDRESS PUSH4 0x341B46DD DUP16 DUP12 DUP12 DUP6 DUP2 DUP2 LT PUSH2 0x952 JUMPI PUSH2 0x952 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x979 JUMPI PUSH2 0x979 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x305A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x9E7 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x931 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 CALLER DUP2 DUP5 EQ PUSH2 0xA23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x30DB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xA42 JUMPI PUSH2 0xA42 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x312D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xA99 JUMPI PUSH2 0xA99 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAAE SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x4 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xAE9 JUMPI PUSH2 0xAE9 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0xB0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0xB20 JUMPI PUSH2 0xB20 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 SUB PUSH2 0xB46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH2 0xB50 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA26 JUMP JUMPDEST POP DUP6 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB68 SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x324A JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x4 SLOAD DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xBD0 JUMPI PUSH2 0xBD0 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xC09 JUMPI PUSH2 0xC09 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD LT ISZERO PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH2 0xC38 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBB3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP16 DUP16 DUP3 PUSH1 0x0 ADD SWAP2 SWAP1 PUSH2 0xC7D SWAP3 SWAP2 SWAP1 PUSH2 0x288D JUMP JUMPDEST POP PUSH2 0xC8C PUSH1 0x4 DUP3 ADD DUP16 DUP16 PUSH2 0x28F0 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 ADD DUP13 SWAP1 SSTORE JUMPDEST DUP14 DUP2 LT ISZERO PUSH2 0xD07 JUMPI DUP15 DUP15 DUP3 DUP2 DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xCFF DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCBB JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP4 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD85 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP5 SWAP1 TIMESTAMP LT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xE5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE4D JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xE57 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDE3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER SUB PUSH2 0xE88 JUMPI POP PUSH1 0x1 JUMPDEST DUP1 PUSH2 0xEA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0xEAD PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xEFA JUMPI PUSH2 0xEE8 DUP9 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0xECE JUMPI PUSH2 0xECE PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x1F2B JUMP JUMPDEST DUP1 PUSH2 0xEF2 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB0 JUMP JUMPDEST POP PUSH2 0xF04 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF48 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xF70 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0xF8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 CALLER DUP2 DUP5 EQ PUSH2 0xFB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x30DB JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x312D JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x1026 JUMPI PUSH2 0x1026 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x103B SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x317C JUMP JUMPDEST PUSH1 0x4 SLOAD DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1076 JUMPI PUSH2 0x1076 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x109B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x31C7 JUMP JUMPDEST DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x10AD JUMPI PUSH2 0x10AD PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 SUB PUSH2 0x10D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x3213 JUMP JUMPDEST DUP1 PUSH2 0x10DD DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFB3 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1100 SWAP1 DUP13 DUP13 PUSH2 0x288D JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x111E SWAP1 PUSH1 0x4 ADD DUP11 DUP11 PUSH2 0x28F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x116B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1193 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST DUP3 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x11BE SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x324A JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP3 SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP6 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x123B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1263 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP7 SWAP1 TIMESTAMP LT ISZERO PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E68 JUMP JUMPDEST DUP7 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x133D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x130B JUMPI PUSH2 0x130B PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x132B JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1335 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12C1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND CALLER SUB PUSH2 0x1366 JUMPI POP PUSH1 0x1 JUMPDEST DUP1 PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E96 JUMP JUMPDEST PUSH2 0x138B PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x13FC JUMPI PUSH2 0x13EA DUP11 DUP11 DUP11 DUP5 DUP2 DUP2 LT PUSH2 0x13AC JUMPI PUSH2 0x13AC PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13C1 SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x13D3 JUMPI PUSH2 0x13D3 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x305A JUMP JUMPDEST PUSH2 0x2211 JUMP JUMPDEST DUP1 PUSH2 0x13F4 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x138E JUMP JUMPDEST POP PUSH2 0x1406 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1449 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1471 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x148D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x32A7 JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP6 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x152B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1553 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x156F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP8 SWAP2 PUSH2 0x1599 SWAP2 PUSH2 0x2DE9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0x15C0 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xEFA JUMPI PUSH2 0x161F DUP9 DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x15E1 JUMPI PUSH2 0x15E1 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15F6 SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x1608 JUMPI PUSH2 0x1608 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x161A SWAP2 SWAP1 PUSH2 0x305A JUMP JUMPDEST PUSH2 0x22DA JUMP JUMPDEST DUP1 PUSH2 0x1629 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP4 SWAP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1674 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x169C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD AND ISZERO ISZERO JUMPDEST PUSH2 0x16B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2D9C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP6 SWAP2 PUSH2 0x16E2 SWAP2 PUSH2 0x2DE9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x2E02 JUMP JUMPDEST PUSH2 0x1709 PUSH2 0x19D3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1756 JUMPI PUSH2 0x1744 DUP7 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x172A JUMPI PUSH2 0x172A PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST PUSH2 0x2391 JUMP JUMPDEST DUP1 PUSH2 0x174E DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x170C JUMP JUMPDEST POP PUSH2 0x1760 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x17B6 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DD PUSH2 0x1C51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1842 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1CAB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5137510F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS SWAP1 PUSH4 0xA26EA21E SWAP1 PUSH2 0x1875 SWAP1 DUP15 SWAP1 DUP15 SWAP1 DUP15 SWAP1 PUSH1 0x4 ADD PUSH2 0x2ED9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x5645E3BF PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS SWAP3 POP PUSH4 0xAC8BC77E SWAP2 POP PUSH2 0x18D2 SWAP1 DUP15 SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1900 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x19C5 JUMPI ADDRESS PUSH4 0x7CE752C6 DUP14 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1928 JUMPI PUSH2 0x1928 PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x193D SWAP2 SWAP1 PUSH2 0x2965 JUMP JUMPDEST DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x194F JUMPI PUSH2 0x194F PUSH2 0x2E39 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1961 SWAP2 SWAP1 PUSH2 0x305A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1980 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x30A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x199A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x19BD SWAP1 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1907 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A9F SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x1B27 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1AF7 JUMPI PUSH2 0x1AF7 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 SWAP2 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1B4F SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x331D JUMP JUMPDEST DUP2 SUB PUSH2 0x1BC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE DUP7 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BC4 SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP4 PUSH4 0xF242432A SWAP4 PUSH2 0x1C0C SWAP4 DUP13 SWAP4 SWAP1 SWAP3 AND SWAP2 DUP11 SWAP2 DUP10 SWAP2 PUSH1 0x4 ADD PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1C49 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D4A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D6E SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x1DC6 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1AF7 JUMPI PUSH2 0x1AF7 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1DEE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x331D JUMP JUMPDEST DUP2 SUB PUSH2 0x1E66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE DUP7 AND SWAP1 PUSH3 0xFDD58E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E63 SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 DUP8 AND SWAP2 PUSH4 0xF242432A SWAP2 DUP10 SWAP2 DUP6 SWAP1 DUP2 LT PUSH2 0x1E9D JUMPI PUSH2 0x1E9D PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 ADD DUP2 MSTORE SWAP3 DUP3 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH2 0x1EE6 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP11 SWAP2 DUP10 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x3380 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x1F23 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1D74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F99 SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x1FBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x200D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2031 SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A204552433230207A65726F20616C6C6F77616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C5 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x208F JUMPI DUP1 SWAP3 POP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x2114 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x20E4 JUMPI PUSH2 0x20E4 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP7 SWAP2 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH2 0x213C SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x331D JUMP JUMPDEST DUP2 SUB PUSH2 0x21AF JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2188 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21AC SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x21FF SWAP2 DUP9 SWAP2 DUP5 SWAP1 DUP2 LT PUSH2 0x21DF JUMPI PUSH2 0x21DF PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP3 SWAP2 AND DUP7 PUSH2 0x25C6 JUMP JUMPDEST DUP1 PUSH2 0x2209 DUP2 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1760 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP2 DUP7 AND SWAP2 PUSH4 0x42842E0E SWAP2 DUP9 SWAP2 AND DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x2258 JUMPI PUSH2 0x2258 PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x22D2 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1760 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP2 PUSH4 0x42842E0E SWAP2 DUP9 SWAP2 AND DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x230F JUMPI PUSH2 0x230F PUSH2 0x2E39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x237A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x2389 SWAP1 PUSH2 0x2E4F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x23DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23FF SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x2423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x33BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2473 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2497 SWAP2 SWAP1 PUSH2 0x3304 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x24E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A204552433230207A65726F20616C6C6F77616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C5 JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24F5 JUMPI DUP1 SWAP3 POP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x1760 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP9 SWAP2 AND DUP7 PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH1 0x0 SUB PUSH2 0x254B JUMPI DUP4 DUP3 DUP2 PUSH2 0x2541 JUMPI PUSH2 0x2541 PUSH2 0x33FC JUMP JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x25BF JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x2557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD DUP6 NOT PUSH1 0x1 SWAP1 DUP2 ADD DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 DUP3 DUP7 SUB DUP2 SWAP1 DIV SWAP6 SWAP1 SWAP3 GT SWAP1 SWAP4 SUB PUSH1 0x0 DUP3 SWAP1 SUB SWAP2 SWAP1 SWAP2 DIV SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x3 DUP5 MUL PUSH1 0x2 SWAP1 DUP2 XOR DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL DUP3 SUB MUL DUP1 DUP7 MUL SWAP1 SWAP2 SUB MUL MUL SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x2620 SWAP1 DUP6 SWAP1 PUSH2 0x2626 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267B DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26FD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x26F8 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2699 SWAP2 SWAP1 PUSH2 0x3412 JUMP JUMPDEST PUSH2 0x26F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x270C DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2714 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x2791 SWAP2 SWAP1 PUSH2 0x3434 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x27D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x27E4 DUP8 DUP4 DUP4 DUP8 PUSH2 0x27EF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x285E JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x2857 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x2857 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C5 JUMP JUMPDEST POP DUP2 PUSH2 0x270C JUMP JUMPDEST PUSH2 0x270C DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x2873 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x3450 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x28E0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x28E0 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x28AD JUMP JUMPDEST POP PUSH2 0x28EC SWAP3 SWAP2 POP PUSH2 0x292B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x28E0 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x28E0 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2910 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x28EC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x292C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x184B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2960 DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x25BF DUP2 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29C3 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x299E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x29E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2A3C DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2A4C DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A74 DUP8 DUP3 DUP9 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x2AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AAA DUP13 PUSH2 0x2955 JUMP JUMPDEST SWAP11 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x20 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x2AC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AD6 DUP15 PUSH1 0x20 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x40 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2AEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AFC DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x60 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2B12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B22 DUP15 PUSH1 0x60 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2B38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B48 DUP15 PUSH1 0x80 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x2B5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6F DUP14 PUSH1 0xA0 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x29CF JUMP JUMPDEST DUP2 SWAP4 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BC4 DUP11 DUP4 DUP12 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2BDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BEA DUP10 DUP3 DUP11 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2BFE DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP1 SWAP3 POP POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2C33 DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C5B DUP7 DUP3 DUP8 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CA2 DUP9 DUP4 DUP10 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A74 DUP8 DUP3 DUP9 ADD PUSH2 0x29CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2CF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2D04 DUP2 PUSH2 0x2940 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D2D DUP10 DUP4 DUP11 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D53 DUP9 DUP3 DUP10 ADD PUSH2 0x29CF JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29C3 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2077696C6C20646F65736E2774206578697374000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DFC JUMPI PUSH2 0x2DFC PUSH2 0x2DD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A20546F6F206561726C7920746F207265617000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2E61 JUMPI PUSH2 0x2E61 PUSH2 0x2DD3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x57696C6C65723A20756E72656C65617361626C65 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A206578656375746F72206973206E6F742062656E6566696369 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x617279 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP6 SWAP2 PUSH1 0x60 DUP6 ADD DUP5 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x2F28 JUMPI DUP5 CALLDATALOAD PUSH2 0x2F14 DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP5 AND DUP3 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F01 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x2F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE SWAP1 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP8 SWAP2 PUSH1 0x80 DUP6 ADD DUP5 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x2FB6 JUMPI DUP5 CALLDATALOAD PUSH2 0x2FA2 DUP2 PUSH2 0x2940 JUMP JUMPDEST DUP5 AND DUP3 MSTORE SWAP4 DUP3 ADD SWAP4 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2F8F JUMP JUMPDEST POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE DUP7 DUP2 MSTORE DUP2 DUP2 ADD SWAP4 POP PUSH1 0x5 SWAP3 POP DUP7 DUP4 SHL DUP2 ADD DUP3 ADD DUP9 PUSH1 0x0 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x3048 JUMPI DUP4 DUP4 SUB PUSH1 0x1F NOT ADD DUP8 MSTORE DUP2 CALLDATALOAD CALLDATASIZE DUP13 SWAP1 SUB PUSH1 0x1E NOT ADD DUP2 SLT PUSH2 0x2FFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP12 ADD DUP6 DUP2 ADD SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3018 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP9 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x3029 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3034 DUP6 DUP3 DUP5 PUSH2 0x2F35 JUMP JUMPDEST SWAP9 DUP8 ADD SWAP9 SWAP5 POP POP POP SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2FD6 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x308C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x2A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x30D1 SWAP1 DUP4 ADD DUP5 DUP7 PUSH2 0x2F35 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2062656E656669636961726965735F20616E64207368617265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0xE6BE40D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x6C69642062656E6566696369617279 PUSH1 0x88 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A207465737461746F72206973206E6F7420612076616C696420 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x62656E6566696369617279 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2073686172652063616E277420626520677265617465722074 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x68616E204D41585348415245 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2073686172652063616E277420626520300000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2072657175697265282072656C656173652074696D65203E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x63757272656E742074696D65202B204255464645522029000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x37 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6C69642062656E65666963696172794F66455243373231000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2DFC JUMPI PUSH2 0x2DFC PUSH2 0x2DD3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x334B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3333 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x336C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x27E4 SWAP1 DUP4 ADD DUP5 PUSH2 0x3354 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x57696C6C65723A204E6F20455243323020746F6B656E7320746F2072656C6561 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x7365 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x25BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3446 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x3330 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x25BF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3354 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 LOG3 PUSH28 0xED79769AA455A187184E912174D53B110AD85AACC76E3D86F9BB05C3 DUP10 PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x173"
    },
    "25": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9181141A"
    },
    "38": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCAEE863E"
    },
    "49": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE6728EDB"
    },
    "60": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "GT",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE6728EDB"
    },
    "71": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x36F"
    },
    "75": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF04DA65B"
    },
    "82": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x382"
    },
    "86": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A2"
    },
    "97": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "99": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFE36B4C8"
    },
    "104": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "105": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3B5"
    },
    "108": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "109": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "112": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "REVERT",
      "path": "11"
    },
    "113": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "114": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "115": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCAEE863E"
    },
    "120": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x338"
    },
    "124": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD9732F4D"
    },
    "131": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x34B"
    },
    "135": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "137": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE0024604"
    },
    "142": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "143": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x35E"
    },
    "146": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "147": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "150": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "REVERT",
      "path": "11"
    },
    "151": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "153": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x9181141A"
    },
    "158": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x29D"
    },
    "162": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "163": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "164": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA26EA21E"
    },
    "169": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B0"
    },
    "173": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "174": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA29093B1"
    },
    "180": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C3"
    },
    "184": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA3DA0ECD"
    },
    "191": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2EF"
    },
    "195": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA6FD2339"
    },
    "202": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x312"
    },
    "206": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAC8BC77E"
    },
    "213": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "214": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x325"
    },
    "217": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "218": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "221": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "REVERT",
      "path": "11"
    },
    "222": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "223": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "224": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "229": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "GT",
      "path": "11"
    },
    "230": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x130"
    },
    "233": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "234": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "235": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x715018A6"
    },
    "240": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "241": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24E"
    },
    "244": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "245": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "246": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x745137B4"
    },
    "251": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "252": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x256"
    },
    "255": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "256": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "257": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7CE752C6"
    },
    "262": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "263": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25E"
    },
    "266": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "267": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "268": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8B61E1AA"
    },
    "273": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "274": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x271"
    },
    "277": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "278": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "279": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8DA5CB5B"
    },
    "284": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "285": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x284"
    },
    "288": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "289": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "290": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x8EC02773"
    },
    "295": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "296": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x295"
    },
    "299": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "300": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "302": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "303": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "REVERT",
      "path": "11"
    },
    "304": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "305": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "306": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xCB7EB4C"
    },
    "311": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "312": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x178"
    },
    "315": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "316": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "317": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1CAB59A4"
    },
    "322": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "323": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B7"
    },
    "326": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "327": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "328": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x341B46DD"
    },
    "333": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "334": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D7"
    },
    "337": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "338": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "339": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x47FF5D8A"
    },
    "344": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "345": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EC"
    },
    "348": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "349": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "350": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6605BFDA"
    },
    "355": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "356": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x233"
    },
    "359": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "360": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "361": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x705E8B2E"
    },
    "366": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "EQ",
      "path": "11"
    },
    "367": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x246"
    },
    "370": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "371": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "372": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "374": {
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "DUP1",
      "path": "11"
    },
    "375": {
      "first_revert": true,
      "fn": null,
      "offset": [
        520,
        16745
      ],
      "op": "REVERT",
      "path": "11"
    },
    "376": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "377": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A4"
    },
    "380": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x186"
    },
    "383": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "384": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "386": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "389": {
      "fn": "Willer.getReleaseTime",
      "jump": "i",
      "offset": [
        5727,
        5856
      ],
      "op": "JUMP",
      "path": "11"
    },
    "390": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "397": {
      "op": "SHL"
    },
    "398": {
      "op": "SUB"
    },
    "399": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "AND",
      "path": "11",
      "statement": 0
    },
    "400": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5790,
        5794
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "402": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "403": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "DUP2",
      "path": "11"
    },
    "404": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "405": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5827
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "407": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "409": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "410": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "412": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "413": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5837
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "414": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5849
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "416": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5849
      ],
      "op": "ADD",
      "path": "11"
    },
    "417": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5849
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "418": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5813,
        5849
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "419": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "JUMP",
      "path": "11"
    },
    "420": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "421": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "423": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "424": {
      "op": "SWAP1"
    },
    "425": {
      "op": "DUP2"
    },
    "426": {
      "op": "MSTORE"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "429": {
      "op": "ADD"
    },
    "430": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "431": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "433": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "434": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "DUP1",
      "path": "11"
    },
    "435": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "436": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "SUB",
      "path": "11"
    },
    "437": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "438": {
      "fn": "Willer.getReleaseTime",
      "offset": [
        5727,
        5856
      ],
      "op": "RETURN",
      "path": "11"
    },
    "439": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "440": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CA"
    },
    "443": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C5"
    },
    "446": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "447": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "449": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "452": {
      "fn": "Willer.getBeneficiaries",
      "jump": "i",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMP",
      "path": "11"
    },
    "453": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "454": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C8"
    },
    "457": {
      "fn": "Willer.getBeneficiaries",
      "jump": "i",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMP",
      "path": "11"
    },
    "458": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "459": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "461": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "462": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AE"
    },
    "465": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "466": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "467": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2982"
    },
    "470": {
      "fn": "Willer.getBeneficiaries",
      "jump": "i",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMP",
      "path": "11"
    },
    "471": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "472": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "475": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E5"
    },
    "478": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "479": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "481": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A1B"
    },
    "484": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMP",
      "path": "11"
    },
    "485": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "486": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x43E"
    },
    "489": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMP",
      "path": "11"
    },
    "490": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "491": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "STOP",
      "path": "11"
    },
    "492": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "493": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21B"
    },
    "496": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FA"
    },
    "499": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "500": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "502": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "505": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "jump": "i",
      "offset": [
        6292,
        6476
      ],
      "op": "JUMP",
      "path": "11"
    },
    "506": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 1
    },
    "516": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "DUP2",
      "path": "11"
    },
    "517": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "AND",
      "path": "11"
    },
    "518": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6378,
        6405
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "520": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "521": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "DUP2",
      "path": "11"
    },
    "522": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "523": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6438
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "525": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "527": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "528": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "530": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "531": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6449
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "532": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6469
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "534": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6469
      ],
      "op": "ADD",
      "path": "11"
    },
    "535": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6469
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "536": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6469
      ],
      "op": "AND",
      "path": "11"
    },
    "537": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6424,
        6469
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "538": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "JUMP",
      "path": "11"
    },
    "539": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "540": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "542": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "549": {
      "op": "SHL"
    },
    "550": {
      "op": "SUB"
    },
    "551": {
      "op": "SWAP1"
    },
    "552": {
      "op": "SWAP2"
    },
    "553": {
      "op": "AND"
    },
    "554": {
      "op": "DUP2"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "558": {
      "op": "ADD"
    },
    "559": {
      "fn": "Willer.getBeneficiaryOfERC721",
      "offset": [
        6292,
        6476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AE"
    },
    "562": {
      "op": "JUMP"
    },
    "563": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "564": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "567": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x241"
    },
    "570": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "571": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "573": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "576": {
      "fn": "Willer.setTreasuryAddress",
      "jump": "i",
      "offset": [
        16516,
        16638
      ],
      "op": "JUMP",
      "path": "11"
    },
    "577": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "578": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x571"
    },
    "581": {
      "fn": "Willer.setTreasuryAddress",
      "jump": "i",
      "offset": [
        16516,
        16638
      ],
      "op": "JUMP",
      "path": "11"
    },
    "582": {
      "fn": "Willer.getBuffer",
      "offset": [
        5464,
        5542
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "583": {
      "fn": "Willer.getBuffer",
      "offset": [
        5529,
        5535
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x2"
    },
    "585": {
      "fn": "Willer.getBuffer",
      "offset": [
        5529,
        5535
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "586": {
      "fn": "Willer.getBuffer",
      "offset": [
        5464,
        5542
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A4"
    },
    "589": {
      "fn": "Willer.getBuffer",
      "offset": [
        5464,
        5542
      ],
      "op": "JUMP",
      "path": "11"
    },
    "590": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "591": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "594": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59B"
    },
    "597": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "598": {
      "fn": "Willer.getMaxShare",
      "offset": [
        5639,
        5721
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "599": {
      "fn": "Willer.getMaxShare",
      "offset": [
        5706,
        5714
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 3,
      "value": "0x4"
    },
    "601": {
      "fn": "Willer.getMaxShare",
      "offset": [
        5706,
        5714
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "602": {
      "fn": "Willer.getMaxShare",
      "offset": [
        5639,
        5721
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A4"
    },
    "605": {
      "fn": "Willer.getMaxShare",
      "offset": [
        5639,
        5721
      ],
      "op": "JUMP",
      "path": "11"
    },
    "606": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "607": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "610": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x26C"
    },
    "613": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "614": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "616": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A1B"
    },
    "619": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        14171,
        14586
      ],
      "op": "JUMP",
      "path": "11"
    },
    "620": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "621": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5AF"
    },
    "624": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        14171,
        14586
      ],
      "op": "JUMP",
      "path": "11"
    },
    "625": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "626": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "629": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x27F"
    },
    "632": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "633": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "635": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A80"
    },
    "638": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        15713,
        16510
      ],
      "op": "JUMP",
      "path": "11"
    },
    "639": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "640": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x796"
    },
    "643": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        15713,
        16510
      ],
      "op": "JUMP",
      "path": "11"
    },
    "644": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "645": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "647": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 4
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "654": {
      "op": "SHL"
    },
    "655": {
      "op": "SUB"
    },
    "656": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "657": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "660": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMP",
      "path": "0"
    },
    "661": {
      "fn": "Willer.getReapDelay",
      "offset": [
        5548,
        5633
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "662": {
      "fn": "Willer.getReapDelay",
      "offset": [
        5616,
        5626
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 5,
      "value": "0x5"
    },
    "664": {
      "fn": "Willer.getReapDelay",
      "offset": [
        5616,
        5626
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "665": {
      "fn": "Willer.getReapDelay",
      "offset": [
        5548,
        5633
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A4"
    },
    "668": {
      "fn": "Willer.getReapDelay",
      "offset": [
        5548,
        5633
      ],
      "op": "JUMP",
      "path": "11"
    },
    "669": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "670": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "673": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AB"
    },
    "676": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "677": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "679": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2B87"
    },
    "682": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        4730,
        5458
      ],
      "op": "JUMP",
      "path": "11"
    },
    "683": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "684": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9FF"
    },
    "687": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        4730,
        5458
      ],
      "op": "JUMP",
      "path": "11"
    },
    "688": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "689": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "692": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BE"
    },
    "695": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "696": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "698": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C13"
    },
    "701": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        9527,
        9901
      ],
      "op": "JUMP",
      "path": "11"
    },
    "702": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "703": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD1A"
    },
    "706": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        9527,
        9901
      ],
      "op": "JUMP",
      "path": "11"
    },
    "707": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "708": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A4"
    },
    "711": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D1"
    },
    "714": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "715": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "717": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "720": {
      "fn": "Willer.getSumShares",
      "jump": "i",
      "offset": [
        6161,
        6286
      ],
      "op": "JUMP",
      "path": "11"
    },
    "721": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "SUB"
    },
    "730": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "AND",
      "path": "11",
      "statement": 6
    },
    "731": {
      "fn": "Willer.getSumShares",
      "offset": [
        6222,
        6226
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "733": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "734": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "DUP2",
      "path": "11"
    },
    "735": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "736": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "738": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "740": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "741": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "743": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "744": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6269
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "745": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6279
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "747": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6279
      ],
      "op": "ADD",
      "path": "11"
    },
    "748": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6279
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "749": {
      "fn": "Willer.getSumShares",
      "offset": [
        6245,
        6279
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "750": {
      "fn": "Willer.getSumShares",
      "offset": [
        6161,
        6286
      ],
      "op": "JUMP",
      "path": "11"
    },
    "751": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "752": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x302"
    },
    "755": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2FD"
    },
    "758": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "759": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "761": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C68"
    },
    "764": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMP",
      "path": "11"
    },
    "765": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "766": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF0D"
    },
    "769": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMP",
      "path": "11"
    },
    "770": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "771": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "773": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "ISZERO"
    },
    "776": {
      "op": "ISZERO"
    },
    "777": {
      "op": "DUP2"
    },
    "778": {
      "op": "MSTORE"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AE"
    },
    "785": {
      "op": "JUMP"
    },
    "786": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "787": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A4"
    },
    "790": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x320"
    },
    "793": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "794": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "796": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CC8"
    },
    "799": {
      "fn": "Willer.setNewReleaseTime",
      "jump": "i",
      "offset": [
        7049,
        7414
      ],
      "op": "JUMP",
      "path": "11"
    },
    "800": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "801": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1130"
    },
    "804": {
      "fn": "Willer.setNewReleaseTime",
      "jump": "i",
      "offset": [
        7049,
        7414
      ],
      "op": "JUMP",
      "path": "11"
    },
    "805": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "806": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "809": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x333"
    },
    "812": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "813": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "815": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CE1"
    },
    "818": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11190,
        11627
      ],
      "op": "JUMP",
      "path": "11"
    },
    "819": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "820": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F8"
    },
    "823": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11190,
        11627
      ],
      "op": "JUMP",
      "path": "11"
    },
    "824": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "825": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "828": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x346"
    },
    "831": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "832": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "834": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "837": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "jump": "i",
      "offset": [
        7420,
        7749
      ],
      "op": "JUMP",
      "path": "11"
    },
    "838": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "839": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1411"
    },
    "842": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "jump": "i",
      "offset": [
        7420,
        7749
      ],
      "op": "JUMP",
      "path": "11"
    },
    "843": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "844": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "847": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x359"
    },
    "850": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "851": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "853": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2CE1"
    },
    "856": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        11633,
        12104
      ],
      "op": "JUMP",
      "path": "11"
    },
    "857": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "858": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14E8"
    },
    "861": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        11633,
        12104
      ],
      "op": "JUMP",
      "path": "11"
    },
    "862": {
      "fn": "Willer.getTreasuryAddress",
      "offset": [
        16644,
        16743
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "863": {
      "fn": "Willer.getTreasuryAddress",
      "offset": [
        16721,
        16736
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x6"
    },
    "865": {
      "fn": "Willer.getTreasuryAddress",
      "offset": [
        16721,
        16736
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "870": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "872": {
      "op": "SHL"
    },
    "873": {
      "op": "SUB"
    },
    "874": {
      "fn": "Willer.getTreasuryAddress",
      "offset": [
        16721,
        16736
      ],
      "op": "AND",
      "path": "11"
    },
    "875": {
      "fn": "Willer.getTreasuryAddress",
      "offset": [
        16644,
        16743
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21B"
    },
    "878": {
      "fn": "Willer.getTreasuryAddress",
      "offset": [
        16644,
        16743
      ],
      "op": "JUMP",
      "path": "11"
    },
    "879": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "880": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "883": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37D"
    },
    "886": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "887": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "889": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2C13"
    },
    "892": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        9907,
        10271
      ],
      "op": "JUMP",
      "path": "11"
    },
    "893": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "894": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1631"
    },
    "897": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        9907,
        10271
      ],
      "op": "JUMP",
      "path": "11"
    },
    "898": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "899": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x395"
    },
    "902": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x390"
    },
    "905": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "906": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "908": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "911": {
      "fn": "Willer.getShares",
      "jump": "i",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMP",
      "path": "11"
    },
    "912": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "913": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1767"
    },
    "916": {
      "fn": "Willer.getShares",
      "jump": "i",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMP",
      "path": "11"
    },
    "917": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "918": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "920": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "921": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AE"
    },
    "924": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "925": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "926": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D64"
    },
    "929": {
      "fn": "Willer.getShares",
      "jump": "i",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMP",
      "path": "11"
    },
    "930": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "931": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA"
    },
    "934": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B0"
    },
    "937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "940": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2965"
    },
    "943": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "944": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "945": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17D5"
    },
    "948": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "949": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "950": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EA"
    },
    "953": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3C3"
    },
    "956": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "957": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "959": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2A80"
    },
    "962": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15048,
        15707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "963": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "964": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x184E"
    },
    "967": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15048,
        15707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "968": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "op": "SUB"
    },
    "977": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 8
    },
    "978": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "AND",
      "path": "11"
    },
    "979": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "981": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "982": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "DUP2",
      "path": "11"
    },
    "983": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "984": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        5990
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "986": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "988": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "989": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "DUP2",
      "path": "11"
    },
    "990": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "991": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "993": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "994": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "DUP3",
      "path": "11"
    },
    "995": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "996": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "997": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP1",
      "path": "11"
    },
    "998": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "999": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1000": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1001": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1002": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1003": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MUL",
      "path": "11"
    },
    "1004": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1005": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ADD",
      "path": "11"
    },
    "1006": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1007": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ADD",
      "path": "11"
    },
    "1008": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1009": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1010": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1011": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1012": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1013": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1014": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5941,
        5957
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1016": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5941,
        5957
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1017": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1018": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1019": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ADD",
      "path": "11"
    },
    "1020": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5976,
        6000
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1021": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1022": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1023": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1024": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x432"
    },
    "1027": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1028": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1030": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MUL",
      "path": "11"
    },
    "1031": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1032": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ADD",
      "path": "11"
    },
    "1033": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1034": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1035": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1037": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1038": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1040": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1042": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1043": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1044": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1045": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1046": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "AND",
      "path": "11"
    },
    "1056": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1057": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1058": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1060": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1061": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1062": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ADD",
      "path": "11"
    },
    "1063": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1064": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1066": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "ADD",
      "path": "11"
    },
    "1067": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1068": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1069": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "GT",
      "path": "11"
    },
    "1070": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x414"
    },
    "1073": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1074": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1075": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "POP",
      "path": "11"
    },
    "1076": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "POP",
      "path": "11"
    },
    "1077": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "POP",
      "path": "11"
    },
    "1078": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "POP",
      "path": "11"
    },
    "1079": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "POP",
      "path": "11"
    },
    "1080": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1081": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5969,
        6014
      ],
      "op": "POP",
      "path": "11"
    },
    "1082": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1083": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1084": {
      "fn": "Willer.getBeneficiaries",
      "offset": [
        5862,
        6021
      ],
      "op": "POP",
      "path": "11"
    },
    "1085": {
      "fn": "Willer.getBeneficiaries",
      "jump": "o",
      "offset": [
        5862,
        6021
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1086": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "SUB"
    },
    "1095": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1096": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "1097": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1099": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1100": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1101": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1102": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1104": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1106": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1107": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1109": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1110": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1111": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1113": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "1114": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1115": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14757,
        14765
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1116": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14757,
        14765
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1117": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1118": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1119": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1120": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1121": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x481"
    },
    "1124": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1125": {
      "op": "POP"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "op": "SUB"
    },
    "1134": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1135": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "1136": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1138": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1139": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1140": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1141": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1143": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1145": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1146": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1148": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1149": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1150": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1151": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1152": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1153": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1154": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1155": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1156": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A9"
    },
    "1159": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1160": {
      "op": "POP"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1167": {
      "op": "SHL"
    },
    "1168": {
      "op": "SUB"
    },
    "1169": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1170": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1171": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "1172": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1174": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1175": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1176": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1177": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1179": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1181": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1182": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1184": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1185": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1186": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1188": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "1189": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1190": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "1191": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1192": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1193": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1194": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4CE"
    },
    "1197": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1198": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1200": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1201": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1207": {
      "op": "SHL"
    },
    "1208": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1209": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1210": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1212": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "1213": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "1216": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1217": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "1220": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1221": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1222": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1224": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1225": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1226": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1227": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SUB",
      "path": "11"
    },
    "1228": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1229": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "1230": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1231": {
      "offset": [
        1355,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1233": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1355,
        1365
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1240": {
      "op": "SHL"
    },
    "1241": {
      "op": "SUB"
    },
    "1242": {
      "offset": [
        1315,
        1340
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1243": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "AND",
      "path": "11"
    },
    "1244": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1246": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1247": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1248": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1249": {
      "offset": [
        1315,
        1329
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1251": {
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1253": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1254": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1256": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1257": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1258": {
      "offset": [
        1315,
        1352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1260": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "ADD",
      "path": "11"
    },
    "1261": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1262": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14793,
        14801
      ],
      "op": "DUP7",
      "path": "11"
    },
    "1263": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14793,
        14801
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1264": {
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4F8"
    },
    "1267": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1268": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "1271": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1272": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1273": {
      "offset": [
        1280,
        1295
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "1274": {
      "offset": [
        1280,
        1365
      ],
      "op": "LT",
      "path": "11"
    },
    "1275": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1280,
        1365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1276": {
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x517"
    },
    "1279": {
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1280": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1282": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1283": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1289": {
      "op": "SHL"
    },
    "1290": {
      "offset": [
        1259,
        1416
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1291": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1292": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1294": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "ADD",
      "path": "11"
    },
    "1295": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "1298": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1299": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E02"
    },
    "1302": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1303": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1304": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51F"
    },
    "1307": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D3"
    },
    "1310": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1311": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1312": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14842,
        14848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1314": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1315": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14854,
        14877
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1316": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14854,
        14877
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1317": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14854,
        14877
      ],
      "op": "LT",
      "path": "11"
    },
    "1318": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1319": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55F"
    },
    "1322": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1323": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14898,
        15025
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 9,
      "value": "0x54D"
    },
    "1326": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14940,
        14948
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1327": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14966,
        14978
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1328": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15008
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1329": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15008
      ],
      "op": "DUP8",
      "path": "11"
    },
    "1330": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        15009,
        15010
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1331": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1332": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1333": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "LT",
      "path": "11"
    },
    "1334": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x541"
    },
    "1337": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1338": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x541"
    },
    "1341": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "1344": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        14996,
        15011
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1345": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1346": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1347": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "POP",
      "path": "11"
    },
    "1348": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1350": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "MUL",
      "path": "11"
    },
    "1351": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "ADD",
      "path": "11"
    },
    "1352": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14996,
        15011
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1353": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14898,
        14922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A2C"
    },
    "1356": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        14898,
        15025
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1357": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14898,
        15025
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1358": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 10
    },
    "1359": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x557"
    },
    "1362": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1363": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "1366": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        14879,
        14882
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1367": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1368": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1369": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "POP",
      "path": "11"
    },
    "1370": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14879,
        14882
      ],
      "op": "POP",
      "path": "11"
    },
    "1371": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x522"
    },
    "1374": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1375": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1376": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14837,
        15036
      ],
      "op": "POP",
      "path": "11"
    },
    "1377": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x569"
    },
    "1380": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1382": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 11
    },
    "1383": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1384": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1385": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1386": {
      "offset": [
        3438,
        3439
      ],
      "op": "POP",
      "path": "11"
    },
    "1387": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "POP",
      "path": "11"
    },
    "1388": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "POP",
      "path": "11"
    },
    "1389": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "POP",
      "path": "11"
    },
    "1390": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "POP",
      "path": "11"
    },
    "1391": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "offset": [
        14592,
        15042
      ],
      "op": "POP",
      "path": "11"
    },
    "1392": {
      "fn": "Willer.batchReleaseERC1155ToTreasury",
      "jump": "o",
      "offset": [
        14592,
        15042
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1393": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16516,
        16638
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1394": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x579"
    },
    "1397": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C51"
    },
    "1400": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1401": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1402": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16612
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 12,
      "value": "0x6"
    },
    "1404": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1405": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1412": {
      "op": "SHL"
    },
    "1413": {
      "op": "SUB"
    },
    "1414": {
      "op": "NOT"
    },
    "1415": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "AND",
      "path": "11"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1422": {
      "op": "SHL"
    },
    "1423": {
      "op": "SUB"
    },
    "1424": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1425": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1426": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1427": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "AND",
      "path": "11"
    },
    "1428": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1429": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1430": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1431": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "OR",
      "path": "11"
    },
    "1432": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1433": {
      "fn": "Willer.setTreasuryAddress",
      "offset": [
        16597,
        16631
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1434": {
      "fn": "Willer.setTreasuryAddress",
      "jump": "o",
      "offset": [
        16516,
        16638
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1435": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1436": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A3"
    },
    "1439": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C51"
    },
    "1442": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1443": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1444": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x5AD"
    },
    "1447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1449": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CAB"
    },
    "1452": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1454": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1455": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "op": "SUB"
    },
    "1464": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1465": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "1466": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1468": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1469": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1470": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1471": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1473": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1475": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1476": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1478": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1479": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1480": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1482": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "1483": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1484": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14337,
        14345
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1485": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14337,
        14345
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1486": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1487": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1488": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1489": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1490": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5F2"
    },
    "1493": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "SUB"
    },
    "1503": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1504": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "1505": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1507": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1508": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1509": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1510": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1512": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1514": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1515": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1517": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1518": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1519": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1520": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1521": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1522": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1523": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1524": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1525": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x61A"
    },
    "1528": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1536": {
      "op": "SHL"
    },
    "1537": {
      "op": "SUB"
    },
    "1538": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1539": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1540": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "1541": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1543": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1544": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1545": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1546": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1548": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1550": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1551": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1553": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1554": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1555": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1557": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "1558": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1559": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "1560": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1561": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1562": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1563": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x636"
    },
    "1566": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1567": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1569": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1570": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1578": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1579": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1581": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "1582": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "1585": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1586": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "1589": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1590": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "offset": [
        1093,
        1118
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1600": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "AND",
      "path": "11"
    },
    "1601": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1603": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1604": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1605": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1606": {
      "offset": [
        1093,
        1107
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1608": {
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1610": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1611": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1613": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1614": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1118
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1615": {
      "offset": [
        1093,
        1130
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1617": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1130
      ],
      "op": "ADD",
      "path": "11"
    },
    "1618": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1093,
        1130
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1619": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14366,
        14374
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1620": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14366,
        14374
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1621": {
      "offset": [
        1074,
        1089
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "1622": {
      "offset": [
        1074,
        1130
      ],
      "op": "LT",
      "path": "11"
    },
    "1623": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1074,
        1130
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1624": {
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x673"
    },
    "1627": {
      "offset": [
        1053,
        1176
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1628": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1630": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1637": {
      "op": "SHL"
    },
    "1638": {
      "offset": [
        1053,
        1176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1639": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1640": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1642": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "ADD",
      "path": "11"
    },
    "1643": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "1646": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1647": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E68"
    },
    "1650": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        1053,
        1176
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1651": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        1053,
        1176
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1652": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14406,
        14414
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1653": {
      "offset": [
        4185,
        4212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1655": {
      "offset": [
        4248,
        4254
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1656": {
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "offset": [
        4276,
        4301
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1666": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "AND",
      "path": "11"
    },
    "1667": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1669": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1670": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1671": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1672": {
      "offset": [
        4276,
        4290
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1674": {
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1676": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1677": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1679": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1680": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4276,
        4301
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1681": {
      "offset": [
        4276,
        4322
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1682": {
      "offset": [
        4272,
        4322
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1683": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4272,
        4322
      ],
      "op": "LT",
      "path": "11"
    },
    "1684": {
      "offset": [
        4230,
        4498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1685": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4230,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6F4"
    },
    "1688": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1695": {
      "op": "SHL"
    },
    "1696": {
      "op": "SUB"
    },
    "1697": {
      "offset": [
        4382,
        4407
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1698": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "AND",
      "path": "11"
    },
    "1699": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1701": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1702": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1703": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1704": {
      "offset": [
        4382,
        4396
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1706": {
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1708": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1709": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1711": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1712": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4407
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1713": {
      "offset": [
        4382,
        4424
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1714": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1715": {
      "offset": [
        4422,
        4423
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1716": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4422,
        4423
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1717": {
      "offset": [
        4382,
        4424
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1718": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "LT",
      "path": "11"
    },
    "1719": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6C2"
    },
    "1722": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1723": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6C2"
    },
    "1726": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "1729": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1730": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1731": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1733": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1734": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1735": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1736": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1738": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1739": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1740": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1741": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "ADD",
      "path": "11"
    },
    "1742": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4382,
        4424
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1749": {
      "op": "SHL"
    },
    "1750": {
      "op": "SUB"
    },
    "1751": {
      "offset": [
        4382,
        4424
      ],
      "op": "AND",
      "path": "11"
    },
    "1752": {
      "offset": [
        4368,
        4378
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1753": {
      "offset": [
        4368,
        4424
      ],
      "op": "SUB",
      "path": "11"
    },
    "1754": {
      "offset": [
        4364,
        4488
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6E2"
    },
    "1757": {
      "offset": [
        4364,
        4488
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1758": {
      "offset": [
        4469,
        4473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1760": {
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1761": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4444,
        4473
      ],
      "op": "POP",
      "path": "11"
    },
    "1762": {
      "offset": [
        4364,
        4488
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1763": {
      "offset": [
        4336,
        4339
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1764": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6EC"
    },
    "1767": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1768": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "1771": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        4336,
        4339
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1772": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1773": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1774": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "POP",
      "path": "11"
    },
    "1775": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4336,
        4339
      ],
      "op": "POP",
      "path": "11"
    },
    "1776": {
      "offset": [
        4230,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x678"
    },
    "1779": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1780": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1788": {
      "op": "SHL"
    },
    "1789": {
      "op": "SUB"
    },
    "1790": {
      "offset": [
        4525,
        4550
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1791": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1792": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "AND",
      "path": "11"
    },
    "1793": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1795": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1796": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1797": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1798": {
      "offset": [
        4525,
        4539
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1800": {
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1802": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1803": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1805": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1806": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4550
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1807": {
      "offset": [
        4525,
        4570
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1809": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4570
      ],
      "op": "ADD",
      "path": "11"
    },
    "1810": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4570
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1811": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4525,
        4570
      ],
      "op": "AND",
      "path": "11"
    },
    "1812": {
      "offset": [
        4511,
        4521
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1813": {
      "offset": [
        4511,
        4570
      ],
      "op": "SUB",
      "path": "11"
    },
    "1814": {
      "offset": [
        4507,
        4626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x71D"
    },
    "1817": {
      "offset": [
        4507,
        4626
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "offset": [
        4611,
        4615
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1821": {
      "offset": [
        4507,
        4626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1822": {
      "offset": [
        4644,
        4666
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1823": {
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x73A"
    },
    "1826": {
      "offset": [
        4636,
        4706
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1827": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1829": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1830": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1836": {
      "op": "SHL"
    },
    "1837": {
      "offset": [
        4636,
        4706
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1838": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1839": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1841": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "ADD",
      "path": "11"
    },
    "1842": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "1845": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1846": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E96"
    },
    "1849": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        4636,
        4706
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1850": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        4636,
        4706
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1851": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x742"
    },
    "1854": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D3"
    },
    "1857": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1858": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1859": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14458,
        14464
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1861": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1862": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14470,
        14493
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1863": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14470,
        14493
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1864": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14470,
        14493
      ],
      "op": "LT",
      "path": "11"
    },
    "1865": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1866": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x782"
    },
    "1869": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1870": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14514,
        14569
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 14,
      "value": "0x770"
    },
    "1873": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14529,
        14537
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1874": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14539,
        14551
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1875": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14565
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1876": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14565
      ],
      "op": "DUP10",
      "path": "11"
    },
    "1877": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14566,
        14567
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1878": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1879": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1880": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "LT",
      "path": "11"
    },
    "1881": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x764"
    },
    "1884": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1885": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x764"
    },
    "1888": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "1891": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        14553,
        14568
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1892": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1893": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1894": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "POP",
      "path": "11"
    },
    "1895": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1897": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "MUL",
      "path": "11"
    },
    "1898": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "ADD",
      "path": "11"
    },
    "1899": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14553,
        14568
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "1900": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14514,
        14528
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1CFB"
    },
    "1903": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        14514,
        14569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1904": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14514,
        14569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1905": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 15
    },
    "1906": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x77A"
    },
    "1909": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1910": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "1913": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "i",
      "offset": [
        14495,
        14498
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1914": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1915": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1916": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "POP",
      "path": "11"
    },
    "1917": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14495,
        14498
      ],
      "op": "POP",
      "path": "11"
    },
    "1918": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x745"
    },
    "1921": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1922": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1923": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14453,
        14580
      ],
      "op": "POP",
      "path": "11"
    },
    "1924": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78C"
    },
    "1927": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1929": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1930": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1931": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1932": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1933": {
      "offset": [
        4175,
        4724
      ],
      "op": "POP",
      "path": "11"
    },
    "1934": {
      "offset": [
        1186,
        1187
      ],
      "op": "POP",
      "path": "11"
    },
    "1935": {
      "offset": [
        3438,
        3439
      ],
      "op": "POP",
      "path": "11"
    },
    "1936": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "POP",
      "path": "11"
    },
    "1937": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "POP",
      "path": "11"
    },
    "1938": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "POP",
      "path": "11"
    },
    "1939": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "POP",
      "path": "11"
    },
    "1940": {
      "fn": "Willer.batchReleaseERC1155",
      "offset": [
        14171,
        14586
      ],
      "op": "POP",
      "path": "11"
    },
    "1941": {
      "fn": "Willer.batchReleaseERC1155",
      "jump": "o",
      "offset": [
        14171,
        14586
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1942": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "op": "SUB"
    },
    "1951": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP12",
      "path": "11"
    },
    "1952": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "1953": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1955": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1956": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1957": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1958": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1960": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1962": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1963": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1965": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1966": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1967": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1969": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "1970": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1971": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16022,
        16030
      ],
      "op": "DUP12",
      "path": "11"
    },
    "1972": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16022,
        16030
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1973": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1974": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1975": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1976": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1977": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7D9"
    },
    "1980": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1981": {
      "op": "POP"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1991": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "1992": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1994": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1995": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1996": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1997": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "1999": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2001": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2002": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2004": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2005": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2006": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2007": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2008": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2009": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2010": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2011": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2012": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x801"
    },
    "2015": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2016": {
      "op": "POP"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2023": {
      "op": "SHL"
    },
    "2024": {
      "op": "SUB"
    },
    "2025": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2026": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2027": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "2028": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2030": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2031": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2032": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2033": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "2035": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2037": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2038": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2040": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2041": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2042": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2044": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "2045": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2046": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "2047": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2048": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2049": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2050": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x81D"
    },
    "2053": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2054": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2056": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2057": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2061": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2063": {
      "op": "SHL"
    },
    "2064": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2065": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2066": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2068": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "2069": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2072": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2073": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "2076": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2077": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2078": {
      "offset": [
        1355,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2080": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1355,
        1365
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "op": "SUB"
    },
    "2089": {
      "offset": [
        1315,
        1340
      ],
      "op": "DUP14",
      "path": "11"
    },
    "2090": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "AND",
      "path": "11"
    },
    "2091": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2093": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2094": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2095": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2096": {
      "offset": [
        1315,
        1329
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "2098": {
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2100": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2101": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2103": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2104": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2105": {
      "offset": [
        1315,
        1352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2107": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "ADD",
      "path": "11"
    },
    "2108": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2109": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16053,
        16061
      ],
      "op": "DUP14",
      "path": "11"
    },
    "2110": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16053,
        16061
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2111": {
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x847"
    },
    "2114": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2115": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "2118": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2119": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2120": {
      "offset": [
        1280,
        1295
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "2121": {
      "offset": [
        1280,
        1365
      ],
      "op": "LT",
      "path": "11"
    },
    "2122": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1280,
        1365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2123": {
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x866"
    },
    "2126": {
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2127": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2129": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2130": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2136": {
      "op": "SHL"
    },
    "2137": {
      "offset": [
        1259,
        1416
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2138": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2139": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2141": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "ADD",
      "path": "11"
    },
    "2142": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2145": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2146": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E02"
    },
    "2149": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2150": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2151": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16077
      ],
      "op": "ADDRESS",
      "path": "11",
      "statement": 16
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2158": {
      "op": "SHL"
    },
    "2159": {
      "op": "SUB"
    },
    "2160": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16105
      ],
      "op": "AND",
      "path": "11"
    },
    "2161": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16105
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE6728EDB"
    },
    "2166": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16106,
        16114
      ],
      "op": "DUP15",
      "path": "11"
    },
    "2167": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16116,
        16130
      ],
      "op": "DUP15",
      "path": "11"
    },
    "2168": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16116,
        16130
      ],
      "op": "DUP15",
      "path": "11"
    },
    "2169": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2171": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2172": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2173": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2178": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "AND",
      "path": "11"
    },
    "2179": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2181": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "SHL",
      "path": "11"
    },
    "2182": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2183": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2184": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2186": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "ADD",
      "path": "11"
    },
    "2187": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x896"
    },
    "2190": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2191": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2192": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2193": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2194": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2ED9"
    },
    "2197": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16073,
        16131
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2198": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2199": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2201": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2203": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2204": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2205": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2206": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "SUB",
      "path": "11"
    },
    "2207": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2208": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2210": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2211": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2212": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2213": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2214": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2215": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2216": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8B0"
    },
    "2219": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2220": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2222": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2223": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2224": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2225": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "POP",
      "path": "11"
    },
    "2226": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "GAS",
      "path": "11"
    },
    "2227": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "CALL",
      "path": "11"
    },
    "2228": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2229": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2230": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2231": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C4"
    },
    "2234": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2235": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2236": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2238": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2239": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2240": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2241": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2243": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2244": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2245": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "POP",
      "path": "11"
    },
    "2246": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "POP",
      "path": "11"
    },
    "2247": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "POP",
      "path": "11"
    },
    "2248": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16073,
        16131
      ],
      "op": "POP",
      "path": "11"
    },
    "2249": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16145
      ],
      "op": "ADDRESS",
      "path": "11",
      "statement": 17
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2256": {
      "op": "SHL"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16174
      ],
      "op": "AND",
      "path": "11"
    },
    "2259": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16174
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xD9732F4D"
    },
    "2264": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16188,
        16196
      ],
      "op": "DUP15",
      "path": "11"
    },
    "2265": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16210,
        16225
      ],
      "op": "DUP13",
      "path": "11"
    },
    "2266": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16210,
        16225
      ],
      "op": "DUP13",
      "path": "11"
    },
    "2267": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16239,
        16257
      ],
      "op": "DUP11",
      "path": "11"
    },
    "2268": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16239,
        16257
      ],
      "op": "DUP11",
      "path": "11"
    },
    "2269": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2271": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2272": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2273": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2278": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "AND",
      "path": "11"
    },
    "2279": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2281": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SHL",
      "path": "11"
    },
    "2282": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2283": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2284": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2286": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "ADD",
      "path": "11"
    },
    "2287": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8FC"
    },
    "2290": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "2291": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2292": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2293": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2294": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2295": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2296": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F67"
    },
    "2299": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16141,
        16267
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2300": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2301": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2303": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2305": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2306": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2307": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2308": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "SUB",
      "path": "11"
    },
    "2309": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2310": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2312": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2313": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2314": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2315": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2316": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2317": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2318": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x916"
    },
    "2321": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2322": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2324": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2325": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2326": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2327": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "POP",
      "path": "11"
    },
    "2328": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "GAS",
      "path": "11"
    },
    "2329": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "CALL",
      "path": "11"
    },
    "2330": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2331": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2332": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2333": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x92A"
    },
    "2336": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2337": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2338": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2340": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2341": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2342": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2343": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2345": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2346": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2347": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "POP",
      "path": "11"
    },
    "2348": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "POP",
      "path": "11"
    },
    "2349": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "POP",
      "path": "11"
    },
    "2350": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16141,
        16267
      ],
      "op": "POP",
      "path": "11"
    },
    "2351": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16282,
        16288
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2353": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2354": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16294,
        16321
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2355": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16294,
        16321
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2356": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16294,
        16321
      ],
      "op": "LT",
      "path": "11"
    },
    "2357": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2358": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9EF"
    },
    "2361": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2362": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16346
      ],
      "op": "ADDRESS",
      "path": "11",
      "statement": 18
    },
    "2363": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16376
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x341B46DD"
    },
    "2368": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16394,
        16402
      ],
      "op": "DUP16",
      "path": "11"
    },
    "2369": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16436
      ],
      "op": "DUP12",
      "path": "11"
    },
    "2370": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16436
      ],
      "op": "DUP12",
      "path": "11"
    },
    "2371": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16437,
        16438
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2372": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2373": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2374": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "LT",
      "path": "11"
    },
    "2375": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x952"
    },
    "2378": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2379": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x952"
    },
    "2382": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "2385": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16420,
        16439
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2386": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2387": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2388": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "POP",
      "path": "11"
    },
    "2389": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2391": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "MUL",
      "path": "11"
    },
    "2392": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "ADD",
      "path": "11"
    },
    "2393": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2395": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2396": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "ADD",
      "path": "11"
    },
    "2397": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2398": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x967"
    },
    "2401": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2402": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2403": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "2406": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16420,
        16439
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2407": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16420,
        16439
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2408": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16476
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2409": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16476
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2410": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16477,
        16478
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2411": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2412": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2413": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "LT",
      "path": "11"
    },
    "2414": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x979"
    },
    "2417": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2418": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x979"
    },
    "2421": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "2424": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16457,
        16479
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2425": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2426": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2427": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "POP",
      "path": "11"
    },
    "2428": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2430": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "MUL",
      "path": "11"
    },
    "2431": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2432": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "ADD",
      "path": "11"
    },
    "2433": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2434": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x98B"
    },
    "2437": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2438": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2439": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x305A"
    },
    "2442": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16457,
        16479
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2443": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16457,
        16479
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2444": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2446": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2447": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2448": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "2453": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "AND",
      "path": "11"
    },
    "2454": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "2456": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SHL",
      "path": "11"
    },
    "2457": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2458": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2459": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2461": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "ADD",
      "path": "11"
    },
    "2462": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9AA"
    },
    "2465": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2466": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2467": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2468": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2469": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2470": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30A4"
    },
    "2473": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16342,
        16493
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2474": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2475": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2477": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2479": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2480": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2481": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2482": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "SUB",
      "path": "11"
    },
    "2483": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2484": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2486": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2487": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2488": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "2489": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2490": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2491": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2492": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9C4"
    },
    "2495": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2496": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2498": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2499": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2500": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2501": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "POP",
      "path": "11"
    },
    "2502": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "GAS",
      "path": "11"
    },
    "2503": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "CALL",
      "path": "11"
    },
    "2504": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2505": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2506": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2507": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9D8"
    },
    "2510": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2511": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2512": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2514": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2515": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2516": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2517": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2519": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "REVERT",
      "path": "11"
    },
    "2520": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2521": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "POP",
      "path": "11"
    },
    "2522": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "POP",
      "path": "11"
    },
    "2523": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "POP",
      "path": "11"
    },
    "2524": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16342,
        16493
      ],
      "op": "POP",
      "path": "11"
    },
    "2525": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 19
    },
    "2526": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2527": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9E7"
    },
    "2530": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2531": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "2534": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "i",
      "offset": [
        16323,
        16326
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2535": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2536": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2537": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "POP",
      "path": "11"
    },
    "2538": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16323,
        16326
      ],
      "op": "POP",
      "path": "11"
    },
    "2539": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x931"
    },
    "2542": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2543": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2544": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        16277,
        16504
      ],
      "op": "POP",
      "path": "11"
    },
    "2545": {
      "offset": [
        3438,
        3439
      ],
      "op": "POP",
      "path": "11"
    },
    "2546": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2547": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2548": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2549": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2550": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2551": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2552": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2553": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2554": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2555": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2556": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2557": {
      "fn": "Willer.batchReleaseToTreasury",
      "offset": [
        15713,
        16510
      ],
      "op": "POP",
      "path": "11"
    },
    "2558": {
      "fn": "Willer.batchReleaseToTreasury",
      "jump": "o",
      "offset": [
        15713,
        16510
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2559": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2560": {
      "fn": "Willer.addWill",
      "offset": [
        4945,
        4959
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2561": {
      "fn": "Willer.addWill",
      "offset": [
        4945,
        4959
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2562": {
      "fn": "Willer.addWill",
      "offset": [
        4961,
        4968
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2563": {
      "fn": "Willer.addWill",
      "offset": [
        4961,
        4968
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2564": {
      "fn": "Willer.addWill",
      "offset": [
        4970,
        4980
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2565": {
      "offset": [
        2072,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2566": {
      "fn": "Willer.addWill",
      "offset": [
        2072,
        2111
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2567": {
      "fn": "Willer.addWill",
      "offset": [
        2072,
        2111
      ],
      "op": "EQ",
      "path": "11"
    },
    "2568": {
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA23"
    },
    "2571": {
      "offset": [
        2051,
        2187
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2572": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2574": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2581": {
      "op": "SHL"
    },
    "2582": {
      "offset": [
        2051,
        2187
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2583": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2584": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2586": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "ADD",
      "path": "11"
    },
    "2587": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2590": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2591": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30DB"
    },
    "2594": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2051,
        2187
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2595": {
      "fn": "Willer.addWill",
      "offset": [
        2051,
        2187
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2596": {
      "offset": [
        2203,
        2209
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2598": {
      "offset": [
        2198,
        2756
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2599": {
      "offset": [
        2211,
        2236
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2600": {
      "fn": "Willer.addWill",
      "offset": [
        2211,
        2236
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2601": {
      "fn": "Willer.addWill",
      "offset": [
        2211,
        2236
      ],
      "op": "LT",
      "path": "11"
    },
    "2602": {
      "offset": [
        2198,
        2756
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2603": {
      "fn": "Willer.addWill",
      "offset": [
        2198,
        2756
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB58"
    },
    "2606": {
      "fn": "Willer.addWill",
      "offset": [
        2198,
        2756
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2607": {
      "offset": [
        2311,
        2312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2609": {
      "offset": [
        2282,
        2296
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2610": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2296
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2611": {
      "offset": [
        2297,
        2298
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2612": {
      "offset": [
        2282,
        2299
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2613": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2614": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "LT",
      "path": "11"
    },
    "2615": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA42"
    },
    "2618": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2619": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA42"
    },
    "2622": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "2625": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2626": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2627": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2628": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "POP",
      "path": "11"
    },
    "2629": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2631": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "MUL",
      "path": "11"
    },
    "2632": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "ADD",
      "path": "11"
    },
    "2633": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2635": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2636": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "ADD",
      "path": "11"
    },
    "2637": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2638": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA57"
    },
    "2641": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2642": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2643": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "2646": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2647": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2654": {
      "op": "SHL"
    },
    "2655": {
      "op": "SUB"
    },
    "2656": {
      "offset": [
        2282,
        2313
      ],
      "op": "AND",
      "path": "11"
    },
    "2657": {
      "fn": "Willer.addWill",
      "offset": [
        2282,
        2313
      ],
      "op": "SUB",
      "path": "11"
    },
    "2658": {
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA7D"
    },
    "2661": {
      "offset": [
        2257,
        2394
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2662": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2664": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2665": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2671": {
      "op": "SHL"
    },
    "2672": {
      "offset": [
        2257,
        2394
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2673": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2674": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2676": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "ADD",
      "path": "11"
    },
    "2677": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2680": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2681": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x312D"
    },
    "2684": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2257,
        2394
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2685": {
      "fn": "Willer.addWill",
      "offset": [
        2257,
        2394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2686": {
      "offset": [
        2454,
        2463
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2693": {
      "op": "SHL"
    },
    "2694": {
      "op": "SUB"
    },
    "2695": {
      "offset": [
        2433,
        2463
      ],
      "op": "AND",
      "path": "11"
    },
    "2696": {
      "offset": [
        2433,
        2447
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2697": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2447
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2698": {
      "offset": [
        2448,
        2449
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2699": {
      "offset": [
        2433,
        2450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2700": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2701": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "LT",
      "path": "11"
    },
    "2702": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA99"
    },
    "2705": {
      "offset": [
        2433,
        2450
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2706": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA99"
    },
    "2709": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "2712": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2713": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2714": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2715": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "POP",
      "path": "11"
    },
    "2716": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2718": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "MUL",
      "path": "11"
    },
    "2719": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "ADD",
      "path": "11"
    },
    "2720": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2722": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2723": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "ADD",
      "path": "11"
    },
    "2724": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2725": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAAE"
    },
    "2728": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2729": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2730": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "2733": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2734": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2741": {
      "op": "SHL"
    },
    "2742": {
      "op": "SUB"
    },
    "2743": {
      "offset": [
        2433,
        2463
      ],
      "op": "AND",
      "path": "11"
    },
    "2744": {
      "fn": "Willer.addWill",
      "offset": [
        2433,
        2463
      ],
      "op": "SUB",
      "path": "11"
    },
    "2745": {
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAD4"
    },
    "2748": {
      "offset": [
        2408,
        2540
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2749": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2751": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "offset": [
        2408,
        2540
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2760": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2761": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2763": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "ADD",
      "path": "11"
    },
    "2764": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2767": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2768": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x317C"
    },
    "2771": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2408,
        2540
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2772": {
      "fn": "Willer.addWill",
      "offset": [
        2408,
        2540
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2773": {
      "offset": [
        2593,
        2601
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2775": {
      "fn": "Willer.addWill",
      "offset": [
        2593,
        2601
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2776": {
      "offset": [
        2579,
        2586
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2777": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2586
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2778": {
      "offset": [
        2587,
        2588
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2779": {
      "offset": [
        2579,
        2589
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2780": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2781": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "LT",
      "path": "11"
    },
    "2782": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAE9"
    },
    "2785": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2786": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAE9"
    },
    "2789": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "2792": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2579,
        2589
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2793": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2794": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2795": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "POP",
      "path": "11"
    },
    "2796": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2798": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "MUL",
      "path": "11"
    },
    "2799": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "ADD",
      "path": "11"
    },
    "2800": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2589
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "2801": {
      "offset": [
        2579,
        2601
      ],
      "op": "GT",
      "path": "11"
    },
    "2802": {
      "fn": "Willer.addWill",
      "offset": [
        2579,
        2601
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2803": {
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB0E"
    },
    "2806": {
      "offset": [
        2554,
        2679
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2807": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2809": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2816": {
      "op": "SHL"
    },
    "2817": {
      "offset": [
        2554,
        2679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2818": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2819": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2821": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "ADD",
      "path": "11"
    },
    "2822": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2825": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2826": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31C7"
    },
    "2829": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2554,
        2679
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2830": {
      "fn": "Willer.addWill",
      "offset": [
        2554,
        2679
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2831": {
      "offset": [
        2701,
        2708
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2832": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2708
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2833": {
      "offset": [
        2709,
        2710
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2834": {
      "offset": [
        2701,
        2711
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2835": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2836": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "LT",
      "path": "11"
    },
    "2837": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB20"
    },
    "2840": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2841": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB20"
    },
    "2844": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "2847": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2701,
        2711
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2848": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2849": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2850": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "POP",
      "path": "11"
    },
    "2851": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2853": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "MUL",
      "path": "11"
    },
    "2854": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "ADD",
      "path": "11"
    },
    "2855": {
      "fn": "Willer.addWill",
      "offset": [
        2701,
        2711
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "2856": {
      "offset": [
        2715,
        2716
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2858": {
      "offset": [
        2701,
        2716
      ],
      "op": "SUB",
      "path": "11"
    },
    "2859": {
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB46"
    },
    "2862": {
      "offset": [
        2693,
        2745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2863": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2865": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2866": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2872": {
      "op": "SHL"
    },
    "2873": {
      "offset": [
        2693,
        2745
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2874": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2875": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2877": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "ADD",
      "path": "11"
    },
    "2878": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2881": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2882": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3213"
    },
    "2885": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2693,
        2745
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2886": {
      "fn": "Willer.addWill",
      "offset": [
        2693,
        2745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2887": {
      "offset": [
        2238,
        2241
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2888": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB50"
    },
    "2891": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2892": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "2895": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2238,
        2241
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2896": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2897": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2898": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "POP",
      "path": "11"
    },
    "2899": {
      "fn": "Willer.addWill",
      "offset": [
        2238,
        2241
      ],
      "op": "POP",
      "path": "11"
    },
    "2900": {
      "offset": [
        2198,
        2756
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA26"
    },
    "2903": {
      "fn": "Willer.addWill",
      "offset": [
        2198,
        2756
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2904": {
      "fn": "Willer.addWill",
      "offset": [
        2198,
        2756
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2905": {
      "fn": "Willer.addWill",
      "offset": [
        2198,
        2756
      ],
      "op": "POP",
      "path": "11"
    },
    "2906": {
      "fn": "Willer.addWill",
      "offset": [
        5007,
        5019
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2907": {
      "offset": [
        1550,
        1556
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2909": {
      "fn": "Willer.addWill",
      "offset": [
        1550,
        1556
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2910": {
      "offset": [
        1532,
        1547
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "2911": {
      "offset": [
        1532,
        1556
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB68"
    },
    "2914": {
      "fn": "Willer.addWill",
      "offset": [
        1532,
        1556
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2915": {
      "fn": "Willer.addWill",
      "offset": [
        1532,
        1556
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2916": {
      "fn": "Willer.addWill",
      "offset": [
        1532,
        1556
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "2919": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        1532,
        1556
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2920": {
      "fn": "Willer.addWill",
      "offset": [
        1532,
        1556
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2921": {
      "offset": [
        1516,
        1528
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2922": {
      "offset": [
        1516,
        1556
      ],
      "op": "LT",
      "path": "11"
    },
    "2923": {
      "fn": "Willer.addWill",
      "offset": [
        1516,
        1556
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2924": {
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB87"
    },
    "2927": {
      "offset": [
        1495,
        1637
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2928": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2930": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2937": {
      "op": "SHL"
    },
    "2938": {
      "offset": [
        1495,
        1637
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2939": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2940": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2942": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "ADD",
      "path": "11"
    },
    "2943": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2946": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2947": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x324A"
    },
    "2950": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        1495,
        1637
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2951": {
      "fn": "Willer.addWill",
      "offset": [
        1495,
        1637
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2952": {
      "fn": "Willer.addWill",
      "offset": [
        5054,
        5074
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2959": {
      "op": "SHL"
    },
    "2960": {
      "op": "SUB"
    },
    "2961": {
      "offset": [
        1756,
        1790
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2962": {
      "fn": "Willer.addWill",
      "offset": [
        1756,
        1790
      ],
      "op": "AND",
      "path": "11"
    },
    "2963": {
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBAE"
    },
    "2966": {
      "offset": [
        1735,
        1871
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2967": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2969": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2970": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "offset": [
        1735,
        1871
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2978": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2979": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2981": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "ADD",
      "path": "11"
    },
    "2982": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "2985": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2986": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A7"
    },
    "2989": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        1735,
        1871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2990": {
      "fn": "Willer.addWill",
      "offset": [
        1735,
        1871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2991": {
      "fn": "Willer.addWill",
      "offset": [
        5096,
        5103
      ],
      "op": "DUP11",
      "path": "11"
    },
    "2992": {
      "fn": "Willer.addWill",
      "offset": [
        5096,
        5103
      ],
      "op": "DUP11",
      "path": "11"
    },
    "2993": {
      "offset": [
        2840,
        2846
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2995": {
      "offset": [
        2835,
        3089
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2996": {
      "offset": [
        2848,
        2866
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2997": {
      "fn": "Willer.addWill",
      "offset": [
        2848,
        2866
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2998": {
      "fn": "Willer.addWill",
      "offset": [
        2848,
        2866
      ],
      "op": "LT",
      "path": "11"
    },
    "2999": {
      "offset": [
        2835,
        3089
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3000": {
      "fn": "Willer.addWill",
      "offset": [
        2835,
        3089
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC40"
    },
    "3003": {
      "fn": "Willer.addWill",
      "offset": [
        2835,
        3089
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3004": {
      "offset": [
        2926,
        2934
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3006": {
      "fn": "Willer.addWill",
      "offset": [
        2926,
        2934
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3007": {
      "offset": [
        2912,
        2919
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3008": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2919
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3009": {
      "offset": [
        2920,
        2921
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3010": {
      "offset": [
        2912,
        2922
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3011": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3012": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "LT",
      "path": "11"
    },
    "3013": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBD0"
    },
    "3016": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3017": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBD0"
    },
    "3020": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "3023": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2912,
        2922
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3024": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3025": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3026": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "POP",
      "path": "11"
    },
    "3027": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3029": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "MUL",
      "path": "11"
    },
    "3030": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "ADD",
      "path": "11"
    },
    "3031": {
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2922
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "3032": {
      "offset": [
        2912,
        2934
      ],
      "op": "GT",
      "path": "11"
    },
    "3033": {
      "branch": 96,
      "fn": "Willer.addWill",
      "offset": [
        2912,
        2934
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3034": {
      "offset": [
        2887,
        3012
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBF5"
    },
    "3037": {
      "branch": 96,
      "offset": [
        2887,
        3012
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3038": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3040": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3041": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3047": {
      "op": "SHL"
    },
    "3048": {
      "offset": [
        2887,
        3012
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3049": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3050": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3052": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "ADD",
      "path": "11"
    },
    "3053": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "3056": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3057": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31C7"
    },
    "3060": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2887,
        3012
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3061": {
      "fn": "Willer.addWill",
      "offset": [
        2887,
        3012
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3062": {
      "offset": [
        3048,
        3049
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3064": {
      "offset": [
        3034,
        3041
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3065": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3041
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3066": {
      "offset": [
        3042,
        3043
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3067": {
      "offset": [
        3034,
        3044
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3068": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3069": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "LT",
      "path": "11"
    },
    "3070": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC09"
    },
    "3073": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3074": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC09"
    },
    "3077": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "3080": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        3034,
        3044
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3081": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3082": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3083": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "POP",
      "path": "11"
    },
    "3084": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3086": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "MUL",
      "path": "11"
    },
    "3087": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "ADD",
      "path": "11"
    },
    "3088": {
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3044
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "3089": {
      "offset": [
        3034,
        3049
      ],
      "op": "LT",
      "path": "11"
    },
    "3090": {
      "branch": 97,
      "fn": "Willer.addWill",
      "offset": [
        3034,
        3049
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3091": {
      "offset": [
        3026,
        3078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC2E"
    },
    "3094": {
      "branch": 97,
      "offset": [
        3026,
        3078
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3095": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3097": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3098": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3104": {
      "op": "SHL"
    },
    "3105": {
      "offset": [
        3026,
        3078
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3106": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3107": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3109": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "ADD",
      "path": "11"
    },
    "3110": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "3113": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3114": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3213"
    },
    "3117": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        3026,
        3078
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3118": {
      "fn": "Willer.addWill",
      "offset": [
        3026,
        3078
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3119": {
      "offset": [
        2868,
        2871
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3120": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC38"
    },
    "3123": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3124": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "3127": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        2868,
        2871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3128": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3129": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3130": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "POP",
      "path": "11"
    },
    "3131": {
      "fn": "Willer.addWill",
      "offset": [
        2868,
        2871
      ],
      "op": "POP",
      "path": "11"
    },
    "3132": {
      "offset": [
        2835,
        3089
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBB3"
    },
    "3135": {
      "fn": "Willer.addWill",
      "offset": [
        2835,
        3089
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3136": {
      "fn": "Willer.addWill",
      "offset": [
        2835,
        3089
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3137": {
      "fn": "Willer.addWill",
      "offset": [
        2835,
        3089
      ],
      "op": "POP",
      "path": "11"
    },
    "3138": {
      "fn": "Willer.addWill",
      "offset": [
        5119,
        5133
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3140": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5150
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3142": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3144": {
      "fn": "Willer.addWill",
      "offset": [
        5151,
        5161
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3151": {
      "op": "SHL"
    },
    "3152": {
      "op": "SUB"
    },
    "3153": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "AND",
      "path": "11"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3160": {
      "op": "SHL"
    },
    "3161": {
      "op": "SUB"
    },
    "3162": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "AND",
      "path": "11"
    },
    "3163": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3164": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3165": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3167": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "ADD",
      "path": "11"
    },
    "3168": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3169": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3170": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3171": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3173": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "ADD",
      "path": "11"
    },
    "3174": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3176": {
      "fn": "Willer.addWill",
      "offset": [
        5136,
        5162
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3177": {
      "fn": "Willer.addWill",
      "offset": [
        5119,
        5162
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3178": {
      "fn": "Willer.addWill",
      "offset": [
        5119,
        5162
      ],
      "op": "POP",
      "path": "11"
    },
    "3179": {
      "fn": "Willer.addWill",
      "offset": [
        5190,
        5204
      ],
      "op": "DUP16",
      "path": "11",
      "statement": 20
    },
    "3180": {
      "fn": "Willer.addWill",
      "offset": [
        5190,
        5204
      ],
      "op": "DUP16",
      "path": "11"
    },
    "3181": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5173
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3182": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5187
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3184": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5187
      ],
      "op": "ADD",
      "path": "11"
    },
    "3185": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3186": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3187": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC7D"
    },
    "3190": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3191": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3192": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3193": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x288D"
    },
    "3196": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        5172,
        5204
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3197": {
      "fn": "Willer.addWill",
      "offset": [
        5172,
        5204
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "fn": "Willer.addWill",
      "offset": [
        5214,
        5232
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 21,
      "value": "0xC8C"
    },
    "3202": {
      "fn": "Willer.addWill",
      "offset": [
        5214,
        5222
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3204": {
      "fn": "Willer.addWill",
      "offset": [
        5214,
        5222
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3205": {
      "fn": "Willer.addWill",
      "offset": [
        5214,
        5222
      ],
      "op": "ADD",
      "path": "11"
    },
    "3206": {
      "fn": "Willer.addWill",
      "offset": [
        5225,
        5232
      ],
      "op": "DUP16",
      "path": "11"
    },
    "3207": {
      "fn": "Willer.addWill",
      "offset": [
        5225,
        5232
      ],
      "op": "DUP16",
      "path": "11"
    },
    "3208": {
      "fn": "Willer.addWill",
      "offset": [
        5214,
        5232
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28F0"
    },
    "3211": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        5214,
        5232
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3212": {
      "fn": "Willer.addWill",
      "offset": [
        5214,
        5232
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "fn": "Willer.addWill",
      "offset": [
        5256,
        5257
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 22,
      "value": "0x0"
    },
    "3216": {
      "fn": "Willer.addWill",
      "offset": [
        5242,
        5253
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3218": {
      "fn": "Willer.addWill",
      "offset": [
        5242,
        5253
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3219": {
      "fn": "Willer.addWill",
      "offset": [
        5242,
        5253
      ],
      "op": "ADD",
      "path": "11"
    },
    "3220": {
      "fn": "Willer.addWill",
      "offset": [
        5242,
        5257
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3221": {
      "fn": "Willer.addWill",
      "offset": [
        5242,
        5257
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3222": {
      "fn": "Willer.addWill",
      "offset": [
        5242,
        5257
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3223": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5288
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 23,
      "value": "0x2"
    },
    "3225": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5288
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3226": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5288
      ],
      "op": "ADD",
      "path": "11"
    },
    "3227": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3228": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3235": {
      "op": "SHL"
    },
    "3236": {
      "op": "SUB"
    },
    "3237": {
      "op": "NOT"
    },
    "3238": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "AND",
      "path": "11"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3245": {
      "op": "SHL"
    },
    "3246": {
      "op": "SUB"
    },
    "3247": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "DUP16",
      "path": "11"
    },
    "3248": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "AND",
      "path": "11"
    },
    "3249": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "OR",
      "path": "11"
    },
    "3250": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3251": {
      "fn": "Willer.addWill",
      "offset": [
        5267,
        5311
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3252": {
      "fn": "Willer.addWill",
      "offset": [
        5321,
        5334
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 24,
      "value": "0x3"
    },
    "3254": {
      "fn": "Willer.addWill",
      "offset": [
        5321,
        5334
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3255": {
      "fn": "Willer.addWill",
      "offset": [
        5321,
        5334
      ],
      "op": "ADD",
      "path": "11"
    },
    "3256": {
      "fn": "Willer.addWill",
      "offset": [
        5321,
        5349
      ],
      "op": "DUP13",
      "path": "11"
    },
    "3257": {
      "fn": "Willer.addWill",
      "offset": [
        5321,
        5349
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3258": {
      "fn": "Willer.addWill",
      "offset": [
        5321,
        5349
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3259": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3260": {
      "fn": "Willer.addWill",
      "offset": [
        5377,
        5395
      ],
      "op": "DUP14",
      "path": "11"
    },
    "3261": {
      "fn": "Willer.addWill",
      "offset": [
        5377,
        5395
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3262": {
      "fn": "Willer.addWill",
      "offset": [
        5377,
        5395
      ],
      "op": "LT",
      "path": "11"
    },
    "3263": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3264": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD07"
    },
    "3267": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3268": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5438
      ],
      "op": "DUP15",
      "path": "11",
      "statement": 25
    },
    "3269": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5438
      ],
      "op": "DUP15",
      "path": "11"
    },
    "3270": {
      "fn": "Willer.addWill",
      "offset": [
        5439,
        5440
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3271": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3272": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3273": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "LT",
      "path": "11"
    },
    "3274": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCD5"
    },
    "3277": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3278": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCD5"
    },
    "3281": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "3284": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        5431,
        5441
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3285": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3286": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3287": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "POP",
      "path": "11"
    },
    "3288": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3290": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "MUL",
      "path": "11"
    },
    "3291": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "ADD",
      "path": "11"
    },
    "3292": {
      "fn": "Willer.addWill",
      "offset": [
        5431,
        5441
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "3293": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5417
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3294": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5427
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3296": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5427
      ],
      "op": "ADD",
      "path": "11"
    },
    "3297": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5427
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3299": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3300": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3301": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3302": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCEF"
    },
    "3305": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3306": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3307": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "3310": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        5416,
        5441
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3311": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3312": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3313": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3314": {
      "fn": "Willer.addWill",
      "offset": [
        5416,
        5441
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "3315": {
      "op": "POP"
    },
    "3316": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 26
    },
    "3317": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3318": {
      "op": "POP"
    },
    "3319": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCFF"
    },
    "3322": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3323": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "3326": {
      "fn": "Willer.addWill",
      "jump": "i",
      "offset": [
        5397,
        5400
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3327": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3328": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3329": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "POP",
      "path": "11"
    },
    "3330": {
      "fn": "Willer.addWill",
      "offset": [
        5397,
        5400
      ],
      "op": "POP",
      "path": "11"
    },
    "3331": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCBB"
    },
    "3334": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3335": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3336": {
      "fn": "Willer.addWill",
      "offset": [
        5360,
        5452
      ],
      "op": "POP",
      "path": "11"
    },
    "3337": {
      "fn": "Willer.addWill",
      "offset": [
        5109,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3338": {
      "offset": [
        1881,
        1882
      ],
      "op": "POP",
      "path": "11"
    },
    "3339": {
      "fn": "Willer.addWill",
      "offset": [
        1881,
        1882
      ],
      "op": "POP",
      "path": "11"
    },
    "3340": {
      "offset": [
        1647,
        1648
      ],
      "op": "POP",
      "path": "11"
    },
    "3341": {
      "offset": [
        2765,
        2766
      ],
      "op": "POP",
      "path": "11"
    },
    "3342": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3343": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3344": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3345": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3346": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3347": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3348": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3349": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3350": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3351": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3352": {
      "fn": "Willer.addWill",
      "offset": [
        4730,
        5458
      ],
      "op": "POP",
      "path": "11"
    },
    "3353": {
      "fn": "Willer.addWill",
      "jump": "o",
      "offset": [
        4730,
        5458
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3354": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3364": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "3365": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3367": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3368": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3369": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3370": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3372": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3374": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3375": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3377": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3378": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3379": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3381": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "3382": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3383": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9664,
        9672
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3384": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9664,
        9672
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3385": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3386": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3387": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3388": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3389": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD5D"
    },
    "3392": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3400": {
      "op": "SHL"
    },
    "3401": {
      "op": "SUB"
    },
    "3402": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3403": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "3404": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3406": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3407": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3408": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3409": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3411": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3413": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3414": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3416": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3417": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3418": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3419": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3420": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3421": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3422": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3423": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3424": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD85"
    },
    "3427": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "op": "SUB"
    },
    "3437": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3438": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3439": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "3440": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3442": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3443": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3444": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3445": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3447": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3449": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3450": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3452": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3453": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3454": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3456": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "3457": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3458": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "3459": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3460": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3461": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3462": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDA1"
    },
    "3465": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3466": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3468": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3475": {
      "op": "SHL"
    },
    "3476": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3477": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3478": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3480": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "3481": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "3484": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3485": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "3488": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3489": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3496": {
      "op": "SHL"
    },
    "3497": {
      "op": "SUB"
    },
    "3498": {
      "offset": [
        1093,
        1118
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3499": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "AND",
      "path": "11"
    },
    "3500": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3502": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3503": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3504": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3505": {
      "offset": [
        1093,
        1107
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3507": {
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3509": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3510": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3512": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3513": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1118
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3514": {
      "offset": [
        1093,
        1130
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3516": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1130
      ],
      "op": "ADD",
      "path": "11"
    },
    "3517": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1093,
        1130
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3518": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9693,
        9701
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3519": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9693,
        9701
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3520": {
      "offset": [
        1074,
        1089
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "3521": {
      "offset": [
        1074,
        1130
      ],
      "op": "LT",
      "path": "11"
    },
    "3522": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1074,
        1130
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3523": {
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDDE"
    },
    "3526": {
      "offset": [
        1053,
        1176
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3527": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3529": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3530": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3536": {
      "op": "SHL"
    },
    "3537": {
      "offset": [
        1053,
        1176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3538": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3539": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3541": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "ADD",
      "path": "11"
    },
    "3542": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "3545": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3546": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E68"
    },
    "3549": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        1053,
        1176
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3550": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        1053,
        1176
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3551": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9733,
        9741
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3552": {
      "offset": [
        4185,
        4212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3554": {
      "offset": [
        4248,
        4254
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3555": {
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3562": {
      "op": "SHL"
    },
    "3563": {
      "op": "SUB"
    },
    "3564": {
      "offset": [
        4276,
        4301
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3565": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "AND",
      "path": "11"
    },
    "3566": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3568": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3569": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3570": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3571": {
      "offset": [
        4276,
        4290
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3573": {
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3575": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3576": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3578": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3579": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4276,
        4301
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3580": {
      "offset": [
        4276,
        4322
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3581": {
      "offset": [
        4272,
        4322
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3582": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4272,
        4322
      ],
      "op": "LT",
      "path": "11"
    },
    "3583": {
      "offset": [
        4230,
        4498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3584": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4230,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE5F"
    },
    "3587": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "offset": [
        4382,
        4407
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3597": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "AND",
      "path": "11"
    },
    "3598": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3600": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3601": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3602": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3603": {
      "offset": [
        4382,
        4396
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3605": {
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3607": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3608": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3610": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3611": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4407
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3612": {
      "offset": [
        4382,
        4424
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3613": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3614": {
      "offset": [
        4422,
        4423
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3615": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4422,
        4423
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3616": {
      "offset": [
        4382,
        4424
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3617": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "LT",
      "path": "11"
    },
    "3618": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE2D"
    },
    "3621": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3622": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE2D"
    },
    "3625": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "3628": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3629": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3630": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3632": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3633": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3634": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3635": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3637": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3638": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3639": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3640": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "ADD",
      "path": "11"
    },
    "3641": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4382,
        4424
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3648": {
      "op": "SHL"
    },
    "3649": {
      "op": "SUB"
    },
    "3650": {
      "offset": [
        4382,
        4424
      ],
      "op": "AND",
      "path": "11"
    },
    "3651": {
      "offset": [
        4368,
        4378
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3652": {
      "offset": [
        4368,
        4424
      ],
      "op": "SUB",
      "path": "11"
    },
    "3653": {
      "offset": [
        4364,
        4488
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE4D"
    },
    "3656": {
      "offset": [
        4364,
        4488
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3657": {
      "offset": [
        4469,
        4473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3659": {
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3660": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4444,
        4473
      ],
      "op": "POP",
      "path": "11"
    },
    "3661": {
      "offset": [
        4364,
        4488
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3662": {
      "offset": [
        4336,
        4339
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3663": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE57"
    },
    "3666": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3667": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "3670": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        4336,
        4339
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3671": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3672": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3673": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "POP",
      "path": "11"
    },
    "3674": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4336,
        4339
      ],
      "op": "POP",
      "path": "11"
    },
    "3675": {
      "offset": [
        4230,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDE3"
    },
    "3678": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3679": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3687": {
      "op": "SHL"
    },
    "3688": {
      "op": "SUB"
    },
    "3689": {
      "offset": [
        4525,
        4550
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3690": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3691": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "AND",
      "path": "11"
    },
    "3692": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3694": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3695": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3696": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3697": {
      "offset": [
        4525,
        4539
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3699": {
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3701": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3702": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3704": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3705": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4550
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3706": {
      "offset": [
        4525,
        4570
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3708": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4570
      ],
      "op": "ADD",
      "path": "11"
    },
    "3709": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4570
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3710": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4525,
        4570
      ],
      "op": "AND",
      "path": "11"
    },
    "3711": {
      "offset": [
        4511,
        4521
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3712": {
      "offset": [
        4511,
        4570
      ],
      "op": "SUB",
      "path": "11"
    },
    "3713": {
      "offset": [
        4507,
        4626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE88"
    },
    "3716": {
      "offset": [
        4507,
        4626
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3717": {
      "op": "POP"
    },
    "3718": {
      "offset": [
        4611,
        4615
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3720": {
      "offset": [
        4507,
        4626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3721": {
      "offset": [
        4644,
        4666
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3722": {
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEA5"
    },
    "3725": {
      "offset": [
        4636,
        4706
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3726": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3728": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "offset": [
        4636,
        4706
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3737": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3738": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3740": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "ADD",
      "path": "11"
    },
    "3741": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "3744": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3745": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E96"
    },
    "3748": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        4636,
        4706
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3749": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        4636,
        4706
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3750": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEAD"
    },
    "3753": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D3"
    },
    "3756": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3757": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3758": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9785,
        9791
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3760": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3761": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9797,
        9822
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3762": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9797,
        9822
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3763": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9797,
        9822
      ],
      "op": "LT",
      "path": "11"
    },
    "3764": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3765": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEFA"
    },
    "3768": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3769": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9843,
        9884
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 27,
      "value": "0xEE8"
    },
    "3772": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9856,
        9864
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3773": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9880
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3774": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9880
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3775": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9881,
        9882
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3776": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3777": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3778": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "LT",
      "path": "11"
    },
    "3779": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xECE"
    },
    "3782": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3783": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xECE"
    },
    "3786": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "3789": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        9866,
        9883
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3790": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3791": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3792": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "POP",
      "path": "11"
    },
    "3793": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3795": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "MUL",
      "path": "11"
    },
    "3796": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "ADD",
      "path": "11"
    },
    "3797": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3799": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3800": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "ADD",
      "path": "11"
    },
    "3801": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3802": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEE3"
    },
    "3805": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3806": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3807": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "3810": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        9866,
        9883
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3811": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9866,
        9883
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3812": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9843,
        9855
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F2B"
    },
    "3815": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        9843,
        9884
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3816": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9843,
        9884
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3817": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 28
    },
    "3818": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEF2"
    },
    "3821": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3822": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "3825": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "i",
      "offset": [
        9824,
        9827
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3826": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3827": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3828": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "POP",
      "path": "11"
    },
    "3829": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9824,
        9827
      ],
      "op": "POP",
      "path": "11"
    },
    "3830": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEB0"
    },
    "3833": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3834": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3835": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9780,
        9895
      ],
      "op": "POP",
      "path": "11"
    },
    "3836": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF04"
    },
    "3839": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3841": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3842": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3843": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3844": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3845": {
      "offset": [
        4175,
        4724
      ],
      "op": "POP",
      "path": "11"
    },
    "3846": {
      "offset": [
        1186,
        1187
      ],
      "op": "POP",
      "path": "11"
    },
    "3847": {
      "offset": [
        3438,
        3439
      ],
      "op": "POP",
      "path": "11"
    },
    "3848": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "POP",
      "path": "11"
    },
    "3849": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "POP",
      "path": "11"
    },
    "3850": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "POP",
      "path": "11"
    },
    "3851": {
      "fn": "Willer.batchReleaseERC20",
      "offset": [
        9527,
        9901
      ],
      "op": "POP",
      "path": "11"
    },
    "3852": {
      "fn": "Willer.batchReleaseERC20",
      "jump": "o",
      "offset": [
        9527,
        9901
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3853": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3854": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6730,
        6740
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3855": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6836,
        6840
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3857": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3858": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3859": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3860": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3862": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3864": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3865": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3867": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3868": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3869": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "3871": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "3872": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3873": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6836,
        6840
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3874": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6836,
        6840
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3875": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6730,
        6740
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3876": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3877": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3878": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3879": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3880": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF48"
    },
    "3883": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3891": {
      "op": "SHL"
    },
    "3892": {
      "op": "SUB"
    },
    "3893": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3894": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "3895": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3897": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3898": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3899": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3900": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3902": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3904": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3905": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3907": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3908": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3909": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3910": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3911": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3912": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3913": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3914": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3915": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF70"
    },
    "3918": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3919": {
      "op": "POP"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3926": {
      "op": "SHL"
    },
    "3927": {
      "op": "SUB"
    },
    "3928": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3929": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3930": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "3931": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3933": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3934": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3935": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3936": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "3938": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3940": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3941": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3943": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3944": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "3945": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3947": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "3948": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3949": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "3950": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3951": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3952": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3953": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF8C"
    },
    "3956": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3957": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3959": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3960": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3966": {
      "op": "SHL"
    },
    "3967": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3968": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3969": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3971": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "3972": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "3975": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3976": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "3979": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3980": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3981": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6778,
        6794
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3982": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6778,
        6794
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3983": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6796,
        6805
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3984": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6796,
        6805
      ],
      "op": "DUP6",
      "path": "11"
    },
    "3985": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6807,
        6817
      ],
      "op": "CALLER",
      "path": "11"
    },
    "3986": {
      "offset": [
        2072,
        2111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3987": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2072,
        2111
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3988": {
      "branch": 98,
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2072,
        2111
      ],
      "op": "EQ",
      "path": "11"
    },
    "3989": {
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFB0"
    },
    "3992": {
      "branch": 98,
      "offset": [
        2051,
        2187
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3993": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3995": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3996": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4002": {
      "op": "SHL"
    },
    "4003": {
      "offset": [
        2051,
        2187
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4004": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4005": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4007": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "ADD",
      "path": "11"
    },
    "4008": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4011": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4012": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30DB"
    },
    "4015": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2051,
        2187
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4016": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2051,
        2187
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4017": {
      "offset": [
        2203,
        2209
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4019": {
      "offset": [
        2198,
        2756
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4020": {
      "offset": [
        2211,
        2236
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4021": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2211,
        2236
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4022": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2211,
        2236
      ],
      "op": "LT",
      "path": "11"
    },
    "4023": {
      "offset": [
        2198,
        2756
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4024": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2198,
        2756
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10E5"
    },
    "4027": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2198,
        2756
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4028": {
      "offset": [
        2311,
        2312
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4030": {
      "offset": [
        2282,
        2296
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4031": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2296
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4032": {
      "offset": [
        2297,
        2298
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4033": {
      "offset": [
        2282,
        2299
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4034": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4035": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "LT",
      "path": "11"
    },
    "4036": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFCF"
    },
    "4039": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4040": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFCF"
    },
    "4043": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "4046": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4047": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4048": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4049": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "POP",
      "path": "11"
    },
    "4050": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4052": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "MUL",
      "path": "11"
    },
    "4053": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "ADD",
      "path": "11"
    },
    "4054": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4056": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4057": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "ADD",
      "path": "11"
    },
    "4058": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4059": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFE4"
    },
    "4062": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4063": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4064": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "4067": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4068": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2299
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4075": {
      "op": "SHL"
    },
    "4076": {
      "op": "SUB"
    },
    "4077": {
      "offset": [
        2282,
        2313
      ],
      "op": "AND",
      "path": "11"
    },
    "4078": {
      "branch": 99,
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2282,
        2313
      ],
      "op": "SUB",
      "path": "11"
    },
    "4079": {
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100A"
    },
    "4082": {
      "branch": 99,
      "offset": [
        2257,
        2394
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4083": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4085": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4086": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4092": {
      "op": "SHL"
    },
    "4093": {
      "offset": [
        2257,
        2394
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4094": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4095": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4097": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "ADD",
      "path": "11"
    },
    "4098": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4101": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4102": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x312D"
    },
    "4105": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2257,
        2394
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4106": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2257,
        2394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4107": {
      "offset": [
        2454,
        2463
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4114": {
      "op": "SHL"
    },
    "4115": {
      "op": "SUB"
    },
    "4116": {
      "offset": [
        2433,
        2463
      ],
      "op": "AND",
      "path": "11"
    },
    "4117": {
      "offset": [
        2433,
        2447
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4118": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2447
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4119": {
      "offset": [
        2448,
        2449
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4120": {
      "offset": [
        2433,
        2450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4121": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4122": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "LT",
      "path": "11"
    },
    "4123": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1026"
    },
    "4126": {
      "offset": [
        2433,
        2450
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4127": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1026"
    },
    "4130": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "4133": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4134": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4135": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4136": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "POP",
      "path": "11"
    },
    "4137": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4139": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "MUL",
      "path": "11"
    },
    "4140": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "ADD",
      "path": "11"
    },
    "4141": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4143": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4144": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "ADD",
      "path": "11"
    },
    "4145": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4146": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x103B"
    },
    "4149": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4150": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4151": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "4154": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4155": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2450
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "op": "SUB"
    },
    "4164": {
      "offset": [
        2433,
        2463
      ],
      "op": "AND",
      "path": "11"
    },
    "4165": {
      "branch": 100,
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2433,
        2463
      ],
      "op": "SUB",
      "path": "11"
    },
    "4166": {
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1061"
    },
    "4169": {
      "branch": 100,
      "offset": [
        2408,
        2540
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4170": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4172": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4173": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4177": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4179": {
      "op": "SHL"
    },
    "4180": {
      "offset": [
        2408,
        2540
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4181": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4182": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4184": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "ADD",
      "path": "11"
    },
    "4185": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4188": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4189": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x317C"
    },
    "4192": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2408,
        2540
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4193": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2408,
        2540
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4194": {
      "offset": [
        2593,
        2601
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4196": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2593,
        2601
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4197": {
      "offset": [
        2579,
        2586
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4198": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2586
      ],
      "op": "DUP5",
      "path": "11"
    },
    "4199": {
      "offset": [
        2587,
        2588
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4200": {
      "offset": [
        2579,
        2589
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4201": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4202": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "LT",
      "path": "11"
    },
    "4203": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1076"
    },
    "4206": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4207": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1076"
    },
    "4210": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "4213": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2579,
        2589
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4214": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4215": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4216": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "POP",
      "path": "11"
    },
    "4217": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4219": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "MUL",
      "path": "11"
    },
    "4220": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "ADD",
      "path": "11"
    },
    "4221": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2589
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "4222": {
      "offset": [
        2579,
        2601
      ],
      "op": "GT",
      "path": "11"
    },
    "4223": {
      "branch": 101,
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2579,
        2601
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4224": {
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x109B"
    },
    "4227": {
      "branch": 101,
      "offset": [
        2554,
        2679
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4228": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4230": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4237": {
      "op": "SHL"
    },
    "4238": {
      "offset": [
        2554,
        2679
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4239": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4240": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4242": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "ADD",
      "path": "11"
    },
    "4243": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4246": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4247": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x31C7"
    },
    "4250": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2554,
        2679
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4251": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2554,
        2679
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4252": {
      "offset": [
        2701,
        2708
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4253": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2708
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4254": {
      "offset": [
        2709,
        2710
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4255": {
      "offset": [
        2701,
        2711
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4256": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4257": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "LT",
      "path": "11"
    },
    "4258": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10AD"
    },
    "4261": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4262": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10AD"
    },
    "4265": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "4268": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2701,
        2711
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4269": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4270": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4271": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "POP",
      "path": "11"
    },
    "4272": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4274": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "MUL",
      "path": "11"
    },
    "4275": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "ADD",
      "path": "11"
    },
    "4276": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2701,
        2711
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "4277": {
      "offset": [
        2715,
        2716
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4279": {
      "offset": [
        2701,
        2716
      ],
      "op": "SUB",
      "path": "11"
    },
    "4280": {
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10D3"
    },
    "4283": {
      "offset": [
        2693,
        2745
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4284": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4286": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "offset": [
        2693,
        2745
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4295": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4296": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4298": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "ADD",
      "path": "11"
    },
    "4299": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4302": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4303": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3213"
    },
    "4306": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2693,
        2745
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4307": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2693,
        2745
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4308": {
      "offset": [
        2238,
        2241
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4309": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10DD"
    },
    "4312": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4313": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "4316": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        2238,
        2241
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4317": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4318": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4319": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "POP",
      "path": "11"
    },
    "4320": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2238,
        2241
      ],
      "op": "POP",
      "path": "11"
    },
    "4321": {
      "offset": [
        2198,
        2756
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFB3"
    },
    "4324": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2198,
        2756
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4325": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        2198,
        2756
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6871,
        6881
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 29
    },
    "4328": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4330": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4331": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4332": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4333": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6870
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4335": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4337": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4338": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4340": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4341": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6882
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4342": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6915
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1100"
    },
    "4345": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6915
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4346": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6899,
        6915
      ],
      "op": "DUP13",
      "path": "11"
    },
    "4347": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6899,
        6915
      ],
      "op": "DUP13",
      "path": "11"
    },
    "4348": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6915
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x288D"
    },
    "4351": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        6856,
        6915
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4352": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6856,
        6915
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6940,
        6950
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 30
    },
    "4355": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4357": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4358": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4359": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4360": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6939
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4362": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4364": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4365": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4367": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4368": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6951
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4369": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6970
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x111E"
    },
    "4372": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6970
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4373": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6958
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4375": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6958
      ],
      "op": "ADD",
      "path": "11"
    },
    "4376": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6961,
        6970
      ],
      "op": "DUP11",
      "path": "11"
    },
    "4377": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6961,
        6970
      ],
      "op": "DUP11",
      "path": "11"
    },
    "4378": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6970
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28F0"
    },
    "4381": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "i",
      "offset": [
        6925,
        6970
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4382": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6925,
        6970
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4383": {
      "op": "POP"
    },
    "4384": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        7032,
        7036
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 31,
      "value": "0x1"
    },
    "4386": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        7032,
        7036
      ],
      "op": "SWAP12",
      "path": "11"
    },
    "4387": {
      "fn": "Willer.setNewBeneficiaries",
      "offset": [
        6581,
        7043
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "4388": {
      "op": "POP"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "op": "POP"
    },
    "4391": {
      "op": "POP"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "op": "POP"
    },
    "4394": {
      "op": "POP"
    },
    "4395": {
      "op": "POP"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "op": "POP"
    },
    "4399": {
      "fn": "Willer.setNewBeneficiaries",
      "jump": "o",
      "offset": [
        6581,
        7043
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4400": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7049,
        7414
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4401": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7147,
        7157
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4402": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7217,
        7221
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4404": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4405": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4406": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4407": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4409": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4411": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4412": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4414": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4415": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4416": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4418": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "4419": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4420": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4421": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7217,
        7221
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4422": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7147,
        7157
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4423": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4424": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4425": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4426": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4427": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x116B"
    },
    "4430": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4431": {
      "op": "POP"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "op": "SUB"
    },
    "4440": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4441": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "4442": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4444": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4445": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4446": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4447": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4449": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4451": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4452": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4454": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4455": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4456": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4457": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4458": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4459": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4460": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4461": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4462": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1193"
    },
    "4465": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4466": {
      "op": "POP"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4473": {
      "op": "SHL"
    },
    "4474": {
      "op": "SUB"
    },
    "4475": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4476": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4477": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "4478": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4480": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4481": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4482": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4483": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4485": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4487": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4488": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4490": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4491": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4492": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4494": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "4495": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4496": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "4497": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4498": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4499": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4500": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11AF"
    },
    "4503": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4504": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4506": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4513": {
      "op": "SHL"
    },
    "4514": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4515": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4516": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4518": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "4519": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4522": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4523": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "4526": {
      "fn": "Willer.setNewReleaseTime",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4527": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4528": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7184,
        7198
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4529": {
      "offset": [
        1550,
        1556
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4531": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1550,
        1556
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4532": {
      "offset": [
        1532,
        1547
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "4533": {
      "offset": [
        1532,
        1556
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11BE"
    },
    "4536": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1532,
        1556
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4537": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1532,
        1556
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4538": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1532,
        1556
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "4541": {
      "fn": "Willer.setNewReleaseTime",
      "jump": "i",
      "offset": [
        1532,
        1556
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4542": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1532,
        1556
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4543": {
      "offset": [
        1516,
        1528
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4544": {
      "offset": [
        1516,
        1556
      ],
      "op": "LT",
      "path": "11"
    },
    "4545": {
      "branch": 102,
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1516,
        1556
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4546": {
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11DD"
    },
    "4549": {
      "branch": 102,
      "offset": [
        1495,
        1637
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4550": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4552": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4559": {
      "op": "SHL"
    },
    "4560": {
      "offset": [
        1495,
        1637
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4561": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4562": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4564": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "ADD",
      "path": "11"
    },
    "4565": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4568": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4569": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x324A"
    },
    "4572": {
      "fn": "Willer.setNewReleaseTime",
      "jump": "i",
      "offset": [
        1495,
        1637
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4573": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        1495,
        1637
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "op": "POP"
    },
    "4576": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7252,
        7262
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 32
    },
    "4577": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4579": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4580": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4581": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4582": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7251
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4584": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4586": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4587": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4589": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4590": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7263
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4591": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7275
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4593": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7275
      ],
      "op": "ADD",
      "path": "11"
    },
    "4594": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7292
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4595": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7292
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4596": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7292
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "fn": "Willer.setNewReleaseTime",
      "offset": [
        7237,
        7292
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4599": {
      "fn": "Willer.setNewReleaseTime",
      "jump": "o",
      "offset": [
        7049,
        7414
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4600": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4607": {
      "op": "SHL"
    },
    "4608": {
      "op": "SUB"
    },
    "4609": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4610": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "4611": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4613": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4614": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4615": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4616": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4618": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4620": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4621": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4623": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4624": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4625": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4627": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "4628": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4629": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11370,
        11378
      ],
      "op": "DUP6",
      "path": "11"
    },
    "4630": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11370,
        11378
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4631": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4632": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4633": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4634": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4635": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x123B"
    },
    "4638": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4639": {
      "op": "POP"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4646": {
      "op": "SHL"
    },
    "4647": {
      "op": "SUB"
    },
    "4648": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4649": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "4650": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4652": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4653": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4654": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4655": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4657": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4659": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4660": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4662": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4663": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4664": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4665": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4666": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4667": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4668": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4669": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4670": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1263"
    },
    "4673": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4674": {
      "op": "POP"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4681": {
      "op": "SHL"
    },
    "4682": {
      "op": "SUB"
    },
    "4683": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4684": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4685": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "4686": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4688": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4689": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4690": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4691": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4693": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4695": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4696": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4698": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4699": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4700": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4702": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "4703": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4704": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "4705": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4706": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4707": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4708": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x127F"
    },
    "4711": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4712": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4714": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4715": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4721": {
      "op": "SHL"
    },
    "4722": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4723": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4724": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4726": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "4727": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4730": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4731": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "4734": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4735": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4742": {
      "op": "SHL"
    },
    "4743": {
      "op": "SUB"
    },
    "4744": {
      "offset": [
        1093,
        1118
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4745": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "AND",
      "path": "11"
    },
    "4746": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4748": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4749": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4750": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4751": {
      "offset": [
        1093,
        1107
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4753": {
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4755": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4756": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4758": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4759": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1118
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4760": {
      "offset": [
        1093,
        1130
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "4762": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1130
      ],
      "op": "ADD",
      "path": "11"
    },
    "4763": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1093,
        1130
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4764": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11399,
        11407
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4765": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11399,
        11407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4766": {
      "offset": [
        1074,
        1089
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "4767": {
      "offset": [
        1074,
        1130
      ],
      "op": "LT",
      "path": "11"
    },
    "4768": {
      "branch": 103,
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1074,
        1130
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4769": {
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12BC"
    },
    "4772": {
      "branch": 103,
      "offset": [
        1053,
        1176
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4773": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4775": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "offset": [
        1053,
        1176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4784": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4785": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4787": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "ADD",
      "path": "11"
    },
    "4788": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4791": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4792": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E68"
    },
    "4795": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        1053,
        1176
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4796": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        1053,
        1176
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4797": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11439,
        11447
      ],
      "op": "DUP7",
      "path": "11"
    },
    "4798": {
      "offset": [
        4185,
        4212
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4800": {
      "offset": [
        4248,
        4254
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4801": {
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4808": {
      "op": "SHL"
    },
    "4809": {
      "op": "SUB"
    },
    "4810": {
      "offset": [
        4276,
        4301
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4811": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "AND",
      "path": "11"
    },
    "4812": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4814": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4815": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4816": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4817": {
      "offset": [
        4276,
        4290
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4819": {
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4821": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4822": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4824": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4825": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4276,
        4301
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4826": {
      "offset": [
        4276,
        4322
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4827": {
      "offset": [
        4272,
        4322
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4828": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4272,
        4322
      ],
      "op": "LT",
      "path": "11"
    },
    "4829": {
      "offset": [
        4230,
        4498
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "4830": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4230,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x133D"
    },
    "4833": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4840": {
      "op": "SHL"
    },
    "4841": {
      "op": "SUB"
    },
    "4842": {
      "offset": [
        4382,
        4407
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4843": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "AND",
      "path": "11"
    },
    "4844": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4846": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4847": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4848": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4849": {
      "offset": [
        4382,
        4396
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4851": {
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4853": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4854": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4856": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4857": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4407
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4858": {
      "offset": [
        4382,
        4424
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4859": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4860": {
      "offset": [
        4422,
        4423
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4861": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4422,
        4423
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4862": {
      "offset": [
        4382,
        4424
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4863": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "LT",
      "path": "11"
    },
    "4864": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x130B"
    },
    "4867": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4868": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x130B"
    },
    "4871": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "4874": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4875": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4876": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4878": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4879": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "DUP3",
      "path": "11"
    },
    "4880": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4881": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4883": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4884": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4885": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4886": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "ADD",
      "path": "11"
    },
    "4887": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4382,
        4424
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4894": {
      "op": "SHL"
    },
    "4895": {
      "op": "SUB"
    },
    "4896": {
      "offset": [
        4382,
        4424
      ],
      "op": "AND",
      "path": "11"
    },
    "4897": {
      "offset": [
        4368,
        4378
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4898": {
      "offset": [
        4368,
        4424
      ],
      "op": "SUB",
      "path": "11"
    },
    "4899": {
      "offset": [
        4364,
        4488
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x132B"
    },
    "4902": {
      "offset": [
        4364,
        4488
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4903": {
      "offset": [
        4469,
        4473
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4905": {
      "offset": [
        4444,
        4473
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4906": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4444,
        4473
      ],
      "op": "POP",
      "path": "11"
    },
    "4907": {
      "offset": [
        4364,
        4488
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4908": {
      "offset": [
        4336,
        4339
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4909": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1335"
    },
    "4912": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4913": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "4916": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        4336,
        4339
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4917": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4918": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "4919": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "POP",
      "path": "11"
    },
    "4920": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4336,
        4339
      ],
      "op": "POP",
      "path": "11"
    },
    "4921": {
      "offset": [
        4230,
        4498
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x12C1"
    },
    "4924": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4925": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4230,
        4498
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4933": {
      "op": "SHL"
    },
    "4934": {
      "op": "SUB"
    },
    "4935": {
      "offset": [
        4525,
        4550
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4936": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "DUP4",
      "path": "11"
    },
    "4937": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "AND",
      "path": "11"
    },
    "4938": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "4940": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4941": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4942": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4943": {
      "offset": [
        4525,
        4539
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "4945": {
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "4947": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4948": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4950": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4951": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4550
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "4952": {
      "offset": [
        4525,
        4570
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "4954": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4570
      ],
      "op": "ADD",
      "path": "11"
    },
    "4955": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4570
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "4956": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4525,
        4570
      ],
      "op": "AND",
      "path": "11"
    },
    "4957": {
      "offset": [
        4511,
        4521
      ],
      "op": "CALLER",
      "path": "11"
    },
    "4958": {
      "offset": [
        4511,
        4570
      ],
      "op": "SUB",
      "path": "11"
    },
    "4959": {
      "offset": [
        4507,
        4626
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1366"
    },
    "4962": {
      "offset": [
        4507,
        4626
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4963": {
      "op": "POP"
    },
    "4964": {
      "offset": [
        4611,
        4615
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "4966": {
      "offset": [
        4507,
        4626
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4967": {
      "offset": [
        4644,
        4666
      ],
      "op": "DUP1",
      "path": "11"
    },
    "4968": {
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1383"
    },
    "4971": {
      "offset": [
        4636,
        4706
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "4972": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4974": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "4975": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4979": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4981": {
      "op": "SHL"
    },
    "4982": {
      "offset": [
        4636,
        4706
      ],
      "op": "DUP2",
      "path": "11"
    },
    "4983": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "4984": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "4986": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "ADD",
      "path": "11"
    },
    "4987": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "4990": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "4991": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E96"
    },
    "4994": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        4636,
        4706
      ],
      "op": "JUMP",
      "path": "11"
    },
    "4995": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        4636,
        4706
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "4996": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x138B"
    },
    "4999": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D3"
    },
    "5002": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5003": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5004": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11491,
        11497
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5006": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5007": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11503,
        11529
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5008": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11503,
        11529
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5009": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11503,
        11529
      ],
      "op": "LT",
      "path": "11"
    },
    "5010": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5011": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13FC"
    },
    "5014": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5015": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11550,
        11610
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 33,
      "value": "0x13EA"
    },
    "5018": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11564,
        11572
      ],
      "op": "DUP11",
      "path": "11"
    },
    "5019": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11589
      ],
      "op": "DUP11",
      "path": "11"
    },
    "5020": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11589
      ],
      "op": "DUP11",
      "path": "11"
    },
    "5021": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11590,
        11591
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5022": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5023": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5024": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "LT",
      "path": "11"
    },
    "5025": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13AC"
    },
    "5028": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5029": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13AC"
    },
    "5032": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "5035": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11574,
        11592
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5036": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5037": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5038": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "POP",
      "path": "11"
    },
    "5039": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5041": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "MUL",
      "path": "11"
    },
    "5042": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "ADD",
      "path": "11"
    },
    "5043": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5045": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5046": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "ADD",
      "path": "11"
    },
    "5047": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5048": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13C1"
    },
    "5051": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5052": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5053": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "5056": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11574,
        11592
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5057": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11574,
        11592
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5058": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11606
      ],
      "op": "DUP10",
      "path": "11"
    },
    "5059": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11606
      ],
      "op": "DUP10",
      "path": "11"
    },
    "5060": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11607,
        11608
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5061": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5062": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5063": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "LT",
      "path": "11"
    },
    "5064": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13D3"
    },
    "5067": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5068": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13D3"
    },
    "5071": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "5074": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11594,
        11609
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5075": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5076": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5077": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "POP",
      "path": "11"
    },
    "5078": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5080": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "MUL",
      "path": "11"
    },
    "5081": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5082": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "ADD",
      "path": "11"
    },
    "5083": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5084": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13E5"
    },
    "5087": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5088": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5089": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x305A"
    },
    "5092": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11594,
        11609
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5093": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11594,
        11609
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5094": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11550,
        11563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2211"
    },
    "5097": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11550,
        11610
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5098": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11550,
        11610
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5099": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 34
    },
    "5100": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13F4"
    },
    "5103": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5104": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "5107": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "i",
      "offset": [
        11531,
        11534
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5108": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5109": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5110": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "POP",
      "path": "11"
    },
    "5111": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11531,
        11534
      ],
      "op": "POP",
      "path": "11"
    },
    "5112": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x138E"
    },
    "5115": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5116": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5117": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11486,
        11621
      ],
      "op": "POP",
      "path": "11"
    },
    "5118": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1406"
    },
    "5121": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5123": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5124": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5125": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5126": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5127": {
      "offset": [
        4175,
        4724
      ],
      "op": "POP",
      "path": "11"
    },
    "5128": {
      "offset": [
        1186,
        1187
      ],
      "op": "POP",
      "path": "11"
    },
    "5129": {
      "offset": [
        3438,
        3439
      ],
      "op": "POP",
      "path": "11"
    },
    "5130": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "POP",
      "path": "11"
    },
    "5131": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "POP",
      "path": "11"
    },
    "5132": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "POP",
      "path": "11"
    },
    "5133": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "POP",
      "path": "11"
    },
    "5134": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "POP",
      "path": "11"
    },
    "5135": {
      "fn": "Willer.batchReleaseERC721",
      "offset": [
        11190,
        11627
      ],
      "op": "POP",
      "path": "11"
    },
    "5136": {
      "fn": "Willer.batchReleaseERC721",
      "jump": "o",
      "offset": [
        11190,
        11627
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5137": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7420,
        7749
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5138": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7535,
        7545
      ],
      "op": "CALLER",
      "path": "11"
    },
    "5139": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5141": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5142": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5143": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5144": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5146": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5148": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5149": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5151": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5152": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5153": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5155": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "5156": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5157": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5158": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5159": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5160": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5161": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1449"
    },
    "5164": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5165": {
      "op": "POP"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5172": {
      "op": "SHL"
    },
    "5173": {
      "op": "SUB"
    },
    "5174": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5175": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "5176": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5178": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5179": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5180": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5181": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5183": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5185": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5186": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5188": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5189": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5190": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5191": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5192": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5193": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5194": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5195": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5196": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1471"
    },
    "5199": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5200": {
      "op": "POP"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5207": {
      "op": "SHL"
    },
    "5208": {
      "op": "SUB"
    },
    "5209": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5210": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5211": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "5212": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5214": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5215": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5216": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5217": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5219": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5221": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5222": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5224": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5225": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5226": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5228": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "5229": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5230": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "5231": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5232": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5233": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5234": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x148D"
    },
    "5237": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5238": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5240": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5247": {
      "op": "SHL"
    },
    "5248": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5249": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5250": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5252": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "5253": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "5256": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5257": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "5260": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5261": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5262": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7580,
        7602
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "op": "SUB"
    },
    "5271": {
      "offset": [
        1756,
        1790
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5272": {
      "branch": 104,
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1756,
        1790
      ],
      "op": "AND",
      "path": "11"
    },
    "5273": {
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14B4"
    },
    "5276": {
      "branch": 104,
      "offset": [
        1735,
        1871
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5277": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5279": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5280": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5286": {
      "op": "SHL"
    },
    "5287": {
      "offset": [
        1735,
        1871
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5288": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5289": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5291": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "ADD",
      "path": "11"
    },
    "5292": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "5295": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5296": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x32A7"
    },
    "5299": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "jump": "i",
      "offset": [
        1735,
        1871
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5300": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        1735,
        1871
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5301": {
      "op": "POP"
    },
    "5302": {
      "op": "POP"
    },
    "5303": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7633,
        7643
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 35
    },
    "5304": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5306": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5307": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5308": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5309": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7632
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5311": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5313": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5314": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5316": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5317": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7644
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5318": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7664
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5320": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7664
      ],
      "op": "ADD",
      "path": "11"
    },
    "5321": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5322": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5329": {
      "op": "SHL"
    },
    "5330": {
      "op": "SUB"
    },
    "5331": {
      "op": "NOT"
    },
    "5332": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "AND",
      "path": "11"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5339": {
      "op": "SHL"
    },
    "5340": {
      "op": "SUB"
    },
    "5341": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5342": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5343": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "5344": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "AND",
      "path": "11"
    },
    "5345": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5346": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5347": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5348": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "OR",
      "path": "11"
    },
    "5349": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5350": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "offset": [
        7618,
        7689
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "5351": {
      "fn": "Willer.setNewBeneficiaryOfERC721",
      "jump": "o",
      "offset": [
        7420,
        7749
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5352": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11633,
        12104
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5359": {
      "op": "SHL"
    },
    "5360": {
      "op": "SUB"
    },
    "5361": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5362": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "5363": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5365": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5366": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5367": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5368": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5370": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5372": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5373": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5375": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5376": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5377": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5379": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "5380": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5381": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11812,
        11820
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5382": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11812,
        11820
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5383": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5384": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5385": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5386": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5387": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x152B"
    },
    "5390": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5391": {
      "op": "POP"
    },
    "5392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5398": {
      "op": "SHL"
    },
    "5399": {
      "op": "SUB"
    },
    "5400": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5401": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "5402": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5404": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5405": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5406": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5407": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5409": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5411": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5412": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5414": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5415": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5416": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5417": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5418": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5419": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5420": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5421": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5422": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1553"
    },
    "5425": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5426": {
      "op": "POP"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5433": {
      "op": "SHL"
    },
    "5434": {
      "op": "SUB"
    },
    "5435": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5436": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5437": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "5438": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5440": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5441": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5442": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5443": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5445": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5447": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5448": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5450": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5451": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5452": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5454": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "5455": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5456": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "5457": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5458": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5459": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5460": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x156F"
    },
    "5463": {
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5464": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5466": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5473": {
      "op": "SHL"
    },
    "5474": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5475": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5476": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5478": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "5479": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "5482": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5483": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "5486": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5487": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5488": {
      "offset": [
        1355,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "5490": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1355,
        1365
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5497": {
      "op": "SHL"
    },
    "5498": {
      "op": "SUB"
    },
    "5499": {
      "offset": [
        1315,
        1340
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5500": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "AND",
      "path": "11"
    },
    "5501": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5503": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5504": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5505": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5506": {
      "offset": [
        1315,
        1329
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5508": {
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5510": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5511": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5513": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5514": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5515": {
      "offset": [
        1315,
        1352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5517": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "ADD",
      "path": "11"
    },
    "5518": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5519": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11848,
        11856
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5520": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11848,
        11856
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5521": {
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1599"
    },
    "5524": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5525": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "5528": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5529": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5530": {
      "offset": [
        1280,
        1295
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "5531": {
      "offset": [
        1280,
        1365
      ],
      "op": "LT",
      "path": "11"
    },
    "5532": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1280,
        1365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5533": {
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15B8"
    },
    "5536": {
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5537": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5539": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5546": {
      "op": "SHL"
    },
    "5547": {
      "offset": [
        1259,
        1416
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5548": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5549": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5551": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "ADD",
      "path": "11"
    },
    "5552": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "5555": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5556": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E02"
    },
    "5559": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5560": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5561": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C0"
    },
    "5564": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D3"
    },
    "5567": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5568": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5569": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11896,
        11902
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5571": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11891,
        12098
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5572": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11908,
        11934
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5573": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11908,
        11934
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5574": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11908,
        11934
      ],
      "op": "LT",
      "path": "11"
    },
    "5575": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11891,
        12098
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5576": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11891,
        12098
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xEFA"
    },
    "5579": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11891,
        12098
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5580": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11955,
        12087
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 36,
      "value": "0x161F"
    },
    "5583": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11996,
        12004
      ],
      "op": "DUP9",
      "path": "11"
    },
    "5584": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12037
      ],
      "op": "DUP9",
      "path": "11"
    },
    "5585": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12037
      ],
      "op": "DUP9",
      "path": "11"
    },
    "5586": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12038,
        12039
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5587": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5588": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5589": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "LT",
      "path": "11"
    },
    "5590": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E1"
    },
    "5593": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5594": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15E1"
    },
    "5597": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "5600": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        12022,
        12040
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5601": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5602": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5603": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "POP",
      "path": "11"
    },
    "5604": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5606": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "MUL",
      "path": "11"
    },
    "5607": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "ADD",
      "path": "11"
    },
    "5608": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5610": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5611": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "ADD",
      "path": "11"
    },
    "5612": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5613": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15F6"
    },
    "5616": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5617": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5618": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "5621": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        12022,
        12040
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5622": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12022,
        12040
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5623": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12070
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5624": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12070
      ],
      "op": "DUP8",
      "path": "11"
    },
    "5625": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12071,
        12072
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5626": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5627": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5628": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "LT",
      "path": "11"
    },
    "5629": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1608"
    },
    "5632": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5633": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1608"
    },
    "5636": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "5639": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        12058,
        12073
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5640": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5641": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5642": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "POP",
      "path": "11"
    },
    "5643": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5645": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "MUL",
      "path": "11"
    },
    "5646": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5647": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "ADD",
      "path": "11"
    },
    "5648": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5649": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x161A"
    },
    "5652": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5653": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5654": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x305A"
    },
    "5657": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        12058,
        12073
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5658": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        12058,
        12073
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5659": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11955,
        11978
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22DA"
    },
    "5662": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        11955,
        12087
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5663": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11955,
        12087
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5664": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 37
    },
    "5665": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1629"
    },
    "5668": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5669": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "5672": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        11936,
        11939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5673": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5674": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5675": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "POP",
      "path": "11"
    },
    "5676": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11936,
        11939
      ],
      "op": "POP",
      "path": "11"
    },
    "5677": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11891,
        12098
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15C3"
    },
    "5680": {
      "fn": "Willer.batchReleaseERC721ToTreasury",
      "offset": [
        11891,
        12098
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5681": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5688": {
      "op": "SHL"
    },
    "5689": {
      "op": "SUB"
    },
    "5690": {
      "offset": [
        3183,
        3208
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5691": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "AND",
      "path": "11"
    },
    "5692": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5694": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5695": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5696": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5697": {
      "offset": [
        3183,
        3197
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5699": {
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5701": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5702": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5704": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5705": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3208
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5706": {
      "offset": [
        3183,
        3220
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5708": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "ADD",
      "path": "11"
    },
    "5709": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3220
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5710": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10054,
        10062
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5711": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10054,
        10062
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5712": {
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5713": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5714": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5715": {
      "branch": 105,
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3225
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5716": {
      "offset": [
        3183,
        3296
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1674"
    },
    "5719": {
      "branch": 105,
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5727": {
      "op": "SHL"
    },
    "5728": {
      "op": "SUB"
    },
    "5729": {
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5730": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "AND",
      "path": "11"
    },
    "5731": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5733": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5734": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5735": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5736": {
      "offset": [
        3245,
        3259
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5738": {
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5740": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5741": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5743": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5744": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3270
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5745": {
      "offset": [
        3245,
        3291
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5746": {
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5747": {
      "branch": 106,
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3245,
        3296
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5748": {
      "offset": [
        3183,
        3296
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5749": {
      "offset": [
        3183,
        3375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "5750": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5751": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3183,
        3375
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x169C"
    },
    "5754": {
      "branch": 106,
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5755": {
      "op": "POP"
    },
    "5756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5762": {
      "op": "SHL"
    },
    "5763": {
      "op": "SUB"
    },
    "5764": {
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5765": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5766": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "AND",
      "path": "11"
    },
    "5767": {
      "offset": [
        3373,
        3374
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5769": {
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5770": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5771": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5772": {
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5774": {
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5776": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5777": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5779": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5780": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3341
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5781": {
      "offset": [
        3316,
        3361
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "5783": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "ADD",
      "path": "11"
    },
    "5784": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5785": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3361
      ],
      "op": "AND",
      "path": "11"
    },
    "5786": {
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5787": {
      "branch": 107,
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3316,
        3375
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5788": {
      "offset": [
        3183,
        3375
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5789": {
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16B8"
    },
    "5792": {
      "branch": 107,
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5793": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5795": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5796": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5802": {
      "op": "SHL"
    },
    "5803": {
      "offset": [
        3161,
        3428
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5804": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5805": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5807": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "ADD",
      "path": "11"
    },
    "5808": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "5811": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5812": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9C"
    },
    "5815": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5816": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        3161,
        3428
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5817": {
      "offset": [
        1355,
        1365
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "5819": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1355,
        1365
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5826": {
      "op": "SHL"
    },
    "5827": {
      "op": "SUB"
    },
    "5828": {
      "offset": [
        1315,
        1340
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5829": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "AND",
      "path": "11"
    },
    "5830": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5832": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5833": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5834": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5835": {
      "offset": [
        1315,
        1329
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "5837": {
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5839": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5840": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5842": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5843": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1340
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "5844": {
      "offset": [
        1315,
        1352
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "5846": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "ADD",
      "path": "11"
    },
    "5847": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1352
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "5848": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10093,
        10101
      ],
      "op": "DUP6",
      "path": "11"
    },
    "5849": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10093,
        10101
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5850": {
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x16E2"
    },
    "5853": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5854": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2DE9"
    },
    "5857": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5858": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1315,
        1365
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5859": {
      "offset": [
        1280,
        1295
      ],
      "op": "TIMESTAMP",
      "path": "11"
    },
    "5860": {
      "offset": [
        1280,
        1365
      ],
      "op": "LT",
      "path": "11"
    },
    "5861": {
      "branch": 108,
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1280,
        1365
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5862": {
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1701"
    },
    "5865": {
      "branch": 108,
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5866": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "5868": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "5869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5875": {
      "op": "SHL"
    },
    "5876": {
      "offset": [
        1259,
        1416
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5877": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5878": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "5880": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "ADD",
      "path": "11"
    },
    "5881": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "5884": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5885": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E02"
    },
    "5888": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5889": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        1259,
        1416
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5890": {
      "offset": [
        2261,
        2282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1709"
    },
    "5893": {
      "offset": [
        2261,
        2280
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D3"
    },
    "5896": {
      "jump": "i",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5897": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        2261,
        2282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5898": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10145,
        10151
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "5900": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5901": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10157,
        10182
      ],
      "op": "DUP4",
      "path": "11"
    },
    "5902": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10157,
        10182
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5903": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10157,
        10182
      ],
      "op": "LT",
      "path": "11"
    },
    "5904": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "5905": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1756"
    },
    "5908": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5909": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10203,
        10254
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 38,
      "value": "0x1744"
    },
    "5912": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10226,
        10234
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5913": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10250
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5914": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10250
      ],
      "op": "DUP7",
      "path": "11"
    },
    "5915": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10251,
        10252
      ],
      "op": "DUP5",
      "path": "11"
    },
    "5916": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5917": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5918": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "LT",
      "path": "11"
    },
    "5919": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172A"
    },
    "5922": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "5923": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172A"
    },
    "5926": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "5929": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        10236,
        10253
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5930": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5931": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5932": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "POP",
      "path": "11"
    },
    "5933": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5935": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "MUL",
      "path": "11"
    },
    "5936": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "ADD",
      "path": "11"
    },
    "5937": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "5939": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5940": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "ADD",
      "path": "11"
    },
    "5941": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5942": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x173F"
    },
    "5945": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5946": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "5947": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "5950": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        10236,
        10253
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5951": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10236,
        10253
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5952": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10203,
        10225
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2391"
    },
    "5955": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        10203,
        10254
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5956": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10203,
        10254
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5957": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 39
    },
    "5958": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x174E"
    },
    "5961": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "DUP2",
      "path": "11"
    },
    "5962": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "5965": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        10184,
        10187
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5966": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5967": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "5968": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "POP",
      "path": "11"
    },
    "5969": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10184,
        10187
      ],
      "op": "POP",
      "path": "11"
    },
    "5970": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x170C"
    },
    "5973": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5974": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5975": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        10140,
        10265
      ],
      "op": "POP",
      "path": "11"
    },
    "5976": {
      "offset": [
        2303,
        2323
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1760"
    },
    "5979": {
      "offset": [
        1716,
        1717
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5981": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5982": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2809,
        2831
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5983": {
      "fn": "ReentrancyGuard._nonReentrantAfter",
      "offset": [
        2629,
        2838
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5984": {
      "offset": [
        2303,
        2323
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5985": {
      "offset": [
        3438,
        3439
      ],
      "op": "POP",
      "path": "11"
    },
    "5986": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "POP",
      "path": "11"
    },
    "5987": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "POP",
      "path": "11"
    },
    "5988": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "POP",
      "path": "11"
    },
    "5989": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "offset": [
        9907,
        10271
      ],
      "op": "POP",
      "path": "11"
    },
    "5990": {
      "fn": "Willer.batchReleaseERC20ToTreasury",
      "jump": "o",
      "offset": [
        9907,
        10271
      ],
      "op": "JUMP",
      "path": "11"
    },
    "5991": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "5992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5998": {
      "op": "SHL"
    },
    "5999": {
      "op": "SUB"
    },
    "6000": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 40
    },
    "6001": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "AND",
      "path": "11"
    },
    "6002": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6004": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6005": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6006": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6007": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6131
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "6009": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6011": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6012": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6013": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6014": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6016": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6017": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6018": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6019": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6141
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6020": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6022": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6023": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6024": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6025": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6026": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6027": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6028": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6029": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MUL",
      "path": "11"
    },
    "6030": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6031": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6032": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6033": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6034": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6035": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "6036": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6037": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6038": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6039": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6040": {
      "fn": "Willer.getShares",
      "offset": [
        6085,
        6098
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "6042": {
      "fn": "Willer.getShares",
      "offset": [
        6085,
        6098
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6043": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6044": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6045": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6046": {
      "fn": "Willer.getShares",
      "offset": [
        6117,
        6148
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6047": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6048": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6049": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6050": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x432"
    },
    "6053": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6054": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6056": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MUL",
      "path": "11"
    },
    "6057": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6058": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6059": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6060": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6061": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6063": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6064": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6066": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6068": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6069": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6070": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6071": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6072": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6073": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6074": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6075": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6077": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6078": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6079": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6081": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "ADD",
      "path": "11"
    },
    "6082": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6083": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6084": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6085": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "GT",
      "path": "11"
    },
    "6086": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17B6"
    },
    "6089": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6090": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "POP",
      "path": "11"
    },
    "6091": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "POP",
      "path": "11"
    },
    "6092": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "POP",
      "path": "11"
    },
    "6093": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "POP",
      "path": "11"
    },
    "6094": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "POP",
      "path": "11"
    },
    "6095": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6096": {
      "fn": "Willer.getShares",
      "offset": [
        6110,
        6148
      ],
      "op": "POP",
      "path": "11"
    },
    "6097": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6098": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6099": {
      "fn": "Willer.getShares",
      "offset": [
        6027,
        6155
      ],
      "op": "POP",
      "path": "11"
    },
    "6100": {
      "fn": "Willer.getShares",
      "jump": "o",
      "offset": [
        6027,
        6155
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6102": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DD"
    },
    "6105": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C51"
    },
    "6108": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6116": {
      "op": "SHL"
    },
    "6117": {
      "op": "SUB"
    },
    "6118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 41
    },
    "6119": {
      "branch": 124,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "6120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1842"
    },
    "6123": {
      "branch": 124,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6126": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6127": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6133": {
      "op": "SHL"
    },
    "6134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6136": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6140": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "6142": {
      "op": "MSTORE"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6147": {
      "op": "DUP3"
    },
    "6148": {
      "op": "ADD"
    },
    "6149": {
      "op": "MSTORE"
    },
    "6150": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "6183": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6185": {
      "op": "DUP3"
    },
    "6186": {
      "op": "ADD"
    },
    "6187": {
      "op": "MSTORE"
    },
    "6188": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "6195": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "6197": {
      "op": "SHL"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6200": {
      "op": "DUP3"
    },
    "6201": {
      "op": "ADD"
    },
    "6202": {
      "op": "MSTORE"
    },
    "6203": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6205": {
      "op": "ADD"
    },
    "6206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C5"
    },
    "6209": {
      "op": "JUMP"
    },
    "6210": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6211": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 42,
      "value": "0x184B"
    },
    "6214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CAB"
    },
    "6218": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "POP",
      "path": "0"
    },
    "6221": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6222": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6223": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 43,
      "value": "0x40"
    },
    "6225": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6226": {
      "op": "PUSH4",
      "value": "0x5137510F"
    },
    "6231": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6233": {
      "op": "SHL"
    },
    "6234": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6235": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6236": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15350
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6237": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15350
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6238": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15368
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA26EA21E"
    },
    "6243": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15368
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6244": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1875"
    },
    "6247": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6248": {
      "fn": "Willer.batchRelease",
      "offset": [
        15369,
        15377
      ],
      "op": "DUP15",
      "path": "11"
    },
    "6249": {
      "fn": "Willer.batchRelease",
      "offset": [
        15369,
        15377
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6250": {
      "fn": "Willer.batchRelease",
      "offset": [
        15379,
        15393
      ],
      "op": "DUP15",
      "path": "11"
    },
    "6251": {
      "fn": "Willer.batchRelease",
      "offset": [
        15379,
        15393
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6252": {
      "fn": "Willer.batchRelease",
      "offset": [
        15379,
        15393
      ],
      "op": "DUP15",
      "path": "11"
    },
    "6253": {
      "fn": "Willer.batchRelease",
      "offset": [
        15379,
        15393
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6254": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6256": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "ADD",
      "path": "11"
    },
    "6257": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2ED9"
    },
    "6260": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15346,
        15394
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6261": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6262": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6264": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6266": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6267": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6268": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6269": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "SUB",
      "path": "11"
    },
    "6270": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6271": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6273": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6274": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6275": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "6276": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6277": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6278": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6279": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x188F"
    },
    "6282": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6283": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6285": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6286": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6287": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6288": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "POP",
      "path": "11"
    },
    "6289": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "GAS",
      "path": "11"
    },
    "6290": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "CALL",
      "path": "11"
    },
    "6291": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6292": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6293": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6294": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18A3"
    },
    "6297": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6298": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6299": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6301": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6302": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6303": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6304": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6306": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6307": {
      "fn": "Willer.batchRelease",
      "offset": [
        15346,
        15394
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6308": {
      "op": "POP"
    },
    "6309": {
      "op": "POP"
    },
    "6310": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 44,
      "value": "0x40"
    },
    "6312": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6313": {
      "op": "PUSH4",
      "value": "0x5645E3BF"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6320": {
      "op": "SHL"
    },
    "6321": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6322": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6323": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15408
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "6324": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15408
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6325": {
      "op": "POP"
    },
    "6326": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15427
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xAC8BC77E"
    },
    "6331": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15427
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6332": {
      "op": "POP"
    },
    "6333": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18D2"
    },
    "6336": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6337": {
      "fn": "Willer.batchRelease",
      "offset": [
        15428,
        15436
      ],
      "op": "DUP15",
      "path": "11"
    },
    "6338": {
      "fn": "Willer.batchRelease",
      "offset": [
        15428,
        15436
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6339": {
      "fn": "Willer.batchRelease",
      "offset": [
        15438,
        15453
      ],
      "op": "DUP13",
      "path": "11"
    },
    "6340": {
      "fn": "Willer.batchRelease",
      "offset": [
        15438,
        15453
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6341": {
      "fn": "Willer.batchRelease",
      "offset": [
        15438,
        15453
      ],
      "op": "DUP13",
      "path": "11"
    },
    "6342": {
      "fn": "Willer.batchRelease",
      "offset": [
        15438,
        15453
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6343": {
      "fn": "Willer.batchRelease",
      "offset": [
        15455,
        15473
      ],
      "op": "DUP11",
      "path": "11"
    },
    "6344": {
      "fn": "Willer.batchRelease",
      "offset": [
        15455,
        15473
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6345": {
      "fn": "Willer.batchRelease",
      "offset": [
        15455,
        15473
      ],
      "op": "DUP11",
      "path": "11"
    },
    "6346": {
      "fn": "Willer.batchRelease",
      "offset": [
        15455,
        15473
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6347": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6349": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "ADD",
      "path": "11"
    },
    "6350": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2F67"
    },
    "6353": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15404,
        15474
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6354": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6355": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6357": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6359": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6360": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6361": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6362": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "SUB",
      "path": "11"
    },
    "6363": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6364": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6366": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6367": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6368": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "6369": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6370": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6371": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6372": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18EC"
    },
    "6375": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6376": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6378": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6379": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6380": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6381": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "POP",
      "path": "11"
    },
    "6382": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "GAS",
      "path": "11"
    },
    "6383": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "CALL",
      "path": "11"
    },
    "6384": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6385": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6386": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6387": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1900"
    },
    "6390": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6391": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6392": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6394": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6395": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6396": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6397": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6399": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6400": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6401": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "POP",
      "path": "11"
    },
    "6402": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "POP",
      "path": "11"
    },
    "6403": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "POP",
      "path": "11"
    },
    "6404": {
      "fn": "Willer.batchRelease",
      "offset": [
        15404,
        15474
      ],
      "op": "POP",
      "path": "11"
    },
    "6405": {
      "fn": "Willer.batchRelease",
      "offset": [
        15489,
        15495
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6407": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6408": {
      "fn": "Willer.batchRelease",
      "offset": [
        15501,
        15528
      ],
      "op": "DUP6",
      "path": "11"
    },
    "6409": {
      "fn": "Willer.batchRelease",
      "offset": [
        15501,
        15528
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6410": {
      "fn": "Willer.batchRelease",
      "offset": [
        15501,
        15528
      ],
      "op": "LT",
      "path": "11"
    },
    "6411": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6412": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19C5"
    },
    "6415": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6416": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15553
      ],
      "op": "ADDRESS",
      "path": "11",
      "statement": 45
    },
    "6417": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15573
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x7CE752C6"
    },
    "6422": {
      "fn": "Willer.batchRelease",
      "offset": [
        15591,
        15599
      ],
      "op": "DUP14",
      "path": "11"
    },
    "6423": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15633
      ],
      "op": "DUP10",
      "path": "11"
    },
    "6424": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15633
      ],
      "op": "DUP10",
      "path": "11"
    },
    "6425": {
      "fn": "Willer.batchRelease",
      "offset": [
        15634,
        15635
      ],
      "op": "DUP6",
      "path": "11"
    },
    "6426": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6427": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6428": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "LT",
      "path": "11"
    },
    "6429": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1928"
    },
    "6432": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6433": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1928"
    },
    "6436": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "6439": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15617,
        15636
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6440": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6441": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6442": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "POP",
      "path": "11"
    },
    "6443": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6445": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "MUL",
      "path": "11"
    },
    "6446": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "ADD",
      "path": "11"
    },
    "6447": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6449": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6450": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "ADD",
      "path": "11"
    },
    "6451": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6452": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x193D"
    },
    "6455": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6456": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6457": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2965"
    },
    "6460": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15617,
        15636
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6461": {
      "fn": "Willer.batchRelease",
      "offset": [
        15617,
        15636
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6462": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15673
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6463": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15673
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6464": {
      "fn": "Willer.batchRelease",
      "offset": [
        15674,
        15675
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6465": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6466": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6467": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "LT",
      "path": "11"
    },
    "6468": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x194F"
    },
    "6471": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6472": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x194F"
    },
    "6475": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "6478": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15654,
        15676
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6479": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6480": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6481": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "POP",
      "path": "11"
    },
    "6482": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6484": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "MUL",
      "path": "11"
    },
    "6485": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6486": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "ADD",
      "path": "11"
    },
    "6487": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6488": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1961"
    },
    "6491": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6492": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6493": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x305A"
    },
    "6496": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15654,
        15676
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6497": {
      "fn": "Willer.batchRelease",
      "offset": [
        15654,
        15676
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6498": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6500": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6501": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP6",
      "path": "11"
    },
    "6502": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "6507": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "AND",
      "path": "11"
    },
    "6508": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "6510": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SHL",
      "path": "11"
    },
    "6511": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6512": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6513": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6515": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "ADD",
      "path": "11"
    },
    "6516": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1980"
    },
    "6519": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "6520": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "6521": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6522": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6523": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6524": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30A4"
    },
    "6527": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15549,
        15690
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6528": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6529": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6531": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6533": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6534": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6535": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6536": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "SUB",
      "path": "11"
    },
    "6537": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6538": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6540": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6541": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6542": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "6543": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6544": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6545": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6546": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x199A"
    },
    "6549": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6550": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6552": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6553": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6554": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6555": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "POP",
      "path": "11"
    },
    "6556": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "GAS",
      "path": "11"
    },
    "6557": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "CALL",
      "path": "11"
    },
    "6558": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6559": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6560": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6561": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19AE"
    },
    "6564": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6565": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6566": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6568": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6569": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6570": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6571": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6573": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6574": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6575": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "POP",
      "path": "11"
    },
    "6576": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "POP",
      "path": "11"
    },
    "6577": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "POP",
      "path": "11"
    },
    "6578": {
      "fn": "Willer.batchRelease",
      "offset": [
        15549,
        15690
      ],
      "op": "POP",
      "path": "11"
    },
    "6579": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 46
    },
    "6580": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6581": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19BD"
    },
    "6584": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6585": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "6588": {
      "fn": "Willer.batchRelease",
      "jump": "i",
      "offset": [
        15530,
        15533
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6589": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6590": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6591": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "POP",
      "path": "11"
    },
    "6592": {
      "fn": "Willer.batchRelease",
      "offset": [
        15530,
        15533
      ],
      "op": "POP",
      "path": "11"
    },
    "6593": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1907"
    },
    "6596": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6597": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6598": {
      "fn": "Willer.batchRelease",
      "offset": [
        15484,
        15701
      ],
      "op": "POP",
      "path": "11"
    },
    "6599": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6600": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6601": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6602": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6603": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6604": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6605": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6606": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6607": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6608": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6609": {
      "fn": "Willer.batchRelease",
      "offset": [
        15048,
        15707
      ],
      "op": "POP",
      "path": "11"
    },
    "6610": {
      "fn": "Willer.batchRelease",
      "jump": "o",
      "offset": [
        15048,
        15707
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6611": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6612": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6614": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 47,
      "value": "0x1"
    },
    "6616": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2475
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6617": {
      "branch": 126,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2468,
        2487
      ],
      "op": "SUB",
      "path": "1"
    },
    "6618": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A25"
    },
    "6621": {
      "branch": 126,
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6622": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6624": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6625": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6631": {
      "op": "SHL"
    },
    "6632": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6633": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6636": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6638": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6639": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "ADD",
      "path": "1"
    },
    "6640": {
      "op": "MSTORE"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6643": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6645": {
      "op": "DUP3"
    },
    "6646": {
      "op": "ADD"
    },
    "6647": {
      "op": "MSTORE"
    },
    "6648": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6683": {
      "op": "DUP3"
    },
    "6684": {
      "op": "ADD"
    },
    "6685": {
      "op": "MSTORE"
    },
    "6686": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6688": {
      "op": "ADD"
    },
    "6689": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C5"
    },
    "6692": {
      "op": "JUMP"
    },
    "6693": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2460,
        2523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6694": {
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "6696": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2605
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0x1"
    },
    "6698": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "offset": [
        2598,
        2616
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6699": {
      "fn": "ReentrancyGuard._nonReentrantBefore",
      "jump": "o",
      "offset": [
        2336,
        2623
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6700": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13155,
        14165
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6701": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6703": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6704": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "6708": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "6710": {
      "op": "SHL"
    },
    "6711": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6712": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6719": {
      "op": "SHL"
    },
    "6720": {
      "op": "SUB"
    },
    "6721": {
      "op": "DUP5"
    },
    "6722": {
      "op": "DUP2"
    },
    "6723": {
      "op": "AND"
    },
    "6724": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6726": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6727": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "ADD",
      "path": "11"
    },
    "6728": {
      "op": "MSTORE"
    },
    "6729": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6731": {
      "op": "DUP3"
    },
    "6732": {
      "op": "ADD"
    },
    "6733": {
      "op": "DUP4"
    },
    "6734": {
      "op": "SWAP1"
    },
    "6735": {
      "op": "MSTORE"
    },
    "6736": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13292,
        13304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6738": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13292,
        13304
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6739": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13329
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6740": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13329
      ],
      "op": "DUP5",
      "path": "11"
    },
    "6741": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13329
      ],
      "op": "AND",
      "path": "11"
    },
    "6742": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13329
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6743": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13329
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xFDD58E"
    },
    "6747": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13329
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6750": {
      "op": "ADD"
    },
    "6751": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6753": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6755": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6756": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6757": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6758": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "SUB",
      "path": "11"
    },
    "6759": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6760": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6761": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "GAS",
      "path": "11"
    },
    "6762": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "6763": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6764": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6765": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6766": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A7B"
    },
    "6769": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6770": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6771": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6773": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6774": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "6775": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6776": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6778": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "REVERT",
      "path": "11"
    },
    "6779": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6780": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "POP",
      "path": "11"
    },
    "6781": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "POP",
      "path": "11"
    },
    "6782": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "POP",
      "path": "11"
    },
    "6783": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "POP",
      "path": "11"
    },
    "6784": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6786": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "6787": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "6788": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6790": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "NOT",
      "path": "11"
    },
    "6791": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "6793": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6794": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "ADD",
      "path": "11"
    },
    "6795": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "AND",
      "path": "11"
    },
    "6796": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6797": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "ADD",
      "path": "11"
    },
    "6798": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6799": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6801": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6802": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "POP",
      "path": "11"
    },
    "6803": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6804": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "ADD",
      "path": "11"
    },
    "6805": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6806": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A9F"
    },
    "6809": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6810": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6811": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "6814": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13307,
        13348
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6815": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13307,
        13348
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6816": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13292,
        13348
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6817": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13292,
        13348
      ],
      "op": "POP",
      "path": "11"
    },
    "6818": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13358,
        13370
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6820": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13402,
        13408
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6821": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13384,
        14080
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6828": {
      "op": "SHL"
    },
    "6829": {
      "op": "SUB"
    },
    "6830": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "DUP7",
      "path": "11"
    },
    "6831": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "AND",
      "path": "11"
    },
    "6832": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6834": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6835": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6836": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6837": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13444
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "6839": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6841": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6842": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6844": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6845": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13454
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6846": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13430,
        13475
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6847": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13426,
        13475
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6848": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13426,
        13475
      ],
      "op": "LT",
      "path": "11"
    },
    "6849": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13384,
        14080
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "6850": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13384,
        14080
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x569"
    },
    "6853": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13384,
        14080
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6858": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6860": {
      "op": "SHL"
    },
    "6861": {
      "op": "SUB"
    },
    "6862": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 49
    },
    "6863": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "AND",
      "path": "11"
    },
    "6864": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6866": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6867": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6868": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6869": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13573
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "6871": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6873": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6874": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6876": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6877": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13583
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6878": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13590
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "6880": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13590
      ],
      "op": "ADD",
      "path": "11"
    },
    "6881": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6882": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6883": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13527,
        13659
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B27"
    },
    "6886": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13527,
        13659
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6887": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13590
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6888": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13591,
        13592
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6889": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13591,
        13592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6890": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6891": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "LT",
      "path": "11"
    },
    "6892": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AF7"
    },
    "6895": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6896": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AF7"
    },
    "6899": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "6902": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13559,
        13593
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6903": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6904": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6906": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6907": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "DUP3",
      "path": "11"
    },
    "6908": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6909": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6911": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "DUP1",
      "path": "11"
    },
    "6912": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6913": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6914": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6915": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6916": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "ADD",
      "path": "11"
    },
    "6917": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6924": {
      "op": "SHL"
    },
    "6925": {
      "op": "SUB"
    },
    "6926": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "DUP11",
      "path": "11"
    },
    "6927": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "AND",
      "path": "11"
    },
    "6928": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "DUP4",
      "path": "11"
    },
    "6929": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6930": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13625
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "6932": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6933": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6934": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6935": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6937": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6938": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6939": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13635
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6940": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13645
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6942": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13645
      ],
      "op": "ADD",
      "path": "11"
    },
    "6943": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13611,
        13645
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6944": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13527,
        13534
      ],
      "op": "DUP6",
      "path": "11"
    },
    "6945": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13527,
        13534
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "6946": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13559,
        13593
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6947": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13527,
        13541
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2511"
    },
    "6950": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13527,
        13659
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6951": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13527,
        13659
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6958": {
      "op": "SHL"
    },
    "6959": {
      "op": "SUB"
    },
    "6960": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "DUP8",
      "path": "11"
    },
    "6961": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "AND",
      "path": "11"
    },
    "6962": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "6964": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6965": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6966": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6967": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13756
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "6969": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "6971": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "6972": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "6974": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6975": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13766
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "6976": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13787
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "6977": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13517,
        13659
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6978": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13517,
        13659
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "6979": {
      "op": "POP"
    },
    "6980": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13791
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B4F"
    },
    "6983": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13791
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6984": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13790,
        13791
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "6986": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13790,
        13791
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "6987": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13791
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x331D"
    },
    "6990": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13742,
        13791
      ],
      "op": "JUMP",
      "path": "11"
    },
    "6991": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13742,
        13791
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "6992": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13737,
        13738
      ],
      "op": "DUP2",
      "path": "11"
    },
    "6993": {
      "branch": 109,
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13737,
        13791
      ],
      "op": "SUB",
      "path": "11"
    },
    "6994": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13733,
        13877
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BC7"
    },
    "6997": {
      "branch": 109,
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13733,
        13877
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "6998": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 50,
      "value": "0x40"
    },
    "7000": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7001": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7007": {
      "op": "SHL"
    },
    "7008": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7009": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7016": {
      "op": "SHL"
    },
    "7017": {
      "op": "SUB"
    },
    "7018": {
      "op": "DUP8"
    },
    "7019": {
      "op": "DUP2"
    },
    "7020": {
      "op": "AND"
    },
    "7021": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7023": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7024": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "ADD",
      "path": "11"
    },
    "7025": {
      "op": "MSTORE"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7028": {
      "op": "DUP3"
    },
    "7029": {
      "op": "ADD"
    },
    "7030": {
      "op": "DUP7"
    },
    "7031": {
      "op": "SWAP1"
    },
    "7032": {
      "op": "MSTORE"
    },
    "7033": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13843
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7034": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13843
      ],
      "op": "AND",
      "path": "11"
    },
    "7035": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13843
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7036": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13843
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xFDD58E"
    },
    "7040": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13843
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7041": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7043": {
      "op": "ADD"
    },
    "7044": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7046": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7048": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7049": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7050": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7051": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "SUB",
      "path": "11"
    },
    "7052": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7053": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7054": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "GAS",
      "path": "11"
    },
    "7055": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "7056": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7057": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7058": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7059": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BA0"
    },
    "7062": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7063": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7064": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7066": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7067": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7068": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7069": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7071": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7072": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7073": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "POP",
      "path": "11"
    },
    "7074": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "POP",
      "path": "11"
    },
    "7075": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "POP",
      "path": "11"
    },
    "7076": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "POP",
      "path": "11"
    },
    "7077": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7079": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7080": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7081": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7083": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "NOT",
      "path": "11"
    },
    "7084": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7086": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7087": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "ADD",
      "path": "11"
    },
    "7088": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "AND",
      "path": "11"
    },
    "7089": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7090": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "ADD",
      "path": "11"
    },
    "7091": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7092": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7094": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7095": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "POP",
      "path": "11"
    },
    "7096": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7097": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "ADD",
      "path": "11"
    },
    "7098": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7099": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1BC4"
    },
    "7102": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7103": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7104": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "7107": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13821,
        13862
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7108": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13821,
        13862
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7109": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13811,
        13862
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7110": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13811,
        13862
      ],
      "op": "POP",
      "path": "11"
    },
    "7111": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13733,
        13877
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7112": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13963,
        13978
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 51,
      "value": "0x6"
    },
    "7114": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13963,
        13978
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7115": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7117": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7118": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7119": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7121": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7122": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "ADD",
      "path": "11"
    },
    "7123": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7124": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7127": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7128": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14046,
        14055
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7129": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7130": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7131": {
      "op": "PUSH4",
      "value": "0x79212195"
    },
    "7136": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7138": {
      "op": "SHL"
    },
    "7139": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7140": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7147": {
      "op": "SHL"
    },
    "7148": {
      "op": "SUB"
    },
    "7149": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        13919
      ],
      "op": "DUP9",
      "path": "11"
    },
    "7150": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        13919
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7151": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        13919
      ],
      "op": "AND",
      "path": "11"
    },
    "7152": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        13919
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7153": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        13919
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF242432A"
    },
    "7158": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        13919
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7159": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C0C"
    },
    "7162": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7163": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13937,
        13945
      ],
      "op": "DUP13",
      "path": "11"
    },
    "7164": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13937,
        13945
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7165": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13963,
        13978
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7166": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13963,
        13978
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7167": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13963,
        13978
      ],
      "op": "AND",
      "path": "11"
    },
    "7168": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13963,
        13978
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7169": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13996,
        14003
      ],
      "op": "DUP11",
      "path": "11"
    },
    "7170": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13996,
        14003
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7171": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14021,
        14028
      ],
      "op": "DUP10",
      "path": "11"
    },
    "7172": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        14021,
        14028
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7173": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7175": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "ADD",
      "path": "11"
    },
    "7176": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3380"
    },
    "7179": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13890,
        14069
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7180": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7181": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7183": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7185": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7186": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7187": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7188": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "SUB",
      "path": "11"
    },
    "7189": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7190": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7192": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7193": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7194": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "7195": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7196": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7197": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7198": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C26"
    },
    "7201": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7202": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7204": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7205": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7206": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7207": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "POP",
      "path": "11"
    },
    "7208": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "GAS",
      "path": "11"
    },
    "7209": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "CALL",
      "path": "11"
    },
    "7210": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7211": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7212": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7213": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C3A"
    },
    "7216": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7217": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7218": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7220": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7221": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7222": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7223": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7225": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7226": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7227": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "POP",
      "path": "11"
    },
    "7228": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "POP",
      "path": "11"
    },
    "7229": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "POP",
      "path": "11"
    },
    "7230": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13890,
        14069
      ],
      "op": "POP",
      "path": "11"
    },
    "7231": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 52
    },
    "7232": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7233": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C49"
    },
    "7236": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7237": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "7240": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "jump": "i",
      "offset": [
        13489,
        13492
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7241": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7242": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7243": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "POP",
      "path": "11"
    },
    "7244": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13489,
        13492
      ],
      "op": "POP",
      "path": "11"
    },
    "7245": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13384,
        14080
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AA5"
    },
    "7248": {
      "fn": "Willer.releaseERC1155ToTreasury",
      "offset": [
        13384,
        14080
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7249": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7250": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7252": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7259": {
      "op": "SHL"
    },
    "7260": {
      "op": "SUB"
    },
    "7261": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "7262": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 53
    },
    "7263": {
      "branch": 125,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 54
    },
    "7264": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AD"
    },
    "7267": {
      "branch": 125,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7268": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7270": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7271": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7275": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7277": {
      "op": "SHL"
    },
    "7278": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7279": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7282": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7284": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7285": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "7286": {
      "op": "DUP2"
    },
    "7287": {
      "op": "SWAP1"
    },
    "7288": {
      "op": "MSTORE"
    },
    "7289": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7291": {
      "op": "DUP3"
    },
    "7292": {
      "op": "ADD"
    },
    "7293": {
      "op": "MSTORE"
    },
    "7294": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7329": {
      "op": "DUP3"
    },
    "7330": {
      "op": "ADD"
    },
    "7331": {
      "op": "MSTORE"
    },
    "7332": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7334": {
      "op": "ADD"
    },
    "7335": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C5"
    },
    "7338": {
      "op": "JUMP"
    },
    "7339": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7340": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7342": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7343": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7350": {
      "op": "SHL"
    },
    "7351": {
      "op": "SUB"
    },
    "7352": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 55
    },
    "7353": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7354": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7361": {
      "op": "SHL"
    },
    "7362": {
      "op": "SUB"
    },
    "7363": {
      "op": "NOT"
    },
    "7364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "7366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7367": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "7368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7369": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x40"
    },
    "7372": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7376": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "7377": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7379": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7380": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "7413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "7416": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "7417": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "7418": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7419": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12110,
        13149
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7420": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7422": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7423": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7429": {
      "op": "SHL"
    },
    "7430": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7431": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7438": {
      "op": "SHL"
    },
    "7439": {
      "op": "SUB"
    },
    "7440": {
      "op": "DUP5"
    },
    "7441": {
      "op": "DUP2"
    },
    "7442": {
      "op": "AND"
    },
    "7443": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7445": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7446": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "ADD",
      "path": "11"
    },
    "7447": {
      "op": "MSTORE"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7450": {
      "op": "DUP3"
    },
    "7451": {
      "op": "ADD"
    },
    "7452": {
      "op": "DUP4"
    },
    "7453": {
      "op": "SWAP1"
    },
    "7454": {
      "op": "MSTORE"
    },
    "7455": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12250,
        12262
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7457": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12250,
        12262
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7458": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12287
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7459": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12287
      ],
      "op": "DUP5",
      "path": "11"
    },
    "7460": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12287
      ],
      "op": "AND",
      "path": "11"
    },
    "7461": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12287
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7462": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12287
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xFDD58E"
    },
    "7466": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12287
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7467": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7469": {
      "op": "ADD"
    },
    "7470": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7472": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7474": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7475": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7476": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7477": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "SUB",
      "path": "11"
    },
    "7478": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7479": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7480": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "GAS",
      "path": "11"
    },
    "7481": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "7482": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7483": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7484": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7485": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D4A"
    },
    "7488": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7489": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7490": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7492": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7493": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7494": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7495": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7497": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7498": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7499": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "POP",
      "path": "11"
    },
    "7500": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "POP",
      "path": "11"
    },
    "7501": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "POP",
      "path": "11"
    },
    "7502": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "POP",
      "path": "11"
    },
    "7503": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7505": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7506": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7507": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7509": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "NOT",
      "path": "11"
    },
    "7510": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7512": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7513": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "ADD",
      "path": "11"
    },
    "7514": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "AND",
      "path": "11"
    },
    "7515": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7516": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "ADD",
      "path": "11"
    },
    "7517": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7518": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7520": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7521": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "POP",
      "path": "11"
    },
    "7522": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7523": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "ADD",
      "path": "11"
    },
    "7524": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7525": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D6E"
    },
    "7528": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7529": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7530": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "7533": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12265,
        12306
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7534": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12265,
        12306
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7535": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12250,
        12306
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7536": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12250,
        12306
      ],
      "op": "POP",
      "path": "11"
    },
    "7537": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12316,
        12328
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7539": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12360,
        12366
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7540": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12342,
        13064
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7547": {
      "op": "SHL"
    },
    "7548": {
      "op": "SUB"
    },
    "7549": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7550": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "AND",
      "path": "11"
    },
    "7551": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7553": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7554": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7555": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7556": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12402
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "7558": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7560": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7561": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7563": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7564": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12412
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "7565": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12388,
        12433
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7566": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12384,
        12433
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7567": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12384,
        12433
      ],
      "op": "LT",
      "path": "11"
    },
    "7568": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12342,
        13064
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7569": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12342,
        13064
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x569"
    },
    "7572": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12342,
        13064
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7579": {
      "op": "SHL"
    },
    "7580": {
      "op": "SUB"
    },
    "7581": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 57
    },
    "7582": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "AND",
      "path": "11"
    },
    "7583": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7585": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7586": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7587": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7588": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12531
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "7590": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7592": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7593": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7595": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7596": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12541
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "7597": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12548
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7599": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12548
      ],
      "op": "ADD",
      "path": "11"
    },
    "7600": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7601": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7602": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12485,
        12617
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DC6"
    },
    "7605": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12485,
        12617
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7606": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12548
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7607": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12549,
        12550
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7608": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12549,
        12550
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7609": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7610": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "LT",
      "path": "11"
    },
    "7611": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AF7"
    },
    "7614": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7615": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AF7"
    },
    "7618": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12517,
        12551
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "7621": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12517,
        12551
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7622": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12485,
        12617
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7629": {
      "op": "SHL"
    },
    "7630": {
      "op": "SUB"
    },
    "7631": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7632": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "AND",
      "path": "11"
    },
    "7633": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7635": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7636": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7637": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7638": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12714
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "7640": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7642": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7643": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7645": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7646": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12724
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "7647": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12745
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7648": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12475,
        12617
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7649": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12475,
        12617
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7650": {
      "op": "POP"
    },
    "7651": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1DEE"
    },
    "7654": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12749
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7655": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12748,
        12749
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "7657": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12748,
        12749
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7658": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12749
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x331D"
    },
    "7661": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12700,
        12749
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7662": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12700,
        12749
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7663": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12695,
        12696
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7664": {
      "branch": 110,
      "fn": "Willer.releaseERC1155",
      "offset": [
        12695,
        12749
      ],
      "op": "SUB",
      "path": "11"
    },
    "7665": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12691,
        12835
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E66"
    },
    "7668": {
      "branch": 110,
      "fn": "Willer.releaseERC1155",
      "offset": [
        12691,
        12835
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7669": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 58,
      "value": "0x40"
    },
    "7671": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7672": {
      "op": "PUSH3",
      "value": "0x7EEAC7"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7678": {
      "op": "SHL"
    },
    "7679": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7680": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7687": {
      "op": "SHL"
    },
    "7688": {
      "op": "SUB"
    },
    "7689": {
      "op": "DUP8"
    },
    "7690": {
      "op": "DUP2"
    },
    "7691": {
      "op": "AND"
    },
    "7692": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7694": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7695": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "ADD",
      "path": "11"
    },
    "7696": {
      "op": "MSTORE"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7699": {
      "op": "DUP3"
    },
    "7700": {
      "op": "ADD"
    },
    "7701": {
      "op": "DUP7"
    },
    "7702": {
      "op": "SWAP1"
    },
    "7703": {
      "op": "MSTORE"
    },
    "7704": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12801
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7705": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12801
      ],
      "op": "AND",
      "path": "11"
    },
    "7706": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12801
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7707": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12801
      ],
      "op": "PUSH3",
      "path": "11",
      "value": "0xFDD58E"
    },
    "7711": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12801
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7712": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7714": {
      "op": "ADD"
    },
    "7715": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7717": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7719": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7720": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7721": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7722": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "SUB",
      "path": "11"
    },
    "7723": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7724": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7725": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "GAS",
      "path": "11"
    },
    "7726": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "7727": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7728": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7729": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7730": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E3F"
    },
    "7733": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7734": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7735": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7737": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7738": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7739": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7740": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7742": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7743": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7744": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "POP",
      "path": "11"
    },
    "7745": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "POP",
      "path": "11"
    },
    "7746": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "POP",
      "path": "11"
    },
    "7747": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "POP",
      "path": "11"
    },
    "7748": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7750": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7751": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7752": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7754": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "NOT",
      "path": "11"
    },
    "7755": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "7757": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7758": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "ADD",
      "path": "11"
    },
    "7759": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "AND",
      "path": "11"
    },
    "7760": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7761": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "ADD",
      "path": "11"
    },
    "7762": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7763": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7765": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7766": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "POP",
      "path": "11"
    },
    "7767": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7768": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "ADD",
      "path": "11"
    },
    "7769": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7770": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E63"
    },
    "7773": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7774": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7775": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "7778": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12779,
        12820
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7779": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12779,
        12820
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7780": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12769,
        12820
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7781": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12769,
        12820
      ],
      "op": "POP",
      "path": "11"
    },
    "7782": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12691,
        12835
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7789": {
      "op": "SHL"
    },
    "7790": {
      "op": "SUB"
    },
    "7791": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 59
    },
    "7792": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7793": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "AND",
      "path": "11"
    },
    "7794": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7796": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7797": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7798": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7799": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12935
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "7801": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7803": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7804": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7806": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7807": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12945
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "7808": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7809": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7810": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        12877
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7811": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        12877
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7812": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        12877
      ],
      "op": "AND",
      "path": "11"
    },
    "7813": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        12877
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7814": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        12877
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xF242432A"
    },
    "7819": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        12877
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7820": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12895,
        12903
      ],
      "op": "DUP10",
      "path": "11"
    },
    "7821": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12895,
        12903
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7822": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12960,
        12961
      ],
      "op": "DUP6",
      "path": "11"
    },
    "7823": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12960,
        12961
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7824": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7825": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "LT",
      "path": "11"
    },
    "7826": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E9D"
    },
    "7829": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7830": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E9D"
    },
    "7833": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "7836": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12921,
        12962
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7837": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7838": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7840": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7841": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7842": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7843": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "7845": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7846": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7847": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "7848": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7849": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7850": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "ADD",
      "path": "11"
    },
    "7851": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "7852": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7854": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7855": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7856": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7857": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7858": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "ADD",
      "path": "11"
    },
    "7859": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7860": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7861": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7862": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "DUP3",
      "path": "11"
    },
    "7863": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7864": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7865": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7868": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7872": {
      "op": "SHL"
    },
    "7873": {
      "op": "SUB"
    },
    "7874": {
      "op": "NOT"
    },
    "7875": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "7877": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP7",
      "path": "11"
    },
    "7878": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7879": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "SHL",
      "path": "11"
    },
    "7880": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "AND",
      "path": "11"
    },
    "7881": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7882": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7883": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EE6"
    },
    "7886": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "7887": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "7888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7894": {
      "op": "SHL"
    },
    "7895": {
      "op": "SUB"
    },
    "7896": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "AND",
      "path": "11"
    },
    "7897": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12921,
        12962
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7898": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12980,
        12987
      ],
      "op": "DUP11",
      "path": "11"
    },
    "7899": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12980,
        12987
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7900": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13005,
        13012
      ],
      "op": "DUP10",
      "path": "11"
    },
    "7901": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13005,
        13012
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7902": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        13030,
        13039
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7903": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "7905": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "ADD",
      "path": "11"
    },
    "7906": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3380"
    },
    "7909": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12848,
        13053
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7910": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7911": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7913": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7915": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7916": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7917": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP4",
      "path": "11"
    },
    "7918": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "SUB",
      "path": "11"
    },
    "7919": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7920": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7922": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP8",
      "path": "11"
    },
    "7923": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7924": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "7925": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7926": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7927": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7928": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F00"
    },
    "7931": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7932": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7934": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7935": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7936": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7937": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "POP",
      "path": "11"
    },
    "7938": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "GAS",
      "path": "11"
    },
    "7939": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "CALL",
      "path": "11"
    },
    "7940": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7941": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7942": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "7943": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F14"
    },
    "7946": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "7947": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7948": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7950": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7951": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "7952": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "7953": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "7955": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "REVERT",
      "path": "11"
    },
    "7956": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7957": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "POP",
      "path": "11"
    },
    "7958": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "POP",
      "path": "11"
    },
    "7959": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "POP",
      "path": "11"
    },
    "7960": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12848,
        13053
      ],
      "op": "POP",
      "path": "11"
    },
    "7961": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 60
    },
    "7962": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7963": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F23"
    },
    "7966": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "7967": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "7970": {
      "fn": "Willer.releaseERC1155",
      "jump": "i",
      "offset": [
        12447,
        12450
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7971": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7972": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "7973": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "POP",
      "path": "11"
    },
    "7974": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12447,
        12450
      ],
      "op": "POP",
      "path": "11"
    },
    "7975": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12342,
        13064
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D74"
    },
    "7978": {
      "fn": "Willer.releaseERC1155",
      "offset": [
        12342,
        13064
      ],
      "op": "JUMP",
      "path": "11"
    },
    "7979": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8297,
        9521
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "7980": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "7982": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "7983": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7988": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7990": {
      "op": "SHL"
    },
    "7991": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP2",
      "path": "11"
    },
    "7992": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "7993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7999": {
      "op": "SHL"
    },
    "8000": {
      "op": "SUB"
    },
    "8001": {
      "op": "DUP4"
    },
    "8002": {
      "op": "DUP2"
    },
    "8003": {
      "op": "AND"
    },
    "8004": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8006": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8007": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "ADD",
      "path": "11"
    },
    "8008": {
      "op": "MSTORE"
    },
    "8009": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8431,
        8443
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8011": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8431,
        8443
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8012": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8466
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8013": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8466
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8014": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8466
      ],
      "op": "AND",
      "path": "11"
    },
    "8015": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8466
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8016": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8466
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "8021": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8466
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8024": {
      "op": "ADD"
    },
    "8025": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8027": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8029": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8030": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8031": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8032": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "SUB",
      "path": "11"
    },
    "8033": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8034": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8035": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "GAS",
      "path": "11"
    },
    "8036": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "8037": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8038": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8039": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8040": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F75"
    },
    "8043": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8044": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8045": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8047": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8048": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "8049": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8050": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8052": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "REVERT",
      "path": "11"
    },
    "8053": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8054": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "POP",
      "path": "11"
    },
    "8055": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "POP",
      "path": "11"
    },
    "8056": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "POP",
      "path": "11"
    },
    "8057": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "POP",
      "path": "11"
    },
    "8058": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8060": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8061": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8062": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8064": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "NOT",
      "path": "11"
    },
    "8065": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8067": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8068": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "ADD",
      "path": "11"
    },
    "8069": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "AND",
      "path": "11"
    },
    "8070": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8071": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "ADD",
      "path": "11"
    },
    "8072": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8073": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8075": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8076": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "POP",
      "path": "11"
    },
    "8077": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8078": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "ADD",
      "path": "11"
    },
    "8079": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8080": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F99"
    },
    "8083": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8084": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8085": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "8088": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        8446,
        8476
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8089": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8446,
        8476
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8090": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8431,
        8476
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8091": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8431,
        8476
      ],
      "op": "POP",
      "path": "11"
    },
    "8092": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8486,
        8498
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8094": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8520,
        8527
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 61
    },
    "8095": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8531,
        8532
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8097": {
      "branch": 111,
      "fn": "Willer.releaseERC20",
      "offset": [
        8520,
        8532
      ],
      "op": "SUB",
      "path": "11"
    },
    "8098": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FBD"
    },
    "8101": {
      "branch": 111,
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8102": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8104": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8111": {
      "op": "SHL"
    },
    "8112": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8113": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8114": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8116": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "ADD",
      "path": "11"
    },
    "8117": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "8120": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8121": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x33BA"
    },
    "8124": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        8512,
        8571
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8125": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8512,
        8571
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8126": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8128": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8129": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "8136": {
      "op": "SHL"
    },
    "8137": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8138": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8145": {
      "op": "SHL"
    },
    "8146": {
      "op": "SUB"
    },
    "8147": {
      "op": "DUP6"
    },
    "8148": {
      "op": "DUP2"
    },
    "8149": {
      "op": "AND"
    },
    "8150": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8152": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8153": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "ADD",
      "path": "11"
    },
    "8154": {
      "op": "MSTORE"
    },
    "8155": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8635,
        8639
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "8156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8158": {
      "op": "DUP4"
    },
    "8159": {
      "op": "ADD"
    },
    "8160": {
      "op": "MSTORE"
    },
    "8161": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8581,
        8593
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8163": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8581,
        8593
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8164": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8616
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8165": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8616
      ],
      "op": "DUP6",
      "path": "11"
    },
    "8166": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8616
      ],
      "op": "AND",
      "path": "11"
    },
    "8167": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8616
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8168": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8616
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDD62ED3E"
    },
    "8173": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8616
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8176": {
      "op": "ADD"
    },
    "8177": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8179": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8181": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8182": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8183": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8184": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "SUB",
      "path": "11"
    },
    "8185": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8186": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8187": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "GAS",
      "path": "11"
    },
    "8188": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "8189": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8190": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8191": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8192": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x200D"
    },
    "8195": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8196": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8197": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8199": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8200": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "8201": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8202": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8204": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "REVERT",
      "path": "11"
    },
    "8205": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8206": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "POP",
      "path": "11"
    },
    "8207": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "POP",
      "path": "11"
    },
    "8208": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "POP",
      "path": "11"
    },
    "8209": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "POP",
      "path": "11"
    },
    "8210": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8212": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8213": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8214": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8216": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "NOT",
      "path": "11"
    },
    "8217": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8219": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8220": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "ADD",
      "path": "11"
    },
    "8221": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "AND",
      "path": "11"
    },
    "8222": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8223": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "ADD",
      "path": "11"
    },
    "8224": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8225": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8227": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8228": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "POP",
      "path": "11"
    },
    "8229": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8230": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "ADD",
      "path": "11"
    },
    "8231": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8232": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2031"
    },
    "8235": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8236": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8237": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "8240": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        8596,
        8641
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8241": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8596,
        8641
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8242": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8581,
        8641
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8243": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8581,
        8641
      ],
      "op": "POP",
      "path": "11"
    },
    "8244": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8659,
        8666
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 62
    },
    "8245": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8670,
        8671
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8247": {
      "branch": 112,
      "fn": "Willer.releaseERC20",
      "offset": [
        8659,
        8671
      ],
      "op": "SUB",
      "path": "11"
    },
    "8248": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2083"
    },
    "8251": {
      "branch": 112,
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8252": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8254": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8261": {
      "op": "SHL"
    },
    "8262": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8263": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8264": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8266": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8268": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8269": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "ADD",
      "path": "11"
    },
    "8270": {
      "op": "MSTORE"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8275": {
      "op": "DUP3"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "MSTORE"
    },
    "8278": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A204552433230207A65726F20616C6C6F77616E636500000000"
    },
    "8311": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8313": {
      "op": "DUP3"
    },
    "8314": {
      "op": "ADD"
    },
    "8315": {
      "op": "MSTORE"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8318": {
      "op": "ADD"
    },
    "8319": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "8322": {
      "op": "JUMP"
    },
    "8323": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8651,
        8704
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8324": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8728,
        8735
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8325": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8718,
        8725
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8326": {
      "branch": 113,
      "fn": "Willer.releaseERC20",
      "offset": [
        8718,
        8735
      ],
      "op": "LT",
      "path": "11"
    },
    "8327": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8714,
        8779
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8328": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8714,
        8779
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x208F"
    },
    "8331": {
      "branch": 113,
      "fn": "Willer.releaseERC20",
      "offset": [
        8714,
        8779
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8332": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8761,
        8768
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 63
    },
    "8333": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8751,
        8768
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "8334": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8751,
        8768
      ],
      "op": "POP",
      "path": "11"
    },
    "8335": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8714,
        8779
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8336": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8806,
        8812
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8338": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8788,
        9515
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8345": {
      "op": "SHL"
    },
    "8346": {
      "op": "SUB"
    },
    "8347": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8348": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "AND",
      "path": "11"
    },
    "8349": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8351": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8352": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8353": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8354": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8848
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "8356": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8358": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8359": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8361": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8362": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8858
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8363": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8834,
        8879
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8364": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8830,
        8879
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8365": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8830,
        8879
      ],
      "op": "LT",
      "path": "11"
    },
    "8366": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8788,
        9515
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8367": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8788,
        9515
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x569"
    },
    "8370": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8788,
        9515
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8377": {
      "op": "SHL"
    },
    "8378": {
      "op": "SUB"
    },
    "8379": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 64
    },
    "8380": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "AND",
      "path": "11"
    },
    "8381": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8383": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8384": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8385": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8386": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8977
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "8388": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8390": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8391": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8393": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8394": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8987
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8395": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8994
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8397": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8994
      ],
      "op": "ADD",
      "path": "11"
    },
    "8398": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8399": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8400": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8931,
        9063
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2114"
    },
    "8403": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8931,
        9063
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8404": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8994
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8405": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8995,
        8996
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8406": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8995,
        8996
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8407": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8408": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "LT",
      "path": "11"
    },
    "8409": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20E4"
    },
    "8412": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8413": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x20E4"
    },
    "8416": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "8419": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        8963,
        8997
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8420": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8421": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8423": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8424": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8425": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8426": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8428": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8429": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8430": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8431": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8432": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8433": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "ADD",
      "path": "11"
    },
    "8434": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8439": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8441": {
      "op": "SHL"
    },
    "8442": {
      "op": "SUB"
    },
    "8443": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "DUP11",
      "path": "11"
    },
    "8444": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "AND",
      "path": "11"
    },
    "8445": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8446": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8447": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9029
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "8449": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8450": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8451": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8452": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8454": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8455": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8456": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9039
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8457": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9049
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8459": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9049
      ],
      "op": "ADD",
      "path": "11"
    },
    "8460": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9015,
        9049
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8461": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8931,
        8938
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8462": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8931,
        8938
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8463": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8963,
        8997
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8464": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8931,
        8945
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2511"
    },
    "8467": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        8931,
        9063
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8468": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8931,
        9063
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8475": {
      "op": "SHL"
    },
    "8476": {
      "op": "SUB"
    },
    "8477": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "DUP8",
      "path": "11"
    },
    "8478": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "AND",
      "path": "11"
    },
    "8479": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8481": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8482": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8483": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8484": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9160
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "8486": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8488": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8489": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8491": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8492": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9170
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8493": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9191
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8494": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8921,
        9063
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8495": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8921,
        9063
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "8496": {
      "op": "POP"
    },
    "8497": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9195
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x213C"
    },
    "8500": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9195
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8501": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9194,
        9195
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "8503": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9194,
        9195
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8504": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9195
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x331D"
    },
    "8507": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        9146,
        9195
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8508": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9146,
        9195
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8509": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9141,
        9142
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8510": {
      "branch": 114,
      "fn": "Willer.releaseERC20",
      "offset": [
        9141,
        9195
      ],
      "op": "SUB",
      "path": "11"
    },
    "8511": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9137,
        9270
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21AF"
    },
    "8514": {
      "branch": 114,
      "fn": "Willer.releaseERC20",
      "offset": [
        9137,
        9270
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8515": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 65,
      "value": "0x40"
    },
    "8517": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8518": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8525": {
      "op": "SHL"
    },
    "8526": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8527": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8534": {
      "op": "SHL"
    },
    "8535": {
      "op": "SUB"
    },
    "8536": {
      "op": "DUP8"
    },
    "8537": {
      "op": "DUP2"
    },
    "8538": {
      "op": "AND"
    },
    "8539": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8541": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8542": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "ADD",
      "path": "11"
    },
    "8543": {
      "op": "MSTORE"
    },
    "8544": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9245
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8545": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9245
      ],
      "op": "AND",
      "path": "11"
    },
    "8546": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9245
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8547": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9245
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "8552": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9245
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8553": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8555": {
      "op": "ADD"
    },
    "8556": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8558": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8560": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8561": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8562": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8563": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "SUB",
      "path": "11"
    },
    "8564": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8565": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8566": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "GAS",
      "path": "11"
    },
    "8567": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "8568": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8569": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8570": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8571": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2188"
    },
    "8574": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8575": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8576": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8578": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8579": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "8580": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8581": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8583": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "REVERT",
      "path": "11"
    },
    "8584": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8585": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "POP",
      "path": "11"
    },
    "8586": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "POP",
      "path": "11"
    },
    "8587": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "POP",
      "path": "11"
    },
    "8588": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "POP",
      "path": "11"
    },
    "8589": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8591": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8592": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8593": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8595": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "NOT",
      "path": "11"
    },
    "8596": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "8598": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8599": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "ADD",
      "path": "11"
    },
    "8600": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "AND",
      "path": "11"
    },
    "8601": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8602": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "ADD",
      "path": "11"
    },
    "8603": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8604": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8606": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8607": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "POP",
      "path": "11"
    },
    "8608": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8609": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "ADD",
      "path": "11"
    },
    "8610": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8611": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21AC"
    },
    "8614": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8615": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8616": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "8619": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        9225,
        9255
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8620": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9225,
        9255
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8621": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9215,
        9255
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "8622": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9215,
        9255
      ],
      "op": "POP",
      "path": "11"
    },
    "8623": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9137,
        9270
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8630": {
      "op": "SHL"
    },
    "8631": {
      "op": "SUB"
    },
    "8632": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 66
    },
    "8633": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "AND",
      "path": "11"
    },
    "8634": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8636": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8637": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8638": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8639": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9368
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "8641": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8643": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8644": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8646": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8647": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9378
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8648": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8649": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8650": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9434
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21FF"
    },
    "8653": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9434
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8654": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9328,
        9336
      ],
      "op": "DUP9",
      "path": "11"
    },
    "8655": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9328,
        9336
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8656": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9393,
        9394
      ],
      "op": "DUP5",
      "path": "11"
    },
    "8657": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9393,
        9394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8658": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8659": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "LT",
      "path": "11"
    },
    "8660": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21DF"
    },
    "8663": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8664": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x21DF"
    },
    "8667": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "8670": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        9354,
        9395
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8671": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8672": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8674": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8675": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8676": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8677": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8679": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8680": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8681": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8682": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "ADD",
      "path": "11"
    },
    "8683": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8690": {
      "op": "SHL"
    },
    "8691": {
      "op": "SUB"
    },
    "8692": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9310
      ],
      "op": "DUP9",
      "path": "11"
    },
    "8693": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9310
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8694": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9310
      ],
      "op": "AND",
      "path": "11"
    },
    "8695": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9310
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "8696": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9434
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8697": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9354,
        9395
      ],
      "op": "AND",
      "path": "11"
    },
    "8698": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9413,
        9420
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8699": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9310
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25C6"
    },
    "8702": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        9283,
        9434
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8703": {
      "fn": "Willer.releaseERC20",
      "offset": [
        9283,
        9434
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8704": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 67
    },
    "8705": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2209"
    },
    "8708": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8709": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "8712": {
      "fn": "Willer.releaseERC20",
      "jump": "i",
      "offset": [
        8893,
        8896
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8713": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8714": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8715": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "POP",
      "path": "11"
    },
    "8716": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8893,
        8896
      ],
      "op": "POP",
      "path": "11"
    },
    "8717": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8788,
        9515
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2092"
    },
    "8720": {
      "fn": "Willer.releaseERC20",
      "offset": [
        8788,
        9515
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8721": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10277,
        10743
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8722": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10433,
        10439
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8724": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10428,
        10661
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8725": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10445,
        10467
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8726": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10445,
        10467
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8727": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10445,
        10467
      ],
      "op": "LT",
      "path": "11"
    },
    "8728": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10428,
        10661
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8729": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10428,
        10661
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1760"
    },
    "8732": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10428,
        10661
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8739": {
      "op": "SHL"
    },
    "8740": {
      "op": "SUB"
    },
    "8741": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "DUP6",
      "path": "11",
      "statement": 68
    },
    "8742": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8743": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "AND",
      "path": "11"
    },
    "8744": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8746": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8747": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8748": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8749": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10574
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x7"
    },
    "8751": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8753": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8754": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8756": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8757": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10584
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "8758": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10604
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "8760": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10604
      ],
      "op": "ADD",
      "path": "11"
    },
    "8761": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10604
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8762": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10516
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8763": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10516
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8764": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10516
      ],
      "op": "AND",
      "path": "11"
    },
    "8765": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10516
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8766": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10516
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x42842E0E"
    },
    "8771": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10516
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8772": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10534,
        10542
      ],
      "op": "DUP9",
      "path": "11"
    },
    "8773": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10534,
        10542
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8774": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10560,
        10604
      ],
      "op": "AND",
      "path": "11"
    },
    "8775": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10633
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8776": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10633
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8777": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10634,
        10635
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8778": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8779": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8780": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "LT",
      "path": "11"
    },
    "8781": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2258"
    },
    "8784": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8785": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2258"
    },
    "8788": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "8791": {
      "fn": "Willer.releaseERC721",
      "jump": "i",
      "offset": [
        10622,
        10636
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8792": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8793": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8795": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8802": {
      "op": "SHL"
    },
    "8803": {
      "op": "SUB"
    },
    "8804": {
      "op": "NOT"
    },
    "8805": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "8807": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP9",
      "path": "11"
    },
    "8808": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8809": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "SHL",
      "path": "11"
    },
    "8810": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "AND",
      "path": "11"
    },
    "8811": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8812": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8819": {
      "op": "SHL"
    },
    "8820": {
      "op": "SUB"
    },
    "8821": {
      "op": "SWAP6"
    },
    "8822": {
      "op": "DUP7"
    },
    "8823": {
      "op": "AND"
    },
    "8824": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "8826": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP3",
      "path": "11"
    },
    "8827": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "ADD",
      "path": "11"
    },
    "8828": {
      "op": "MSTORE"
    },
    "8829": {
      "op": "SWAP5"
    },
    "8830": {
      "op": "SWAP1"
    },
    "8831": {
      "op": "SWAP4"
    },
    "8832": {
      "op": "AND"
    },
    "8833": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8835": {
      "op": "DUP6"
    },
    "8836": {
      "op": "ADD"
    },
    "8837": {
      "op": "MSTORE"
    },
    "8838": {
      "op": "POP"
    },
    "8839": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "8841": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8842": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8843": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "MUL",
      "path": "11"
    },
    "8844": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "ADD",
      "path": "11"
    },
    "8845": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10622,
        10636
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "8846": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8848": {
      "op": "DUP3"
    },
    "8849": {
      "op": "ADD"
    },
    "8850": {
      "op": "MSTORE"
    },
    "8851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8853": {
      "op": "ADD"
    },
    "8854": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8856": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8858": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8859": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8860": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP4",
      "path": "11"
    },
    "8861": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "SUB",
      "path": "11"
    },
    "8862": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8863": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8865": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP8",
      "path": "11"
    },
    "8866": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8867": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "8868": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8869": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8870": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8871": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22AF"
    },
    "8874": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8875": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8877": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8878": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "REVERT",
      "path": "11"
    },
    "8879": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8880": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "POP",
      "path": "11"
    },
    "8881": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "GAS",
      "path": "11"
    },
    "8882": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "CALL",
      "path": "11"
    },
    "8883": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8884": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8885": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8886": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22C3"
    },
    "8889": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8890": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8891": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8893": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8894": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "8895": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "8896": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8898": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "REVERT",
      "path": "11"
    },
    "8899": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8900": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "POP",
      "path": "11"
    },
    "8901": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "POP",
      "path": "11"
    },
    "8902": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "POP",
      "path": "11"
    },
    "8903": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10488,
        10650
      ],
      "op": "POP",
      "path": "11"
    },
    "8904": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 69
    },
    "8905": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8906": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22D2"
    },
    "8909": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8910": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "8913": {
      "fn": "Willer.releaseERC721",
      "jump": "i",
      "offset": [
        10469,
        10472
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8914": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8915": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8916": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "POP",
      "path": "11"
    },
    "8917": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10469,
        10472
      ],
      "op": "POP",
      "path": "11"
    },
    "8918": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10428,
        10661
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2214"
    },
    "8921": {
      "fn": "Willer.releaseERC721",
      "offset": [
        10428,
        10661
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8922": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10749,
        11184
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8923": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10903,
        10909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "8925": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10898,
        11102
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8926": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10915,
        10937
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8927": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10915,
        10937
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8928": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10915,
        10937
      ],
      "op": "LT",
      "path": "11"
    },
    "8929": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10898,
        11102
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8930": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10898,
        11102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1760"
    },
    "8933": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10898,
        11102
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8934": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11030,
        11045
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 70,
      "value": "0x6"
    },
    "8936": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11030,
        11045
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "8937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8943": {
      "op": "SHL"
    },
    "8944": {
      "op": "SUB"
    },
    "8945": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        10986
      ],
      "op": "DUP1",
      "path": "11"
    },
    "8946": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        10986
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8947": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        10986
      ],
      "op": "AND",
      "path": "11"
    },
    "8948": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        10986
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8949": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        10986
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x42842E0E"
    },
    "8954": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        10986
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8955": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11004,
        11012
      ],
      "op": "DUP9",
      "path": "11"
    },
    "8956": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11004,
        11012
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "8957": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11030,
        11045
      ],
      "op": "AND",
      "path": "11"
    },
    "8958": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11074
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8959": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11074
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8960": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11075,
        11076
      ],
      "op": "DUP7",
      "path": "11"
    },
    "8961": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8962": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8963": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "LT",
      "path": "11"
    },
    "8964": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x230F"
    },
    "8967": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "8968": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x230F"
    },
    "8971": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E39"
    },
    "8974": {
      "fn": "Willer.releaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        11063,
        11077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "8975": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "8976": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "8978": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "8979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8983": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8985": {
      "op": "SHL"
    },
    "8986": {
      "op": "SUB"
    },
    "8987": {
      "op": "NOT"
    },
    "8988": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "8990": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP9",
      "path": "11"
    },
    "8991": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "8992": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "SHL",
      "path": "11"
    },
    "8993": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "AND",
      "path": "11"
    },
    "8994": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP2",
      "path": "11"
    },
    "8995": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "8996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9002": {
      "op": "SHL"
    },
    "9003": {
      "op": "SUB"
    },
    "9004": {
      "op": "SWAP6"
    },
    "9005": {
      "op": "DUP7"
    },
    "9006": {
      "op": "AND"
    },
    "9007": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "9009": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9010": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "ADD",
      "path": "11"
    },
    "9011": {
      "op": "MSTORE"
    },
    "9012": {
      "op": "SWAP5"
    },
    "9013": {
      "op": "SWAP1"
    },
    "9014": {
      "op": "SWAP4"
    },
    "9015": {
      "op": "AND"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9018": {
      "op": "DUP6"
    },
    "9019": {
      "op": "ADD"
    },
    "9020": {
      "op": "MSTORE"
    },
    "9021": {
      "op": "POP"
    },
    "9022": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "9024": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9025": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9026": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "MUL",
      "path": "11"
    },
    "9027": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "ADD",
      "path": "11"
    },
    "9028": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        11063,
        11077
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "9029": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9031": {
      "op": "DUP3"
    },
    "9032": {
      "op": "ADD"
    },
    "9033": {
      "op": "MSTORE"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9036": {
      "op": "ADD"
    },
    "9037": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9039": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9041": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9042": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9043": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP4",
      "path": "11"
    },
    "9044": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "SUB",
      "path": "11"
    },
    "9045": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9046": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9048": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP8",
      "path": "11"
    },
    "9049": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9050": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "9051": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9052": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9053": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9054": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2366"
    },
    "9057": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9058": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9060": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9061": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "REVERT",
      "path": "11"
    },
    "9062": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9063": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "POP",
      "path": "11"
    },
    "9064": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "GAS",
      "path": "11"
    },
    "9065": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "CALL",
      "path": "11"
    },
    "9066": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9067": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9068": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9069": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x237A"
    },
    "9072": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9073": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9074": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9076": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9077": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "9078": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9079": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9081": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "REVERT",
      "path": "11"
    },
    "9082": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9083": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "POP",
      "path": "11"
    },
    "9084": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "POP",
      "path": "11"
    },
    "9085": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "POP",
      "path": "11"
    },
    "9086": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10958,
        11091
      ],
      "op": "POP",
      "path": "11"
    },
    "9087": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 71
    },
    "9088": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9089": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2389"
    },
    "9092": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9093": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E4F"
    },
    "9096": {
      "fn": "Willer.releaseERC721ToTreasury",
      "jump": "i",
      "offset": [
        10939,
        10942
      ],
      "op": "JUMP",
      "path": "11"
    },
    "9097": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9098": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9099": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "POP",
      "path": "11"
    },
    "9100": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10939,
        10942
      ],
      "op": "POP",
      "path": "11"
    },
    "9101": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10898,
        11102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x22DD"
    },
    "9104": {
      "fn": "Willer.releaseERC721ToTreasury",
      "offset": [
        10898,
        11102
      ],
      "op": "JUMP",
      "path": "11"
    },
    "9105": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7755,
        8291
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9106": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9108": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9109": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9116": {
      "op": "SHL"
    },
    "9117": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9118": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9125": {
      "op": "SHL"
    },
    "9126": {
      "op": "SUB"
    },
    "9127": {
      "op": "DUP4"
    },
    "9128": {
      "op": "DUP2"
    },
    "9129": {
      "op": "AND"
    },
    "9130": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "9132": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP4",
      "path": "11"
    },
    "9133": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "ADD",
      "path": "11"
    },
    "9134": {
      "op": "MSTORE"
    },
    "9135": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7864,
        7876
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9137": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7864,
        7876
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9138": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7899
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9139": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7899
      ],
      "op": "DUP4",
      "path": "11"
    },
    "9140": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7899
      ],
      "op": "AND",
      "path": "11"
    },
    "9141": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7899
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9142": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7899
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "9147": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7899
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9150": {
      "op": "ADD"
    },
    "9151": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "9153": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9155": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9156": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9157": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP4",
      "path": "11"
    },
    "9158": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "SUB",
      "path": "11"
    },
    "9159": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9160": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP7",
      "path": "11"
    },
    "9161": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "GAS",
      "path": "11"
    },
    "9162": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "9163": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9164": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9165": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9166": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23DB"
    },
    "9169": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9170": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9171": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9173": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9174": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "9175": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9176": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9178": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "REVERT",
      "path": "11"
    },
    "9179": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9180": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "11"
    },
    "9181": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "11"
    },
    "9182": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "11"
    },
    "9183": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "11"
    },
    "9184": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9186": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9187": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9188": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "9190": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "NOT",
      "path": "11"
    },
    "9191": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "9193": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9194": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "ADD",
      "path": "11"
    },
    "9195": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "AND",
      "path": "11"
    },
    "9196": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9197": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "ADD",
      "path": "11"
    },
    "9198": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9199": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9201": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "9202": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "POP",
      "path": "11"
    },
    "9203": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9204": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "ADD",
      "path": "11"
    },
    "9205": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9206": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x23FF"
    },
    "9209": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9210": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9211": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "9214": {
      "fn": "Willer.releaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        7879,
        7909
      ],
      "op": "JUMP",
      "path": "11"
    },
    "9215": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7879,
        7909
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9216": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7864,
        7909
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9217": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7864,
        7909
      ],
      "op": "POP",
      "path": "11"
    },
    "9218": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7919,
        7931
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9220": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7953,
        7960
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 72
    },
    "9221": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7964,
        7965
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9223": {
      "branch": 115,
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7953,
        7965
      ],
      "op": "SUB",
      "path": "11"
    },
    "9224": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2423"
    },
    "9227": {
      "branch": 115,
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9228": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9230": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9237": {
      "op": "SHL"
    },
    "9238": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9239": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "9240": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "9242": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "ADD",
      "path": "11"
    },
    "9243": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "9246": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9247": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x33BA"
    },
    "9250": {
      "fn": "Willer.releaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        7945,
        8004
      ],
      "op": "JUMP",
      "path": "11"
    },
    "9251": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        7945,
        8004
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9252": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9254": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9255": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "9260": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "9262": {
      "op": "SHL"
    },
    "9263": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9264": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9271": {
      "op": "SHL"
    },
    "9272": {
      "op": "SUB"
    },
    "9273": {
      "op": "DUP6"
    },
    "9274": {
      "op": "DUP2"
    },
    "9275": {
      "op": "AND"
    },
    "9276": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "9278": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP4",
      "path": "11"
    },
    "9279": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "ADD",
      "path": "11"
    },
    "9280": {
      "op": "MSTORE"
    },
    "9281": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8068,
        8072
      ],
      "op": "ADDRESS",
      "path": "11"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9284": {
      "op": "DUP4"
    },
    "9285": {
      "op": "ADD"
    },
    "9286": {
      "op": "MSTORE"
    },
    "9287": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8014,
        8026
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9289": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8014,
        8026
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9290": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8049
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9291": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8049
      ],
      "op": "DUP6",
      "path": "11"
    },
    "9292": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8049
      ],
      "op": "AND",
      "path": "11"
    },
    "9293": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8049
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9294": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8049
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xDD62ED3E"
    },
    "9299": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8049
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9302": {
      "op": "ADD"
    },
    "9303": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "9305": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9307": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9308": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9309": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP4",
      "path": "11"
    },
    "9310": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "SUB",
      "path": "11"
    },
    "9311": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9312": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP7",
      "path": "11"
    },
    "9313": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "GAS",
      "path": "11"
    },
    "9314": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "9315": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9316": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9317": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9318": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2473"
    },
    "9321": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9322": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9323": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9325": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9326": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "9327": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9328": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9330": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "REVERT",
      "path": "11"
    },
    "9331": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9332": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "POP",
      "path": "11"
    },
    "9333": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "POP",
      "path": "11"
    },
    "9334": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "POP",
      "path": "11"
    },
    "9335": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "POP",
      "path": "11"
    },
    "9336": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9338": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9339": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "9340": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "9342": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "NOT",
      "path": "11"
    },
    "9343": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "9345": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9346": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "ADD",
      "path": "11"
    },
    "9347": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "AND",
      "path": "11"
    },
    "9348": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9349": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "ADD",
      "path": "11"
    },
    "9350": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP1",
      "path": "11"
    },
    "9351": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9353": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "9354": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "POP",
      "path": "11"
    },
    "9355": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9356": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "ADD",
      "path": "11"
    },
    "9357": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9358": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2497"
    },
    "9361": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9362": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9363": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3304"
    },
    "9366": {
      "fn": "Willer.releaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        8029,
        8074
      ],
      "op": "JUMP",
      "path": "11"
    },
    "9367": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8029,
        8074
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9368": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8014,
        8074
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9369": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8014,
        8074
      ],
      "op": "POP",
      "path": "11"
    },
    "9370": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8092,
        8099
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 73
    },
    "9371": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8103,
        8104
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "9373": {
      "branch": 116,
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8092,
        8104
      ],
      "op": "SUB",
      "path": "11"
    },
    "9374": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24E9"
    },
    "9377": {
      "branch": 116,
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9378": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "9380": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "9381": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9387": {
      "op": "SHL"
    },
    "9388": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9389": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "9390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9392": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "9394": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9395": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "ADD",
      "path": "11"
    },
    "9396": {
      "op": "MSTORE"
    },
    "9397": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9401": {
      "op": "DUP3"
    },
    "9402": {
      "op": "ADD"
    },
    "9403": {
      "op": "MSTORE"
    },
    "9404": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A204552433230207A65726F20616C6C6F77616E636500000000"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9439": {
      "op": "DUP3"
    },
    "9440": {
      "op": "ADD"
    },
    "9441": {
      "op": "MSTORE"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9444": {
      "op": "ADD"
    },
    "9445": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4C5"
    },
    "9448": {
      "op": "JUMP"
    },
    "9449": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8084,
        8137
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9450": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8161,
        8168
      ],
      "op": "DUP3",
      "path": "11"
    },
    "9451": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8151,
        8158
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9452": {
      "branch": 117,
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8151,
        8168
      ],
      "op": "LT",
      "path": "11"
    },
    "9453": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8147,
        8212
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "9454": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8147,
        8212
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24F5"
    },
    "9457": {
      "branch": 117,
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8147,
        8212
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "9458": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8194,
        8201
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 74
    },
    "9459": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8184,
        8201
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "9460": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8184,
        8201
      ],
      "op": "POP",
      "path": "11"
    },
    "9461": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8147,
        8212
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "9462": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8259,
        8274
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 75,
      "value": "0x6"
    },
    "9464": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8259,
        8274
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "9465": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8284
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1760"
    },
    "9468": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8284
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "9469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9475": {
      "op": "SHL"
    },
    "9476": {
      "op": "SUB"
    },
    "9477": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8248
      ],
      "op": "DUP7",
      "path": "11"
    },
    "9478": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8248
      ],
      "op": "DUP2",
      "path": "11"
    },
    "9479": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8248
      ],
      "op": "AND",
      "path": "11"
    },
    "9480": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8248
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9481": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8249,
        8257
      ],
      "op": "DUP9",
      "path": "11"
    },
    "9482": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8249,
        8257
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "9483": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8259,
        8274
      ],
      "op": "AND",
      "path": "11"
    },
    "9484": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8276,
        8283
      ],
      "op": "DUP7",
      "path": "11"
    },
    "9485": {
      "fn": "Willer.releaseERC20ToTreasury",
      "offset": [
        8221,
        8248
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x25C6"
    },
    "9488": {
      "fn": "Willer.releaseERC20ToTreasury",
      "jump": "i",
      "offset": [
        8221,
        8284
      ],
      "op": "JUMP",
      "path": "11"
    },
    "9489": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9490": {
      "fn": "Math.mulDiv",
      "offset": [
        1779,
        1793
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9492": {
      "fn": "Math.mulDiv",
      "offset": [
        1779,
        1793
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9493": {
      "fn": "Math.mulDiv",
      "offset": [
        1779,
        1793
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9496": {
      "op": "NOT"
    },
    "9497": {
      "fn": "Math.mulDiv",
      "offset": [
        2316,
        2317
      ],
      "op": "DUP6",
      "path": "10"
    },
    "9498": {
      "fn": "Math.mulDiv",
      "offset": [
        2313,
        2314
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9499": {
      "fn": "Math.mulDiv",
      "offset": [
        2306,
        2326
      ],
      "op": "MULMOD",
      "path": "10"
    },
    "9500": {
      "fn": "Math.mulDiv",
      "offset": [
        2359,
        2360
      ],
      "op": "DUP6",
      "path": "10"
    },
    "9501": {
      "fn": "Math.mulDiv",
      "offset": [
        2356,
        2357
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9502": {
      "fn": "Math.mulDiv",
      "offset": [
        2352,
        2361
      ],
      "op": "MUL",
      "path": "10"
    },
    "9503": {
      "fn": "Math.mulDiv",
      "offset": [
        2343,
        2361
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9504": {
      "fn": "Math.mulDiv",
      "offset": [
        2343,
        2361
      ],
      "op": "POP",
      "path": "10"
    },
    "9505": {
      "fn": "Math.mulDiv",
      "offset": [
        2414,
        2419
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9506": {
      "fn": "Math.mulDiv",
      "offset": [
        2410,
        2412
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9507": {
      "fn": "Math.mulDiv",
      "offset": [
        2407,
        2420
      ],
      "op": "LT",
      "path": "10"
    },
    "9508": {
      "fn": "Math.mulDiv",
      "offset": [
        2399,
        2404
      ],
      "op": "DUP4",
      "path": "10"
    },
    "9509": {
      "fn": "Math.mulDiv",
      "offset": [
        2395,
        2397
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9510": {
      "fn": "Math.mulDiv",
      "offset": [
        2391,
        2405
      ],
      "op": "SUB",
      "path": "10"
    },
    "9511": {
      "fn": "Math.mulDiv",
      "offset": [
        2387,
        2421
      ],
      "op": "SUB",
      "path": "10"
    },
    "9512": {
      "fn": "Math.mulDiv",
      "offset": [
        2378,
        2421
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9513": {
      "fn": "Math.mulDiv",
      "offset": [
        2378,
        2421
      ],
      "op": "POP",
      "path": "10"
    },
    "9514": {
      "fn": "Math.mulDiv",
      "offset": [
        2378,
        2421
      ],
      "op": "POP",
      "path": "10"
    },
    "9515": {
      "fn": "Math.mulDiv",
      "offset": [
        2516,
        2521
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9516": {
      "fn": "Math.mulDiv",
      "offset": [
        2525,
        2526
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9518": {
      "branch": 122,
      "fn": "Math.mulDiv",
      "offset": [
        2516,
        2526
      ],
      "op": "SUB",
      "path": "10"
    },
    "9519": {
      "fn": "Math.mulDiv",
      "offset": [
        2512,
        2587
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x254B"
    },
    "9522": {
      "branch": 122,
      "fn": "Math.mulDiv",
      "offset": [
        2512,
        2587
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9523": {
      "fn": "Math.mulDiv",
      "offset": [
        2561,
        2572
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 76
    },
    "9524": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2558
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9525": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9526": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2541"
    },
    "9529": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9530": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2541"
    },
    "9533": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33FC"
    },
    "9536": {
      "fn": "Math.mulDiv",
      "jump": "i",
      "offset": [
        2553,
        2572
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9537": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9538": {
      "fn": "Math.mulDiv",
      "offset": [
        2553,
        2572
      ],
      "op": "DIV",
      "path": "10"
    },
    "9539": {
      "fn": "Math.mulDiv",
      "offset": [
        2546,
        2572
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9540": {
      "fn": "Math.mulDiv",
      "offset": [
        2546,
        2572
      ],
      "op": "POP",
      "path": "10"
    },
    "9541": {
      "fn": "Math.mulDiv",
      "offset": [
        2546,
        2572
      ],
      "op": "POP",
      "path": "10"
    },
    "9542": {
      "fn": "Math.mulDiv",
      "offset": [
        2546,
        2572
      ],
      "op": "POP",
      "path": "10"
    },
    "9543": {
      "fn": "Math.mulDiv",
      "offset": [
        2546,
        2572
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x25BF"
    },
    "9546": {
      "fn": "Math.mulDiv",
      "offset": [
        2546,
        2572
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9547": {
      "fn": "Math.mulDiv",
      "offset": [
        2512,
        2587
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9548": {
      "fn": "Math.mulDiv",
      "offset": [
        2711,
        2716
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 77
    },
    "9549": {
      "fn": "Math.mulDiv",
      "offset": [
        2697,
        2708
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9550": {
      "branch": 123,
      "fn": "Math.mulDiv",
      "offset": [
        2697,
        2716
      ],
      "op": "GT",
      "path": "10"
    },
    "9551": {
      "fn": "Math.mulDiv",
      "offset": [
        2689,
        2717
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2557"
    },
    "9554": {
      "branch": 123,
      "fn": "Math.mulDiv",
      "offset": [
        2689,
        2717
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "9555": {
      "fn": "Math.mulDiv",
      "offset": [
        2689,
        2717
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9557": {
      "fn": "Math.mulDiv",
      "offset": [
        2689,
        2717
      ],
      "op": "DUP1",
      "path": "10"
    },
    "9558": {
      "fn": "Math.mulDiv",
      "offset": [
        2689,
        2717
      ],
      "op": "REVERT",
      "path": "10"
    },
    "9559": {
      "fn": "Math.mulDiv",
      "offset": [
        2689,
        2717
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9560": {
      "fn": "Math.mulDiv",
      "offset": [
        2973,
        2990
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9562": {
      "fn": "Math.mulDiv",
      "offset": [
        3108,
        3119
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9563": {
      "fn": "Math.mulDiv",
      "offset": [
        3105,
        3106
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9564": {
      "fn": "Math.mulDiv",
      "offset": [
        3102,
        3103
      ],
      "op": "DUP9",
      "path": "10"
    },
    "9565": {
      "fn": "Math.mulDiv",
      "offset": [
        3095,
        3120
      ],
      "op": "MULMOD",
      "path": "10"
    },
    "9566": {
      "fn": "Math.mulDiv",
      "offset": [
        3641,
        3653
      ],
      "op": "DUP6",
      "path": "10"
    },
    "9567": {
      "fn": "Math.mulDiv",
      "offset": [
        3641,
        3653
      ],
      "op": "NOT",
      "path": "10"
    },
    "9568": {
      "fn": "Math.mulDiv",
      "offset": [
        3656,
        3657
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "9570": {
      "fn": "Math.mulDiv",
      "offset": [
        3641,
        3657
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9571": {
      "fn": "Math.mulDiv",
      "offset": [
        3641,
        3657
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9572": {
      "fn": "Math.mulDiv",
      "offset": [
        3641,
        3657
      ],
      "op": "ADD",
      "path": "10"
    },
    "9573": {
      "fn": "Math.mulDiv",
      "offset": [
        3626,
        3658
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9574": {
      "fn": "Math.mulDiv",
      "offset": [
        3626,
        3658
      ],
      "op": "AND",
      "path": "10"
    },
    "9575": {
      "fn": "Math.mulDiv",
      "offset": [
        3761,
        3783
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "9576": {
      "fn": "Math.mulDiv",
      "offset": [
        3761,
        3783
      ],
      "op": "DUP8",
      "path": "10"
    },
    "9577": {
      "fn": "Math.mulDiv",
      "offset": [
        3761,
        3783
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9578": {
      "fn": "Math.mulDiv",
      "offset": [
        3761,
        3783
      ],
      "op": "DIV",
      "path": "10"
    },
    "9579": {
      "fn": "Math.mulDiv",
      "offset": [
        3761,
        3783
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "9580": {
      "fn": "Math.mulDiv",
      "offset": [
        3269,
        3290
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9581": {
      "fn": "Math.mulDiv",
      "offset": [
        3269,
        3290
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9582": {
      "fn": "Math.mulDiv",
      "offset": [
        3269,
        3290
      ],
      "op": "SUB",
      "path": "10"
    },
    "9583": {
      "fn": "Math.mulDiv",
      "offset": [
        3859,
        3875
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9584": {
      "fn": "Math.mulDiv",
      "offset": [
        3859,
        3875
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9585": {
      "fn": "Math.mulDiv",
      "offset": [
        3859,
        3875
      ],
      "op": "DIV",
      "path": "10"
    },
    "9586": {
      "fn": "Math.mulDiv",
      "offset": [
        3222,
        3242
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "9587": {
      "fn": "Math.mulDiv",
      "offset": [
        3222,
        3242
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9588": {
      "fn": "Math.mulDiv",
      "offset": [
        3222,
        3242
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9589": {
      "fn": "Math.mulDiv",
      "offset": [
        3222,
        3242
      ],
      "op": "GT",
      "path": "10"
    },
    "9590": {
      "fn": "Math.mulDiv",
      "offset": [
        3211,
        3243
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9591": {
      "fn": "Math.mulDiv",
      "offset": [
        3211,
        3243
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9592": {
      "fn": "Math.mulDiv",
      "offset": [
        3211,
        3243
      ],
      "op": "SUB",
      "path": "10"
    },
    "9593": {
      "fn": "Math.mulDiv",
      "offset": [
        3611,
        3623
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "9595": {
      "fn": "Math.mulDiv",
      "offset": [
        4006,
        4018
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9596": {
      "fn": "Math.mulDiv",
      "offset": [
        4006,
        4018
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9597": {
      "fn": "Math.mulDiv",
      "offset": [
        4006,
        4018
      ],
      "op": "SUB",
      "path": "10"
    },
    "9598": {
      "fn": "Math.mulDiv",
      "offset": [
        4002,
        4025
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9599": {
      "fn": "Math.mulDiv",
      "offset": [
        4002,
        4025
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9600": {
      "fn": "Math.mulDiv",
      "offset": [
        4002,
        4025
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9601": {
      "fn": "Math.mulDiv",
      "offset": [
        4002,
        4025
      ],
      "op": "DIV",
      "path": "10"
    },
    "9602": {
      "fn": "Math.mulDiv",
      "offset": [
        3998,
        4029
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9603": {
      "fn": "Math.mulDiv",
      "offset": [
        3998,
        4029
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9604": {
      "fn": "Math.mulDiv",
      "offset": [
        3998,
        4029
      ],
      "op": "ADD",
      "path": "10"
    },
    "9605": {
      "fn": "Math.mulDiv",
      "offset": [
        4118,
        4130
      ],
      "op": "SWAP2",
      "path": "10",
      "statement": 78
    },
    "9606": {
      "fn": "Math.mulDiv",
      "offset": [
        4118,
        4130
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9607": {
      "fn": "Math.mulDiv",
      "offset": [
        4118,
        4130
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9608": {
      "fn": "Math.mulDiv",
      "offset": [
        4118,
        4130
      ],
      "op": "MUL",
      "path": "10"
    },
    "9609": {
      "fn": "Math.mulDiv",
      "offset": [
        4109,
        4130
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9610": {
      "fn": "Math.mulDiv",
      "offset": [
        4109,
        4130
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9611": {
      "fn": "Math.mulDiv",
      "offset": [
        4109,
        4130
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9612": {
      "fn": "Math.mulDiv",
      "offset": [
        4109,
        4130
      ],
      "op": "OR",
      "path": "10"
    },
    "9613": {
      "fn": "Math.mulDiv",
      "offset": [
        4467,
        4468
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3"
    },
    "9615": {
      "fn": "Math.mulDiv",
      "offset": [
        4467,
        4482
      ],
      "op": "DUP5",
      "path": "10"
    },
    "9616": {
      "fn": "Math.mulDiv",
      "offset": [
        4467,
        4482
      ],
      "op": "MUL",
      "path": "10"
    },
    "9617": {
      "fn": "Math.mulDiv",
      "offset": [
        4486,
        4487
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "9619": {
      "fn": "Math.mulDiv",
      "offset": [
        4466,
        4487
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9620": {
      "fn": "Math.mulDiv",
      "offset": [
        4466,
        4487
      ],
      "op": "DUP2",
      "path": "10"
    },
    "9621": {
      "fn": "Math.mulDiv",
      "offset": [
        4466,
        4487
      ],
      "op": "XOR",
      "path": "10"
    },
    "9622": {
      "fn": "Math.mulDiv",
      "offset": [
        4719,
        4740
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 79
    },
    "9623": {
      "fn": "Math.mulDiv",
      "offset": [
        4719,
        4740
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9624": {
      "fn": "Math.mulDiv",
      "offset": [
        4719,
        4740
      ],
      "op": "MUL",
      "path": "10"
    },
    "9625": {
      "fn": "Math.mulDiv",
      "offset": [
        4715,
        4740
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9626": {
      "fn": "Math.mulDiv",
      "offset": [
        4715,
        4740
      ],
      "op": "SUB",
      "path": "10"
    },
    "9627": {
      "fn": "Math.mulDiv",
      "offset": [
        4704,
        4740
      ],
      "op": "MUL",
      "path": "10"
    },
    "9628": {
      "fn": "Math.mulDiv",
      "offset": [
        4788,
        4809
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 80
    },
    "9629": {
      "fn": "Math.mulDiv",
      "offset": [
        4788,
        4809
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9630": {
      "fn": "Math.mulDiv",
      "offset": [
        4788,
        4809
      ],
      "op": "MUL",
      "path": "10"
    },
    "9631": {
      "fn": "Math.mulDiv",
      "offset": [
        4784,
        4809
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9632": {
      "fn": "Math.mulDiv",
      "offset": [
        4784,
        4809
      ],
      "op": "SUB",
      "path": "10"
    },
    "9633": {
      "fn": "Math.mulDiv",
      "offset": [
        4773,
        4809
      ],
      "op": "MUL",
      "path": "10"
    },
    "9634": {
      "fn": "Math.mulDiv",
      "offset": [
        4858,
        4879
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 81
    },
    "9635": {
      "fn": "Math.mulDiv",
      "offset": [
        4858,
        4879
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9636": {
      "fn": "Math.mulDiv",
      "offset": [
        4858,
        4879
      ],
      "op": "MUL",
      "path": "10"
    },
    "9637": {
      "fn": "Math.mulDiv",
      "offset": [
        4854,
        4879
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9638": {
      "fn": "Math.mulDiv",
      "offset": [
        4854,
        4879
      ],
      "op": "SUB",
      "path": "10"
    },
    "9639": {
      "fn": "Math.mulDiv",
      "offset": [
        4843,
        4879
      ],
      "op": "MUL",
      "path": "10"
    },
    "9640": {
      "fn": "Math.mulDiv",
      "offset": [
        4928,
        4949
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 82
    },
    "9641": {
      "fn": "Math.mulDiv",
      "offset": [
        4928,
        4949
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9642": {
      "fn": "Math.mulDiv",
      "offset": [
        4928,
        4949
      ],
      "op": "MUL",
      "path": "10"
    },
    "9643": {
      "fn": "Math.mulDiv",
      "offset": [
        4924,
        4949
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9644": {
      "fn": "Math.mulDiv",
      "offset": [
        4924,
        4949
      ],
      "op": "SUB",
      "path": "10"
    },
    "9645": {
      "fn": "Math.mulDiv",
      "offset": [
        4913,
        4949
      ],
      "op": "MUL",
      "path": "10"
    },
    "9646": {
      "fn": "Math.mulDiv",
      "offset": [
        4998,
        5019
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 83
    },
    "9647": {
      "fn": "Math.mulDiv",
      "offset": [
        4998,
        5019
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9648": {
      "fn": "Math.mulDiv",
      "offset": [
        4998,
        5019
      ],
      "op": "MUL",
      "path": "10"
    },
    "9649": {
      "fn": "Math.mulDiv",
      "offset": [
        4994,
        5019
      ],
      "op": "DUP3",
      "path": "10"
    },
    "9650": {
      "fn": "Math.mulDiv",
      "offset": [
        4994,
        5019
      ],
      "op": "SUB",
      "path": "10"
    },
    "9651": {
      "fn": "Math.mulDiv",
      "offset": [
        4983,
        5019
      ],
      "op": "MUL",
      "path": "10"
    },
    "9652": {
      "fn": "Math.mulDiv",
      "offset": [
        5069,
        5090
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 84
    },
    "9653": {
      "fn": "Math.mulDiv",
      "offset": [
        5069,
        5090
      ],
      "op": "DUP7",
      "path": "10"
    },
    "9654": {
      "fn": "Math.mulDiv",
      "offset": [
        5069,
        5090
      ],
      "op": "MUL",
      "path": "10"
    },
    "9655": {
      "fn": "Math.mulDiv",
      "offset": [
        5065,
        5090
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "9656": {
      "fn": "Math.mulDiv",
      "offset": [
        5065,
        5090
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9657": {
      "fn": "Math.mulDiv",
      "offset": [
        5065,
        5090
      ],
      "op": "SUB",
      "path": "10"
    },
    "9658": {
      "fn": "Math.mulDiv",
      "offset": [
        5054,
        5090
      ],
      "op": "MUL",
      "path": "10"
    },
    "9659": {
      "fn": "Math.mulDiv",
      "offset": [
        5533,
        5548
      ],
      "op": "MUL",
      "path": "10",
      "statement": 85
    },
    "9660": {
      "fn": "Math.mulDiv",
      "offset": [
        5533,
        5548
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "9661": {
      "op": "POP"
    },
    "9662": {
      "op": "POP"
    },
    "9663": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "9664": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "9665": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "9666": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "POP",
      "path": "10"
    },
    "9667": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "POP",
      "path": "10"
    },
    "9668": {
      "fn": "Math.mulDiv",
      "offset": [
        1667,
        5592
      ],
      "op": "POP",
      "path": "10"
    },
    "9669": {
      "fn": "Math.mulDiv",
      "jump": "o",
      "offset": [
        1667,
        5592
      ],
      "op": "JUMP",
      "path": "10"
    },
    "9670": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9671": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 86,
      "value": "0x40"
    },
    "9673": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9674": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9681": {
      "op": "SHL"
    },
    "9682": {
      "op": "SUB"
    },
    "9683": {
      "op": "DUP6"
    },
    "9684": {
      "op": "DUP2"
    },
    "9685": {
      "op": "AND"
    },
    "9686": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "9688": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9689": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "5"
    },
    "9690": {
      "op": "MSTORE"
    },
    "9691": {
      "op": "DUP5"
    },
    "9692": {
      "op": "AND"
    },
    "9693": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9695": {
      "op": "DUP3"
    },
    "9696": {
      "op": "ADD"
    },
    "9697": {
      "op": "MSTORE"
    },
    "9698": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9700": {
      "op": "DUP1"
    },
    "9701": {
      "op": "DUP3"
    },
    "9702": {
      "op": "ADD"
    },
    "9703": {
      "op": "DUP5"
    },
    "9704": {
      "op": "SWAP1"
    },
    "9705": {
      "op": "MSTORE"
    },
    "9706": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9707": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9708": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9709": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP4",
      "path": "5"
    },
    "9710": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SUB",
      "path": "5"
    },
    "9711": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9712": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9713": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "5"
    },
    "9714": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9715": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9716": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9718": {
      "op": "SWAP1"
    },
    "9719": {
      "op": "SWAP2"
    },
    "9720": {
      "op": "ADD"
    },
    "9721": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9722": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9723": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9724": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9726": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9727": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "ADD",
      "path": "5"
    },
    "9728": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9729": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9734": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9736": {
      "op": "SHL"
    },
    "9737": {
      "op": "SUB"
    },
    "9738": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "AND",
      "path": "5"
    },
    "9739": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9746": {
      "op": "SHL"
    },
    "9747": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "OR",
      "path": "5"
    },
    "9748": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9749": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1139,
        1207
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9750": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2620"
    },
    "9753": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9754": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9755": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1132,
        1137
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9756": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1131
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2626"
    },
    "9759": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        1112,
        1208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9760": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        1112,
        1208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9761": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "POP",
      "path": "5"
    },
    "9762": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "POP",
      "path": "5"
    },
    "9763": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "POP",
      "path": "5"
    },
    "9764": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        974,
        1215
      ],
      "op": "POP",
      "path": "5"
    },
    "9765": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        974,
        1215
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9766": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9767": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4189
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "9769": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x267B"
    },
    "9772": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4220,
        4224
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9773": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9775": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9776": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9777": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9779": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "5"
    },
    "9780": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9782": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9783": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9784": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9786": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9787": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9788": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9790": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "ADD",
      "path": "5"
    },
    "9791": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "9824": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9825": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9826": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "POP",
      "path": "5"
    },
    "9827": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4200,
        4205
      ],
      "op": "DUP6",
      "path": "5"
    },
    "9828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9834": {
      "op": "SHL"
    },
    "9835": {
      "op": "SUB"
    },
    "9836": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "AND",
      "path": "5"
    },
    "9837": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26FD"
    },
    "9840": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9841": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "9842": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9843": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9844": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "9849": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "AND",
      "path": "5"
    },
    "9850": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9851": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4192,
        4261
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9852": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9853": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4292
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4166,
        4261
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9856": {
      "op": "POP"
    },
    "9857": {
      "branch": 127,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4275,
        4296
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "9858": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F8"
    },
    "9861": {
      "branch": 127,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4271,
        4447
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9862": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4370,
        4380
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 87
    },
    "9863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP1",
      "path": "5"
    },
    "9864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "9866": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "5"
    },
    "9867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9869": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "ADD",
      "path": "5"
    },
    "9871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2699"
    },
    "9875": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "9876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "9877": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3412"
    },
    "9880": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9881": {
      "branch": 128,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4359,
        4389
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9882": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26F8"
    },
    "9885": {
      "branch": 128,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "9886": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "9888": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "9889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9895": {
      "op": "SHL"
    },
    "9896": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP2",
      "path": "5"
    },
    "9897": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "9898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9900": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "9902": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "DUP3",
      "path": "5"
    },
    "9903": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "ADD",
      "path": "5"
    },
    "9904": {
      "op": "MSTORE"
    },
    "9905": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "9907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9909": {
      "op": "DUP3"
    },
    "9910": {
      "op": "ADD"
    },
    "9911": {
      "op": "MSTORE"
    },
    "9912": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9947": {
      "op": "DUP3"
    },
    "9948": {
      "op": "ADD"
    },
    "9949": {
      "op": "MSTORE"
    },
    "9950": {
      "op": "PUSH10",
      "value": "0x1BDD081CDD58D8D95959"
    },
    "9961": {
      "op": "PUSH1",
      "value": "0xB2"
    },
    "9963": {
      "op": "SHL"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9966": {
      "op": "DUP3"
    },
    "9967": {
      "op": "ADD"
    },
    "9968": {
      "op": "MSTORE"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9971": {
      "op": "ADD"
    },
    "9972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C5"
    },
    "9975": {
      "op": "JUMP"
    },
    "9976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        4351,
        4436
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "9977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3817,
        4453
      ],
      "op": "POP",
      "path": "5"
    },
    "9978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "POP",
      "path": "5"
    },
    "9979": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3747,
        4453
      ],
      "op": "POP",
      "path": "5"
    },
    "9980": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "o",
      "offset": [
        3747,
        4453
      ],
      "op": "JUMP",
      "path": "5"
    },
    "9981": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9982": {
      "fn": "Address.functionCall",
      "offset": [
        4006,
        4018
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "9984": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 88,
      "value": "0x270C"
    },
    "9987": {
      "fn": "Address.functionCall",
      "offset": [
        4059,
        4065
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9988": {
      "fn": "Address.functionCall",
      "offset": [
        4067,
        4071
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9989": {
      "fn": "Address.functionCall",
      "offset": [
        4073,
        4074
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9991": {
      "fn": "Address.functionCall",
      "offset": [
        4076,
        4088
      ],
      "op": "DUP6",
      "path": "7"
    },
    "9992": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2714"
    },
    "9995": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4037,
        4089
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9996": {
      "fn": "Address.functionCall",
      "offset": [
        4037,
        4089
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9997": {
      "fn": "Address.functionCall",
      "offset": [
        4030,
        4089
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "9998": {
      "fn": "Address.functionCall",
      "offset": [
        3873,
        4096
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "9999": {
      "op": "POP"
    },
    "10000": {
      "op": "POP"
    },
    "10001": {
      "op": "POP"
    },
    "10002": {
      "op": "POP"
    },
    "10003": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3873,
        4096
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10004": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10005": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5125,
        5137
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "10007": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5182,
        5187
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 89
    },
    "10008": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5178
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "10009": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5187
      ],
      "op": "LT",
      "path": "7"
    },
    "10010": {
      "branch": 118,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5157,
        5187
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10011": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2775"
    },
    "10014": {
      "branch": 118,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10015": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10017": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10024": {
      "op": "SHL"
    },
    "10025": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10026": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10027": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10029": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10031": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10032": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "ADD",
      "path": "7"
    },
    "10033": {
      "op": "MSTORE"
    },
    "10034": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10038": {
      "op": "DUP3"
    },
    "10039": {
      "op": "ADD"
    },
    "10040": {
      "op": "MSTORE"
    },
    "10041": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10076": {
      "op": "DUP3"
    },
    "10077": {
      "op": "ADD"
    },
    "10078": {
      "op": "MSTORE"
    },
    "10079": {
      "op": "PUSH6",
      "value": "0x1C8818D85B1B"
    },
    "10086": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "10088": {
      "op": "SHL"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10091": {
      "op": "DUP3"
    },
    "10092": {
      "op": "ADD"
    },
    "10093": {
      "op": "MSTORE"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "10096": {
      "op": "ADD"
    },
    "10097": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C5"
    },
    "10100": {
      "op": "JUMP"
    },
    "10101": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5149,
        5230
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10102": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5241,
        5253
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10104": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5255,
        5278
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10105": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5288
      ],
      "op": "DUP7",
      "path": "7"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10112": {
      "op": "SHL"
    },
    "10113": {
      "op": "SUB"
    },
    "10114": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5293
      ],
      "op": "AND",
      "path": "7"
    },
    "10115": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5301,
        5306
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10116": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5308,
        5312
      ],
      "op": "DUP8",
      "path": "7"
    },
    "10117": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10119": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10120": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2791"
    },
    "10123": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10124": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10125": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3434"
    },
    "10128": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10129": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10130": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10132": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10134": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10135": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10136": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10137": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SUB",
      "path": "7"
    },
    "10138": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10139": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP6",
      "path": "7"
    },
    "10140": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP8",
      "path": "7"
    },
    "10141": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "GAS",
      "path": "7"
    },
    "10142": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "CALL",
      "path": "7"
    },
    "10143": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "10144": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10147": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10151": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "EQ",
      "path": "7"
    },
    "10153": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27CE"
    },
    "10156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10157": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10160": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10161": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10162": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "10164": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "NOT",
      "path": "7"
    },
    "10165": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "10167": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10168": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "7"
    },
    "10169": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "AND",
      "path": "7"
    },
    "10170": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10171": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "7"
    },
    "10172": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10174": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10175": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10176": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10177": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10178": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "10179": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10181": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10183": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "DUP5",
      "path": "7"
    },
    "10184": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "ADD",
      "path": "7"
    },
    "10185": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "10186": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27D3"
    },
    "10189": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10190": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10191": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "10193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10194": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10195": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5282,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10197": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10200": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5240,
        5313
      ],
      "op": "POP",
      "path": "7"
    },
    "10201": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 90,
      "value": "0x27E4"
    },
    "10204": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5357,
        5363
      ],
      "op": "DUP8",
      "path": "7"
    },
    "10205": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5365,
        5372
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10206": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5374,
        5384
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10207": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5386,
        5398
      ],
      "op": "DUP8",
      "path": "7"
    },
    "10208": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5356
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27EF"
    },
    "10211": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10212": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5330,
        5399
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10213": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5323,
        5399
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "10214": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4960,
        5406
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "10215": {
      "op": "POP"
    },
    "10216": {
      "op": "POP"
    },
    "10217": {
      "op": "POP"
    },
    "10218": {
      "op": "POP"
    },
    "10219": {
      "op": "POP"
    },
    "10220": {
      "op": "POP"
    },
    "10221": {
      "op": "POP"
    },
    "10222": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4960,
        5406
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10223": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7466,
        8094
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10224": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7646,
        7658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "10226": {
      "branch": 119,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7674,
        7681
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10227": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10228": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x285E"
    },
    "10231": {
      "branch": 119,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10232": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7711
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10233": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7718
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10234": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7722,
        7723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "10236": {
      "branch": 120,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7701,
        7723
      ],
      "op": "SUB",
      "path": "7"
    },
    "10237": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2857"
    },
    "10240": {
      "branch": 120,
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7697,
        7983
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10247": {
      "op": "SHL"
    },
    "10248": {
      "op": "SUB"
    },
    "10249": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 91
    },
    "10250": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "7"
    },
    "10251": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "10252": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 92,
      "value": "0x2857"
    },
    "10255": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10256": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10258": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10265": {
      "op": "SHL"
    },
    "10266": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10267": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10270": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10272": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "DUP3",
      "path": "7"
    },
    "10273": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "ADD",
      "path": "7"
    },
    "10274": {
      "op": "MSTORE"
    },
    "10275": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "10277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10279": {
      "op": "DUP3"
    },
    "10280": {
      "op": "ADD"
    },
    "10281": {
      "op": "MSTORE"
    },
    "10282": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "10315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10317": {
      "op": "DUP3"
    },
    "10318": {
      "op": "ADD"
    },
    "10319": {
      "op": "MSTORE"
    },
    "10320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10322": {
      "op": "ADD"
    },
    "10323": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C5"
    },
    "10326": {
      "op": "JUMP"
    },
    "10327": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7908,
        7968
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10328": {
      "op": "POP"
    },
    "10329": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8003,
        8013
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 93
    },
    "10330": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x270C"
    },
    "10333": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7996,
        8013
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10334": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        7670,
        8088
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10335": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8044,
        8077
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 94,
      "value": "0x270C"
    },
    "10338": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8052,
        8062
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10339": {
      "fn": "Address.verifyCallResultFromTarget",
      "offset": [
        8064,
        8076
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10340": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10341": {
      "fn": "Address._revert",
      "offset": [
        8775,
        8792
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10342": {
      "branch": 121,
      "fn": "Address._revert",
      "offset": [
        8775,
        8796
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "10343": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2873"
    },
    "10346": {
      "branch": 121,
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "10347": {
      "fn": "Address._revert",
      "offset": [
        9003,
        9013
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10348": {
      "fn": "Address._revert",
      "offset": [
        8997,
        9014
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10349": {
      "fn": "Address._revert",
      "offset": [
        9059,
        9074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "10350": {
      "fn": "Address._revert",
      "offset": [
        9046,
        9056
      ],
      "op": "DUP4",
      "path": "7"
    },
    "10351": {
      "fn": "Address._revert",
      "offset": [
        9042,
        9044
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "10353": {
      "fn": "Address._revert",
      "offset": [
        9038,
        9057
      ],
      "op": "ADD",
      "path": "7"
    },
    "10354": {
      "fn": "Address._revert",
      "offset": [
        9031,
        9075
      ],
      "op": "REVERT",
      "path": "7"
    },
    "10355": {
      "fn": "Address._revert",
      "offset": [
        8771,
        9150
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "10356": {
      "fn": "Address._revert",
      "offset": [
        9126,
        9138
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 95
    },
    "10357": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "10359": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "10360": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10364": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10366": {
      "op": "SHL"
    },
    "10367": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "DUP2",
      "path": "7"
    },
    "10368": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "10369": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "10371": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "ADD",
      "path": "7"
    },
    "10372": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C5"
    },
    "10375": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "10376": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "10377": {
      "fn": "Address._revert",
      "offset": [
        9119,
        9139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3450"
    },
    "10380": {
      "fn": "Address._revert",
      "jump": "i",
      "offset": [
        9119,
        9139
      ],
      "op": "JUMP",
      "path": "7"
    },
    "10381": {
      "op": "JUMPDEST"
    },
    "10382": {
      "op": "DUP3"
    },
    "10383": {
      "op": "DUP1"
    },
    "10384": {
      "op": "SLOAD"
    },
    "10385": {
      "op": "DUP3"
    },
    "10386": {
      "op": "DUP3"
    },
    "10387": {
      "op": "SSTORE"
    },
    "10388": {
      "op": "SWAP1"
    },
    "10389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10391": {
      "op": "MSTORE"
    },
    "10392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10396": {
      "op": "KECCAK256"
    },
    "10397": {
      "op": "SWAP1"
    },
    "10398": {
      "op": "DUP2"
    },
    "10399": {
      "op": "ADD"
    },
    "10400": {
      "op": "SWAP3"
    },
    "10401": {
      "op": "DUP3"
    },
    "10402": {
      "op": "ISZERO"
    },
    "10403": {
      "op": "PUSH2",
      "value": "0x28E0"
    },
    "10406": {
      "op": "JUMPI"
    },
    "10407": {
      "op": "SWAP2"
    },
    "10408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10410": {
      "op": "MUL"
    },
    "10411": {
      "op": "DUP3"
    },
    "10412": {
      "op": "ADD"
    },
    "10413": {
      "op": "JUMPDEST"
    },
    "10414": {
      "op": "DUP3"
    },
    "10415": {
      "op": "DUP2"
    },
    "10416": {
      "op": "GT"
    },
    "10417": {
      "op": "ISZERO"
    },
    "10418": {
      "op": "PUSH2",
      "value": "0x28E0"
    },
    "10421": {
      "op": "JUMPI"
    },
    "10422": {
      "op": "DUP2"
    },
    "10423": {
      "op": "SLOAD"
    },
    "10424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10430": {
      "op": "SHL"
    },
    "10431": {
      "op": "SUB"
    },
    "10432": {
      "op": "NOT"
    },
    "10433": {
      "op": "AND"
    },
    "10434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10440": {
      "op": "SHL"
    },
    "10441": {
      "op": "SUB"
    },
    "10442": {
      "op": "DUP5"
    },
    "10443": {
      "op": "CALLDATALOAD"
    },
    "10444": {
      "op": "AND"
    },
    "10445": {
      "op": "OR"
    },
    "10446": {
      "op": "DUP3"
    },
    "10447": {
      "op": "SSTORE"
    },
    "10448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10450": {
      "op": "SWAP1"
    },
    "10451": {
      "op": "SWAP3"
    },
    "10452": {
      "op": "ADD"
    },
    "10453": {
      "op": "SWAP2"
    },
    "10454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10456": {
      "op": "SWAP1"
    },
    "10457": {
      "op": "SWAP2"
    },
    "10458": {
      "op": "ADD"
    },
    "10459": {
      "op": "SWAP1"
    },
    "10460": {
      "op": "PUSH2",
      "value": "0x28AD"
    },
    "10463": {
      "op": "JUMP"
    },
    "10464": {
      "op": "JUMPDEST"
    },
    "10465": {
      "op": "POP"
    },
    "10466": {
      "op": "PUSH2",
      "value": "0x28EC"
    },
    "10469": {
      "op": "SWAP3"
    },
    "10470": {
      "op": "SWAP2"
    },
    "10471": {
      "op": "POP"
    },
    "10472": {
      "op": "PUSH2",
      "value": "0x292B"
    },
    "10475": {
      "jump": "i",
      "op": "JUMP"
    },
    "10476": {
      "op": "JUMPDEST"
    },
    "10477": {
      "op": "POP"
    },
    "10478": {
      "op": "SWAP1"
    },
    "10479": {
      "jump": "o",
      "op": "JUMP"
    },
    "10480": {
      "op": "JUMPDEST"
    },
    "10481": {
      "op": "DUP3"
    },
    "10482": {
      "op": "DUP1"
    },
    "10483": {
      "op": "SLOAD"
    },
    "10484": {
      "op": "DUP3"
    },
    "10485": {
      "op": "DUP3"
    },
    "10486": {
      "op": "SSTORE"
    },
    "10487": {
      "op": "SWAP1"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10490": {
      "op": "MSTORE"
    },
    "10491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10495": {
      "op": "KECCAK256"
    },
    "10496": {
      "op": "SWAP1"
    },
    "10497": {
      "op": "DUP2"
    },
    "10498": {
      "op": "ADD"
    },
    "10499": {
      "op": "SWAP3"
    },
    "10500": {
      "op": "DUP3"
    },
    "10501": {
      "op": "ISZERO"
    },
    "10502": {
      "op": "PUSH2",
      "value": "0x28E0"
    },
    "10505": {
      "op": "JUMPI"
    },
    "10506": {
      "op": "SWAP2"
    },
    "10507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10509": {
      "op": "MUL"
    },
    "10510": {
      "op": "DUP3"
    },
    "10511": {
      "op": "ADD"
    },
    "10512": {
      "op": "JUMPDEST"
    },
    "10513": {
      "op": "DUP3"
    },
    "10514": {
      "op": "DUP2"
    },
    "10515": {
      "op": "GT"
    },
    "10516": {
      "op": "ISZERO"
    },
    "10517": {
      "op": "PUSH2",
      "value": "0x28E0"
    },
    "10520": {
      "op": "JUMPI"
    },
    "10521": {
      "op": "DUP3"
    },
    "10522": {
      "op": "CALLDATALOAD"
    },
    "10523": {
      "op": "DUP3"
    },
    "10524": {
      "op": "SSTORE"
    },
    "10525": {
      "op": "SWAP2"
    },
    "10526": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10528": {
      "op": "ADD"
    },
    "10529": {
      "op": "SWAP2"
    },
    "10530": {
      "op": "SWAP1"
    },
    "10531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10533": {
      "op": "ADD"
    },
    "10534": {
      "op": "SWAP1"
    },
    "10535": {
      "op": "PUSH2",
      "value": "0x2910"
    },
    "10538": {
      "op": "JUMP"
    },
    "10539": {
      "op": "JUMPDEST"
    },
    "10540": {
      "op": "JUMPDEST"
    },
    "10541": {
      "op": "DUP1"
    },
    "10542": {
      "op": "DUP3"
    },
    "10543": {
      "op": "GT"
    },
    "10544": {
      "op": "ISZERO"
    },
    "10545": {
      "op": "PUSH2",
      "value": "0x28EC"
    },
    "10548": {
      "op": "JUMPI"
    },
    "10549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10551": {
      "op": "DUP2"
    },
    "10552": {
      "op": "SSTORE"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10555": {
      "op": "ADD"
    },
    "10556": {
      "op": "PUSH2",
      "value": "0x292C"
    },
    "10559": {
      "op": "JUMP"
    },
    "10560": {
      "op": "JUMPDEST"
    },
    "10561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10567": {
      "op": "SHL"
    },
    "10568": {
      "op": "SUB"
    },
    "10569": {
      "op": "DUP2"
    },
    "10570": {
      "op": "AND"
    },
    "10571": {
      "op": "DUP2"
    },
    "10572": {
      "op": "EQ"
    },
    "10573": {
      "op": "PUSH2",
      "value": "0x184B"
    },
    "10576": {
      "op": "JUMPI"
    },
    "10577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10579": {
      "op": "DUP1"
    },
    "10580": {
      "op": "REVERT"
    },
    "10581": {
      "op": "JUMPDEST"
    },
    "10582": {
      "op": "DUP1"
    },
    "10583": {
      "op": "CALLDATALOAD"
    },
    "10584": {
      "op": "PUSH2",
      "value": "0x2960"
    },
    "10587": {
      "op": "DUP2"
    },
    "10588": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10591": {
      "jump": "i",
      "op": "JUMP"
    },
    "10592": {
      "op": "JUMPDEST"
    },
    "10593": {
      "op": "SWAP2"
    },
    "10594": {
      "op": "SWAP1"
    },
    "10595": {
      "op": "POP"
    },
    "10596": {
      "jump": "o",
      "op": "JUMP"
    },
    "10597": {
      "op": "JUMPDEST"
    },
    "10598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10602": {
      "op": "DUP3"
    },
    "10603": {
      "op": "DUP5"
    },
    "10604": {
      "op": "SUB"
    },
    "10605": {
      "op": "SLT"
    },
    "10606": {
      "op": "ISZERO"
    },
    "10607": {
      "op": "PUSH2",
      "value": "0x2977"
    },
    "10610": {
      "op": "JUMPI"
    },
    "10611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10613": {
      "op": "DUP1"
    },
    "10614": {
      "op": "REVERT"
    },
    "10615": {
      "op": "JUMPDEST"
    },
    "10616": {
      "op": "DUP2"
    },
    "10617": {
      "op": "CALLDATALOAD"
    },
    "10618": {
      "op": "PUSH2",
      "value": "0x25BF"
    },
    "10621": {
      "op": "DUP2"
    },
    "10622": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10625": {
      "jump": "i",
      "op": "JUMP"
    },
    "10626": {
      "op": "JUMPDEST"
    },
    "10627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10629": {
      "op": "DUP1"
    },
    "10630": {
      "op": "DUP3"
    },
    "10631": {
      "op": "MSTORE"
    },
    "10632": {
      "op": "DUP3"
    },
    "10633": {
      "op": "MLOAD"
    },
    "10634": {
      "op": "DUP3"
    },
    "10635": {
      "op": "DUP3"
    },
    "10636": {
      "op": "ADD"
    },
    "10637": {
      "op": "DUP2"
    },
    "10638": {
      "op": "SWAP1"
    },
    "10639": {
      "op": "MSTORE"
    },
    "10640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10642": {
      "op": "SWAP2"
    },
    "10643": {
      "op": "SWAP1"
    },
    "10644": {
      "op": "DUP5"
    },
    "10645": {
      "op": "DUP3"
    },
    "10646": {
      "op": "ADD"
    },
    "10647": {
      "op": "SWAP1"
    },
    "10648": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10650": {
      "op": "DUP6"
    },
    "10651": {
      "op": "ADD"
    },
    "10652": {
      "op": "SWAP1"
    },
    "10653": {
      "op": "DUP5"
    },
    "10654": {
      "op": "JUMPDEST"
    },
    "10655": {
      "op": "DUP2"
    },
    "10656": {
      "op": "DUP2"
    },
    "10657": {
      "op": "LT"
    },
    "10658": {
      "op": "ISZERO"
    },
    "10659": {
      "op": "PUSH2",
      "value": "0x29C3"
    },
    "10662": {
      "op": "JUMPI"
    },
    "10663": {
      "op": "DUP4"
    },
    "10664": {
      "op": "MLOAD"
    },
    "10665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10671": {
      "op": "SHL"
    },
    "10672": {
      "op": "SUB"
    },
    "10673": {
      "op": "AND"
    },
    "10674": {
      "op": "DUP4"
    },
    "10675": {
      "op": "MSTORE"
    },
    "10676": {
      "op": "SWAP3"
    },
    "10677": {
      "op": "DUP5"
    },
    "10678": {
      "op": "ADD"
    },
    "10679": {
      "op": "SWAP3"
    },
    "10680": {
      "op": "SWAP2"
    },
    "10681": {
      "op": "DUP5"
    },
    "10682": {
      "op": "ADD"
    },
    "10683": {
      "op": "SWAP2"
    },
    "10684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10686": {
      "op": "ADD"
    },
    "10687": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "10690": {
      "op": "JUMP"
    },
    "10691": {
      "op": "JUMPDEST"
    },
    "10692": {
      "op": "POP"
    },
    "10693": {
      "op": "SWAP1"
    },
    "10694": {
      "op": "SWAP7"
    },
    "10695": {
      "op": "SWAP6"
    },
    "10696": {
      "op": "POP"
    },
    "10697": {
      "op": "POP"
    },
    "10698": {
      "op": "POP"
    },
    "10699": {
      "op": "POP"
    },
    "10700": {
      "op": "POP"
    },
    "10701": {
      "op": "POP"
    },
    "10702": {
      "jump": "o",
      "op": "JUMP"
    },
    "10703": {
      "op": "JUMPDEST"
    },
    "10704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10706": {
      "op": "DUP1"
    },
    "10707": {
      "op": "DUP4"
    },
    "10708": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10710": {
      "op": "DUP5"
    },
    "10711": {
      "op": "ADD"
    },
    "10712": {
      "op": "SLT"
    },
    "10713": {
      "op": "PUSH2",
      "value": "0x29E1"
    },
    "10716": {
      "op": "JUMPI"
    },
    "10717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10719": {
      "op": "DUP1"
    },
    "10720": {
      "op": "REVERT"
    },
    "10721": {
      "op": "JUMPDEST"
    },
    "10722": {
      "op": "POP"
    },
    "10723": {
      "op": "DUP2"
    },
    "10724": {
      "op": "CALLDATALOAD"
    },
    "10725": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10734": {
      "op": "DUP2"
    },
    "10735": {
      "op": "GT"
    },
    "10736": {
      "op": "ISZERO"
    },
    "10737": {
      "op": "PUSH2",
      "value": "0x29F9"
    },
    "10740": {
      "op": "JUMPI"
    },
    "10741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10743": {
      "op": "DUP1"
    },
    "10744": {
      "op": "REVERT"
    },
    "10745": {
      "op": "JUMPDEST"
    },
    "10746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10748": {
      "op": "DUP4"
    },
    "10749": {
      "op": "ADD"
    },
    "10750": {
      "op": "SWAP2"
    },
    "10751": {
      "op": "POP"
    },
    "10752": {
      "op": "DUP4"
    },
    "10753": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10755": {
      "op": "DUP3"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10758": {
      "op": "SHL"
    },
    "10759": {
      "op": "DUP6"
    },
    "10760": {
      "op": "ADD"
    },
    "10761": {
      "op": "ADD"
    },
    "10762": {
      "op": "GT"
    },
    "10763": {
      "op": "ISZERO"
    },
    "10764": {
      "op": "PUSH2",
      "value": "0x2A14"
    },
    "10767": {
      "op": "JUMPI"
    },
    "10768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10770": {
      "op": "DUP1"
    },
    "10771": {
      "op": "REVERT"
    },
    "10772": {
      "op": "JUMPDEST"
    },
    "10773": {
      "op": "SWAP3"
    },
    "10774": {
      "op": "POP"
    },
    "10775": {
      "op": "SWAP3"
    },
    "10776": {
      "op": "SWAP1"
    },
    "10777": {
      "op": "POP"
    },
    "10778": {
      "jump": "o",
      "op": "JUMP"
    },
    "10779": {
      "op": "JUMPDEST"
    },
    "10780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10782": {
      "op": "DUP1"
    },
    "10783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10785": {
      "op": "DUP1"
    },
    "10786": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10788": {
      "op": "DUP6"
    },
    "10789": {
      "op": "DUP8"
    },
    "10790": {
      "op": "SUB"
    },
    "10791": {
      "op": "SLT"
    },
    "10792": {
      "op": "ISZERO"
    },
    "10793": {
      "op": "PUSH2",
      "value": "0x2A31"
    },
    "10796": {
      "op": "JUMPI"
    },
    "10797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10799": {
      "op": "DUP1"
    },
    "10800": {
      "op": "REVERT"
    },
    "10801": {
      "op": "JUMPDEST"
    },
    "10802": {
      "op": "DUP5"
    },
    "10803": {
      "op": "CALLDATALOAD"
    },
    "10804": {
      "op": "PUSH2",
      "value": "0x2A3C"
    },
    "10807": {
      "op": "DUP2"
    },
    "10808": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10811": {
      "jump": "i",
      "op": "JUMP"
    },
    "10812": {
      "op": "JUMPDEST"
    },
    "10813": {
      "op": "SWAP4"
    },
    "10814": {
      "op": "POP"
    },
    "10815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10817": {
      "op": "DUP6"
    },
    "10818": {
      "op": "ADD"
    },
    "10819": {
      "op": "CALLDATALOAD"
    },
    "10820": {
      "op": "PUSH2",
      "value": "0x2A4C"
    },
    "10823": {
      "op": "DUP2"
    },
    "10824": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "10827": {
      "jump": "i",
      "op": "JUMP"
    },
    "10828": {
      "op": "JUMPDEST"
    },
    "10829": {
      "op": "SWAP3"
    },
    "10830": {
      "op": "POP"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10833": {
      "op": "DUP6"
    },
    "10834": {
      "op": "ADD"
    },
    "10835": {
      "op": "CALLDATALOAD"
    },
    "10836": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10845": {
      "op": "DUP2"
    },
    "10846": {
      "op": "GT"
    },
    "10847": {
      "op": "ISZERO"
    },
    "10848": {
      "op": "PUSH2",
      "value": "0x2A68"
    },
    "10851": {
      "op": "JUMPI"
    },
    "10852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10854": {
      "op": "DUP1"
    },
    "10855": {
      "op": "REVERT"
    },
    "10856": {
      "op": "JUMPDEST"
    },
    "10857": {
      "op": "PUSH2",
      "value": "0x2A74"
    },
    "10860": {
      "op": "DUP8"
    },
    "10861": {
      "op": "DUP3"
    },
    "10862": {
      "op": "DUP9"
    },
    "10863": {
      "op": "ADD"
    },
    "10864": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "10867": {
      "jump": "i",
      "op": "JUMP"
    },
    "10868": {
      "op": "JUMPDEST"
    },
    "10869": {
      "op": "SWAP6"
    },
    "10870": {
      "op": "SWAP9"
    },
    "10871": {
      "op": "SWAP5"
    },
    "10872": {
      "op": "SWAP8"
    },
    "10873": {
      "op": "POP"
    },
    "10874": {
      "op": "SWAP6"
    },
    "10875": {
      "op": "POP"
    },
    "10876": {
      "op": "POP"
    },
    "10877": {
      "op": "POP"
    },
    "10878": {
      "op": "POP"
    },
    "10879": {
      "jump": "o",
      "op": "JUMP"
    },
    "10880": {
      "op": "JUMPDEST"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10883": {
      "op": "DUP1"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10886": {
      "op": "DUP1"
    },
    "10887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10889": {
      "op": "DUP1"
    },
    "10890": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10892": {
      "op": "DUP1"
    },
    "10893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10895": {
      "op": "DUP1"
    },
    "10896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10898": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10900": {
      "op": "DUP13"
    },
    "10901": {
      "op": "DUP15"
    },
    "10902": {
      "op": "SUB"
    },
    "10903": {
      "op": "SLT"
    },
    "10904": {
      "op": "ISZERO"
    },
    "10905": {
      "op": "PUSH2",
      "value": "0x2AA1"
    },
    "10908": {
      "op": "JUMPI"
    },
    "10909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10911": {
      "op": "DUP1"
    },
    "10912": {
      "op": "REVERT"
    },
    "10913": {
      "op": "JUMPDEST"
    },
    "10914": {
      "op": "PUSH2",
      "value": "0x2AAA"
    },
    "10917": {
      "op": "DUP13"
    },
    "10918": {
      "op": "PUSH2",
      "value": "0x2955"
    },
    "10921": {
      "jump": "i",
      "op": "JUMP"
    },
    "10922": {
      "op": "JUMPDEST"
    },
    "10923": {
      "op": "SWAP11"
    },
    "10924": {
      "op": "POP"
    },
    "10925": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10934": {
      "op": "DUP1"
    },
    "10935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10937": {
      "op": "DUP15"
    },
    "10938": {
      "op": "ADD"
    },
    "10939": {
      "op": "CALLDATALOAD"
    },
    "10940": {
      "op": "GT"
    },
    "10941": {
      "op": "ISZERO"
    },
    "10942": {
      "op": "PUSH2",
      "value": "0x2AC6"
    },
    "10945": {
      "op": "JUMPI"
    },
    "10946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10948": {
      "op": "DUP1"
    },
    "10949": {
      "op": "REVERT"
    },
    "10950": {
      "op": "JUMPDEST"
    },
    "10951": {
      "op": "PUSH2",
      "value": "0x2AD6"
    },
    "10954": {
      "op": "DUP15"
    },
    "10955": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10957": {
      "op": "DUP16"
    },
    "10958": {
      "op": "ADD"
    },
    "10959": {
      "op": "CALLDATALOAD"
    },
    "10960": {
      "op": "DUP16"
    },
    "10961": {
      "op": "ADD"
    },
    "10962": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "10965": {
      "jump": "i",
      "op": "JUMP"
    },
    "10966": {
      "op": "JUMPDEST"
    },
    "10967": {
      "op": "SWAP1"
    },
    "10968": {
      "op": "SWAP12"
    },
    "10969": {
      "op": "POP"
    },
    "10970": {
      "op": "SWAP10"
    },
    "10971": {
      "op": "POP"
    },
    "10972": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10974": {
      "op": "DUP14"
    },
    "10975": {
      "op": "ADD"
    },
    "10976": {
      "op": "CALLDATALOAD"
    },
    "10977": {
      "op": "DUP2"
    },
    "10978": {
      "op": "LT"
    },
    "10979": {
      "op": "ISZERO"
    },
    "10980": {
      "op": "PUSH2",
      "value": "0x2AEC"
    },
    "10983": {
      "op": "JUMPI"
    },
    "10984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10986": {
      "op": "DUP1"
    },
    "10987": {
      "op": "REVERT"
    },
    "10988": {
      "op": "JUMPDEST"
    },
    "10989": {
      "op": "PUSH2",
      "value": "0x2AFC"
    },
    "10992": {
      "op": "DUP15"
    },
    "10993": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10995": {
      "op": "DUP16"
    },
    "10996": {
      "op": "ADD"
    },
    "10997": {
      "op": "CALLDATALOAD"
    },
    "10998": {
      "op": "DUP16"
    },
    "10999": {
      "op": "ADD"
    },
    "11000": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11003": {
      "jump": "i",
      "op": "JUMP"
    },
    "11004": {
      "op": "JUMPDEST"
    },
    "11005": {
      "op": "SWAP1"
    },
    "11006": {
      "op": "SWAP10"
    },
    "11007": {
      "op": "POP"
    },
    "11008": {
      "op": "SWAP8"
    },
    "11009": {
      "op": "POP"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11012": {
      "op": "DUP14"
    },
    "11013": {
      "op": "ADD"
    },
    "11014": {
      "op": "CALLDATALOAD"
    },
    "11015": {
      "op": "DUP2"
    },
    "11016": {
      "op": "LT"
    },
    "11017": {
      "op": "ISZERO"
    },
    "11018": {
      "op": "PUSH2",
      "value": "0x2B12"
    },
    "11021": {
      "op": "JUMPI"
    },
    "11022": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11024": {
      "op": "DUP1"
    },
    "11025": {
      "op": "REVERT"
    },
    "11026": {
      "op": "JUMPDEST"
    },
    "11027": {
      "op": "PUSH2",
      "value": "0x2B22"
    },
    "11030": {
      "op": "DUP15"
    },
    "11031": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11033": {
      "op": "DUP16"
    },
    "11034": {
      "op": "ADD"
    },
    "11035": {
      "op": "CALLDATALOAD"
    },
    "11036": {
      "op": "DUP16"
    },
    "11037": {
      "op": "ADD"
    },
    "11038": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11041": {
      "jump": "i",
      "op": "JUMP"
    },
    "11042": {
      "op": "JUMPDEST"
    },
    "11043": {
      "op": "SWAP1"
    },
    "11044": {
      "op": "SWAP8"
    },
    "11045": {
      "op": "POP"
    },
    "11046": {
      "op": "SWAP6"
    },
    "11047": {
      "op": "POP"
    },
    "11048": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11050": {
      "op": "DUP14"
    },
    "11051": {
      "op": "ADD"
    },
    "11052": {
      "op": "CALLDATALOAD"
    },
    "11053": {
      "op": "DUP2"
    },
    "11054": {
      "op": "LT"
    },
    "11055": {
      "op": "ISZERO"
    },
    "11056": {
      "op": "PUSH2",
      "value": "0x2B38"
    },
    "11059": {
      "op": "JUMPI"
    },
    "11060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11062": {
      "op": "DUP1"
    },
    "11063": {
      "op": "REVERT"
    },
    "11064": {
      "op": "JUMPDEST"
    },
    "11065": {
      "op": "PUSH2",
      "value": "0x2B48"
    },
    "11068": {
      "op": "DUP15"
    },
    "11069": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11071": {
      "op": "DUP16"
    },
    "11072": {
      "op": "ADD"
    },
    "11073": {
      "op": "CALLDATALOAD"
    },
    "11074": {
      "op": "DUP16"
    },
    "11075": {
      "op": "ADD"
    },
    "11076": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11079": {
      "jump": "i",
      "op": "JUMP"
    },
    "11080": {
      "op": "JUMPDEST"
    },
    "11081": {
      "op": "SWAP1"
    },
    "11082": {
      "op": "SWAP6"
    },
    "11083": {
      "op": "POP"
    },
    "11084": {
      "op": "SWAP4"
    },
    "11085": {
      "op": "POP"
    },
    "11086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11088": {
      "op": "DUP14"
    },
    "11089": {
      "op": "ADD"
    },
    "11090": {
      "op": "CALLDATALOAD"
    },
    "11091": {
      "op": "DUP2"
    },
    "11092": {
      "op": "LT"
    },
    "11093": {
      "op": "ISZERO"
    },
    "11094": {
      "op": "PUSH2",
      "value": "0x2B5E"
    },
    "11097": {
      "op": "JUMPI"
    },
    "11098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11100": {
      "op": "DUP1"
    },
    "11101": {
      "op": "REVERT"
    },
    "11102": {
      "op": "JUMPDEST"
    },
    "11103": {
      "op": "POP"
    },
    "11104": {
      "op": "PUSH2",
      "value": "0x2B6F"
    },
    "11107": {
      "op": "DUP14"
    },
    "11108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11110": {
      "op": "DUP15"
    },
    "11111": {
      "op": "ADD"
    },
    "11112": {
      "op": "CALLDATALOAD"
    },
    "11113": {
      "op": "DUP15"
    },
    "11114": {
      "op": "ADD"
    },
    "11115": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11118": {
      "jump": "i",
      "op": "JUMP"
    },
    "11119": {
      "op": "JUMPDEST"
    },
    "11120": {
      "op": "DUP2"
    },
    "11121": {
      "op": "SWAP4"
    },
    "11122": {
      "op": "POP"
    },
    "11123": {
      "op": "DUP1"
    },
    "11124": {
      "op": "SWAP3"
    },
    "11125": {
      "op": "POP"
    },
    "11126": {
      "op": "POP"
    },
    "11127": {
      "op": "POP"
    },
    "11128": {
      "op": "SWAP3"
    },
    "11129": {
      "op": "SWAP6"
    },
    "11130": {
      "op": "SWAP9"
    },
    "11131": {
      "op": "SWAP12"
    },
    "11132": {
      "op": "POP"
    },
    "11133": {
      "op": "SWAP3"
    },
    "11134": {
      "op": "SWAP6"
    },
    "11135": {
      "op": "SWAP9"
    },
    "11136": {
      "op": "SWAP12"
    },
    "11137": {
      "op": "SWAP1"
    },
    "11138": {
      "op": "SWAP4"
    },
    "11139": {
      "op": "SWAP7"
    },
    "11140": {
      "op": "SWAP10"
    },
    "11141": {
      "op": "POP"
    },
    "11142": {
      "jump": "o",
      "op": "JUMP"
    },
    "11143": {
      "op": "JUMPDEST"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11146": {
      "op": "DUP1"
    },
    "11147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11149": {
      "op": "DUP1"
    },
    "11150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11152": {
      "op": "DUP1"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11155": {
      "op": "DUP8"
    },
    "11156": {
      "op": "DUP10"
    },
    "11157": {
      "op": "SUB"
    },
    "11158": {
      "op": "SLT"
    },
    "11159": {
      "op": "ISZERO"
    },
    "11160": {
      "op": "PUSH2",
      "value": "0x2BA0"
    },
    "11163": {
      "op": "JUMPI"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11166": {
      "op": "DUP1"
    },
    "11167": {
      "op": "REVERT"
    },
    "11168": {
      "op": "JUMPDEST"
    },
    "11169": {
      "op": "DUP7"
    },
    "11170": {
      "op": "CALLDATALOAD"
    },
    "11171": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11180": {
      "op": "DUP1"
    },
    "11181": {
      "op": "DUP3"
    },
    "11182": {
      "op": "GT"
    },
    "11183": {
      "op": "ISZERO"
    },
    "11184": {
      "op": "PUSH2",
      "value": "0x2BB8"
    },
    "11187": {
      "op": "JUMPI"
    },
    "11188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11190": {
      "op": "DUP1"
    },
    "11191": {
      "op": "REVERT"
    },
    "11192": {
      "op": "JUMPDEST"
    },
    "11193": {
      "op": "PUSH2",
      "value": "0x2BC4"
    },
    "11196": {
      "op": "DUP11"
    },
    "11197": {
      "op": "DUP4"
    },
    "11198": {
      "op": "DUP12"
    },
    "11199": {
      "op": "ADD"
    },
    "11200": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11203": {
      "jump": "i",
      "op": "JUMP"
    },
    "11204": {
      "op": "JUMPDEST"
    },
    "11205": {
      "op": "SWAP1"
    },
    "11206": {
      "op": "SWAP9"
    },
    "11207": {
      "op": "POP"
    },
    "11208": {
      "op": "SWAP7"
    },
    "11209": {
      "op": "POP"
    },
    "11210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11212": {
      "op": "DUP10"
    },
    "11213": {
      "op": "ADD"
    },
    "11214": {
      "op": "CALLDATALOAD"
    },
    "11215": {
      "op": "SWAP2"
    },
    "11216": {
      "op": "POP"
    },
    "11217": {
      "op": "DUP1"
    },
    "11218": {
      "op": "DUP3"
    },
    "11219": {
      "op": "GT"
    },
    "11220": {
      "op": "ISZERO"
    },
    "11221": {
      "op": "PUSH2",
      "value": "0x2BDD"
    },
    "11224": {
      "op": "JUMPI"
    },
    "11225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11227": {
      "op": "DUP1"
    },
    "11228": {
      "op": "REVERT"
    },
    "11229": {
      "op": "JUMPDEST"
    },
    "11230": {
      "op": "POP"
    },
    "11231": {
      "op": "PUSH2",
      "value": "0x2BEA"
    },
    "11234": {
      "op": "DUP10"
    },
    "11235": {
      "op": "DUP3"
    },
    "11236": {
      "op": "DUP11"
    },
    "11237": {
      "op": "ADD"
    },
    "11238": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11241": {
      "jump": "i",
      "op": "JUMP"
    },
    "11242": {
      "op": "JUMPDEST"
    },
    "11243": {
      "op": "SWAP1"
    },
    "11244": {
      "op": "SWAP6"
    },
    "11245": {
      "op": "POP"
    },
    "11246": {
      "op": "SWAP4"
    },
    "11247": {
      "op": "POP"
    },
    "11248": {
      "op": "POP"
    },
    "11249": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11251": {
      "op": "DUP8"
    },
    "11252": {
      "op": "ADD"
    },
    "11253": {
      "op": "CALLDATALOAD"
    },
    "11254": {
      "op": "PUSH2",
      "value": "0x2BFE"
    },
    "11257": {
      "op": "DUP2"
    },
    "11258": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "11261": {
      "jump": "i",
      "op": "JUMP"
    },
    "11262": {
      "op": "JUMPDEST"
    },
    "11263": {
      "op": "DUP1"
    },
    "11264": {
      "op": "SWAP3"
    },
    "11265": {
      "op": "POP"
    },
    "11266": {
      "op": "POP"
    },
    "11267": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11269": {
      "op": "DUP8"
    },
    "11270": {
      "op": "ADD"
    },
    "11271": {
      "op": "CALLDATALOAD"
    },
    "11272": {
      "op": "SWAP1"
    },
    "11273": {
      "op": "POP"
    },
    "11274": {
      "op": "SWAP3"
    },
    "11275": {
      "op": "SWAP6"
    },
    "11276": {
      "op": "POP"
    },
    "11277": {
      "op": "SWAP3"
    },
    "11278": {
      "op": "SWAP6"
    },
    "11279": {
      "op": "POP"
    },
    "11280": {
      "op": "SWAP3"
    },
    "11281": {
      "op": "SWAP6"
    },
    "11282": {
      "jump": "o",
      "op": "JUMP"
    },
    "11283": {
      "op": "JUMPDEST"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11286": {
      "op": "DUP1"
    },
    "11287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11291": {
      "op": "DUP5"
    },
    "11292": {
      "op": "DUP7"
    },
    "11293": {
      "op": "SUB"
    },
    "11294": {
      "op": "SLT"
    },
    "11295": {
      "op": "ISZERO"
    },
    "11296": {
      "op": "PUSH2",
      "value": "0x2C28"
    },
    "11299": {
      "op": "JUMPI"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11302": {
      "op": "DUP1"
    },
    "11303": {
      "op": "REVERT"
    },
    "11304": {
      "op": "JUMPDEST"
    },
    "11305": {
      "op": "DUP4"
    },
    "11306": {
      "op": "CALLDATALOAD"
    },
    "11307": {
      "op": "PUSH2",
      "value": "0x2C33"
    },
    "11310": {
      "op": "DUP2"
    },
    "11311": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "11314": {
      "jump": "i",
      "op": "JUMP"
    },
    "11315": {
      "op": "JUMPDEST"
    },
    "11316": {
      "op": "SWAP3"
    },
    "11317": {
      "op": "POP"
    },
    "11318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11320": {
      "op": "DUP5"
    },
    "11321": {
      "op": "ADD"
    },
    "11322": {
      "op": "CALLDATALOAD"
    },
    "11323": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11332": {
      "op": "DUP2"
    },
    "11333": {
      "op": "GT"
    },
    "11334": {
      "op": "ISZERO"
    },
    "11335": {
      "op": "PUSH2",
      "value": "0x2C4F"
    },
    "11338": {
      "op": "JUMPI"
    },
    "11339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11341": {
      "op": "DUP1"
    },
    "11342": {
      "op": "REVERT"
    },
    "11343": {
      "op": "JUMPDEST"
    },
    "11344": {
      "op": "PUSH2",
      "value": "0x2C5B"
    },
    "11347": {
      "op": "DUP7"
    },
    "11348": {
      "op": "DUP3"
    },
    "11349": {
      "op": "DUP8"
    },
    "11350": {
      "op": "ADD"
    },
    "11351": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11354": {
      "jump": "i",
      "op": "JUMP"
    },
    "11355": {
      "op": "JUMPDEST"
    },
    "11356": {
      "op": "SWAP5"
    },
    "11357": {
      "op": "SWAP8"
    },
    "11358": {
      "op": "SWAP1"
    },
    "11359": {
      "op": "SWAP7"
    },
    "11360": {
      "op": "POP"
    },
    "11361": {
      "op": "SWAP4"
    },
    "11362": {
      "op": "SWAP5"
    },
    "11363": {
      "op": "POP"
    },
    "11364": {
      "op": "POP"
    },
    "11365": {
      "op": "POP"
    },
    "11366": {
      "op": "POP"
    },
    "11367": {
      "jump": "o",
      "op": "JUMP"
    },
    "11368": {
      "op": "JUMPDEST"
    },
    "11369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11371": {
      "op": "DUP1"
    },
    "11372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11374": {
      "op": "DUP1"
    },
    "11375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11377": {
      "op": "DUP6"
    },
    "11378": {
      "op": "DUP8"
    },
    "11379": {
      "op": "SUB"
    },
    "11380": {
      "op": "SLT"
    },
    "11381": {
      "op": "ISZERO"
    },
    "11382": {
      "op": "PUSH2",
      "value": "0x2C7E"
    },
    "11385": {
      "op": "JUMPI"
    },
    "11386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11388": {
      "op": "DUP1"
    },
    "11389": {
      "op": "REVERT"
    },
    "11390": {
      "op": "JUMPDEST"
    },
    "11391": {
      "op": "DUP5"
    },
    "11392": {
      "op": "CALLDATALOAD"
    },
    "11393": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11402": {
      "op": "DUP1"
    },
    "11403": {
      "op": "DUP3"
    },
    "11404": {
      "op": "GT"
    },
    "11405": {
      "op": "ISZERO"
    },
    "11406": {
      "op": "PUSH2",
      "value": "0x2C96"
    },
    "11409": {
      "op": "JUMPI"
    },
    "11410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11412": {
      "op": "DUP1"
    },
    "11413": {
      "op": "REVERT"
    },
    "11414": {
      "op": "JUMPDEST"
    },
    "11415": {
      "op": "PUSH2",
      "value": "0x2CA2"
    },
    "11418": {
      "op": "DUP9"
    },
    "11419": {
      "op": "DUP4"
    },
    "11420": {
      "op": "DUP10"
    },
    "11421": {
      "op": "ADD"
    },
    "11422": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11425": {
      "jump": "i",
      "op": "JUMP"
    },
    "11426": {
      "op": "JUMPDEST"
    },
    "11427": {
      "op": "SWAP1"
    },
    "11428": {
      "op": "SWAP7"
    },
    "11429": {
      "op": "POP"
    },
    "11430": {
      "op": "SWAP5"
    },
    "11431": {
      "op": "POP"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11434": {
      "op": "DUP8"
    },
    "11435": {
      "op": "ADD"
    },
    "11436": {
      "op": "CALLDATALOAD"
    },
    "11437": {
      "op": "SWAP2"
    },
    "11438": {
      "op": "POP"
    },
    "11439": {
      "op": "DUP1"
    },
    "11440": {
      "op": "DUP3"
    },
    "11441": {
      "op": "GT"
    },
    "11442": {
      "op": "ISZERO"
    },
    "11443": {
      "op": "PUSH2",
      "value": "0x2CBB"
    },
    "11446": {
      "op": "JUMPI"
    },
    "11447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11449": {
      "op": "DUP1"
    },
    "11450": {
      "op": "REVERT"
    },
    "11451": {
      "op": "JUMPDEST"
    },
    "11452": {
      "op": "POP"
    },
    "11453": {
      "op": "PUSH2",
      "value": "0x2A74"
    },
    "11456": {
      "op": "DUP8"
    },
    "11457": {
      "op": "DUP3"
    },
    "11458": {
      "op": "DUP9"
    },
    "11459": {
      "op": "ADD"
    },
    "11460": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11463": {
      "jump": "i",
      "op": "JUMP"
    },
    "11464": {
      "op": "JUMPDEST"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11469": {
      "op": "DUP3"
    },
    "11470": {
      "op": "DUP5"
    },
    "11471": {
      "op": "SUB"
    },
    "11472": {
      "op": "SLT"
    },
    "11473": {
      "op": "ISZERO"
    },
    "11474": {
      "op": "PUSH2",
      "value": "0x2CDA"
    },
    "11477": {
      "op": "JUMPI"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11480": {
      "op": "DUP1"
    },
    "11481": {
      "op": "REVERT"
    },
    "11482": {
      "op": "JUMPDEST"
    },
    "11483": {
      "op": "POP"
    },
    "11484": {
      "op": "CALLDATALOAD"
    },
    "11485": {
      "op": "SWAP2"
    },
    "11486": {
      "op": "SWAP1"
    },
    "11487": {
      "op": "POP"
    },
    "11488": {
      "jump": "o",
      "op": "JUMP"
    },
    "11489": {
      "op": "JUMPDEST"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11492": {
      "op": "DUP1"
    },
    "11493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11495": {
      "op": "DUP1"
    },
    "11496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11498": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11500": {
      "op": "DUP7"
    },
    "11501": {
      "op": "DUP9"
    },
    "11502": {
      "op": "SUB"
    },
    "11503": {
      "op": "SLT"
    },
    "11504": {
      "op": "ISZERO"
    },
    "11505": {
      "op": "PUSH2",
      "value": "0x2CF9"
    },
    "11508": {
      "op": "JUMPI"
    },
    "11509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11511": {
      "op": "DUP1"
    },
    "11512": {
      "op": "REVERT"
    },
    "11513": {
      "op": "JUMPDEST"
    },
    "11514": {
      "op": "DUP6"
    },
    "11515": {
      "op": "CALLDATALOAD"
    },
    "11516": {
      "op": "PUSH2",
      "value": "0x2D04"
    },
    "11519": {
      "op": "DUP2"
    },
    "11520": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "11523": {
      "jump": "i",
      "op": "JUMP"
    },
    "11524": {
      "op": "JUMPDEST"
    },
    "11525": {
      "op": "SWAP5"
    },
    "11526": {
      "op": "POP"
    },
    "11527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11529": {
      "op": "DUP7"
    },
    "11530": {
      "op": "ADD"
    },
    "11531": {
      "op": "CALLDATALOAD"
    },
    "11532": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11541": {
      "op": "DUP1"
    },
    "11542": {
      "op": "DUP3"
    },
    "11543": {
      "op": "GT"
    },
    "11544": {
      "op": "ISZERO"
    },
    "11545": {
      "op": "PUSH2",
      "value": "0x2D21"
    },
    "11548": {
      "op": "JUMPI"
    },
    "11549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11551": {
      "op": "DUP1"
    },
    "11552": {
      "op": "REVERT"
    },
    "11553": {
      "op": "JUMPDEST"
    },
    "11554": {
      "op": "PUSH2",
      "value": "0x2D2D"
    },
    "11557": {
      "op": "DUP10"
    },
    "11558": {
      "op": "DUP4"
    },
    "11559": {
      "op": "DUP11"
    },
    "11560": {
      "op": "ADD"
    },
    "11561": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11564": {
      "jump": "i",
      "op": "JUMP"
    },
    "11565": {
      "op": "JUMPDEST"
    },
    "11566": {
      "op": "SWAP1"
    },
    "11567": {
      "op": "SWAP7"
    },
    "11568": {
      "op": "POP"
    },
    "11569": {
      "op": "SWAP5"
    },
    "11570": {
      "op": "POP"
    },
    "11571": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11573": {
      "op": "DUP9"
    },
    "11574": {
      "op": "ADD"
    },
    "11575": {
      "op": "CALLDATALOAD"
    },
    "11576": {
      "op": "SWAP2"
    },
    "11577": {
      "op": "POP"
    },
    "11578": {
      "op": "DUP1"
    },
    "11579": {
      "op": "DUP3"
    },
    "11580": {
      "op": "GT"
    },
    "11581": {
      "op": "ISZERO"
    },
    "11582": {
      "op": "PUSH2",
      "value": "0x2D46"
    },
    "11585": {
      "op": "JUMPI"
    },
    "11586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11588": {
      "op": "DUP1"
    },
    "11589": {
      "op": "REVERT"
    },
    "11590": {
      "op": "JUMPDEST"
    },
    "11591": {
      "op": "POP"
    },
    "11592": {
      "op": "PUSH2",
      "value": "0x2D53"
    },
    "11595": {
      "op": "DUP9"
    },
    "11596": {
      "op": "DUP3"
    },
    "11597": {
      "op": "DUP10"
    },
    "11598": {
      "op": "ADD"
    },
    "11599": {
      "op": "PUSH2",
      "value": "0x29CF"
    },
    "11602": {
      "jump": "i",
      "op": "JUMP"
    },
    "11603": {
      "op": "JUMPDEST"
    },
    "11604": {
      "op": "SWAP7"
    },
    "11605": {
      "op": "SWAP10"
    },
    "11606": {
      "op": "SWAP6"
    },
    "11607": {
      "op": "SWAP9"
    },
    "11608": {
      "op": "POP"
    },
    "11609": {
      "op": "SWAP4"
    },
    "11610": {
      "op": "SWAP7"
    },
    "11611": {
      "op": "POP"
    },
    "11612": {
      "op": "SWAP3"
    },
    "11613": {
      "op": "SWAP5"
    },
    "11614": {
      "op": "SWAP4"
    },
    "11615": {
      "op": "SWAP3"
    },
    "11616": {
      "op": "POP"
    },
    "11617": {
      "op": "POP"
    },
    "11618": {
      "op": "POP"
    },
    "11619": {
      "jump": "o",
      "op": "JUMP"
    },
    "11620": {
      "op": "JUMPDEST"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11623": {
      "op": "DUP1"
    },
    "11624": {
      "op": "DUP3"
    },
    "11625": {
      "op": "MSTORE"
    },
    "11626": {
      "op": "DUP3"
    },
    "11627": {
      "op": "MLOAD"
    },
    "11628": {
      "op": "DUP3"
    },
    "11629": {
      "op": "DUP3"
    },
    "11630": {
      "op": "ADD"
    },
    "11631": {
      "op": "DUP2"
    },
    "11632": {
      "op": "SWAP1"
    },
    "11633": {
      "op": "MSTORE"
    },
    "11634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11636": {
      "op": "SWAP2"
    },
    "11637": {
      "op": "SWAP1"
    },
    "11638": {
      "op": "DUP5"
    },
    "11639": {
      "op": "DUP3"
    },
    "11640": {
      "op": "ADD"
    },
    "11641": {
      "op": "SWAP1"
    },
    "11642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11644": {
      "op": "DUP6"
    },
    "11645": {
      "op": "ADD"
    },
    "11646": {
      "op": "SWAP1"
    },
    "11647": {
      "op": "DUP5"
    },
    "11648": {
      "op": "JUMPDEST"
    },
    "11649": {
      "op": "DUP2"
    },
    "11650": {
      "op": "DUP2"
    },
    "11651": {
      "op": "LT"
    },
    "11652": {
      "op": "ISZERO"
    },
    "11653": {
      "op": "PUSH2",
      "value": "0x29C3"
    },
    "11656": {
      "op": "JUMPI"
    },
    "11657": {
      "op": "DUP4"
    },
    "11658": {
      "op": "MLOAD"
    },
    "11659": {
      "op": "DUP4"
    },
    "11660": {
      "op": "MSTORE"
    },
    "11661": {
      "op": "SWAP3"
    },
    "11662": {
      "op": "DUP5"
    },
    "11663": {
      "op": "ADD"
    },
    "11664": {
      "op": "SWAP3"
    },
    "11665": {
      "op": "SWAP2"
    },
    "11666": {
      "op": "DUP5"
    },
    "11667": {
      "op": "ADD"
    },
    "11668": {
      "op": "SWAP2"
    },
    "11669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11671": {
      "op": "ADD"
    },
    "11672": {
      "op": "PUSH2",
      "value": "0x2D80"
    },
    "11675": {
      "op": "JUMP"
    },
    "11676": {
      "op": "JUMPDEST"
    },
    "11677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11679": {
      "op": "DUP1"
    },
    "11680": {
      "op": "DUP3"
    },
    "11681": {
      "op": "MSTORE"
    },
    "11682": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "11684": {
      "op": "SWAP1"
    },
    "11685": {
      "op": "DUP3"
    },
    "11686": {
      "op": "ADD"
    },
    "11687": {
      "op": "MSTORE"
    },
    "11688": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2077696C6C20646F65736E2774206578697374000000000000"
    },
    "11721": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11723": {
      "op": "DUP3"
    },
    "11724": {
      "op": "ADD"
    },
    "11725": {
      "op": "MSTORE"
    },
    "11726": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11728": {
      "op": "ADD"
    },
    "11729": {
      "op": "SWAP1"
    },
    "11730": {
      "jump": "o",
      "op": "JUMP"
    },
    "11731": {
      "op": "JUMPDEST"
    },
    "11732": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11737": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11739": {
      "op": "SHL"
    },
    "11740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11742": {
      "op": "MSTORE"
    },
    "11743": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11745": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11747": {
      "op": "MSTORE"
    },
    "11748": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11752": {
      "op": "REVERT"
    },
    "11753": {
      "op": "JUMPDEST"
    },
    "11754": {
      "op": "DUP1"
    },
    "11755": {
      "op": "DUP3"
    },
    "11756": {
      "op": "ADD"
    },
    "11757": {
      "op": "DUP1"
    },
    "11758": {
      "op": "DUP3"
    },
    "11759": {
      "op": "GT"
    },
    "11760": {
      "op": "ISZERO"
    },
    "11761": {
      "op": "PUSH2",
      "value": "0x2DFC"
    },
    "11764": {
      "op": "JUMPI"
    },
    "11765": {
      "op": "PUSH2",
      "value": "0x2DFC"
    },
    "11768": {
      "op": "PUSH2",
      "value": "0x2DD3"
    },
    "11771": {
      "jump": "i",
      "op": "JUMP"
    },
    "11772": {
      "op": "JUMPDEST"
    },
    "11773": {
      "op": "SWAP3"
    },
    "11774": {
      "op": "SWAP2"
    },
    "11775": {
      "op": "POP"
    },
    "11776": {
      "op": "POP"
    },
    "11777": {
      "jump": "o",
      "op": "JUMP"
    },
    "11778": {
      "op": "JUMPDEST"
    },
    "11779": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11781": {
      "op": "DUP1"
    },
    "11782": {
      "op": "DUP3"
    },
    "11783": {
      "op": "MSTORE"
    },
    "11784": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "11786": {
      "op": "SWAP1"
    },
    "11787": {
      "op": "DUP3"
    },
    "11788": {
      "op": "ADD"
    },
    "11789": {
      "op": "MSTORE"
    },
    "11790": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A20546F6F206561726C7920746F207265617000000000000000"
    },
    "11823": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11825": {
      "op": "DUP3"
    },
    "11826": {
      "op": "ADD"
    },
    "11827": {
      "op": "MSTORE"
    },
    "11828": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11830": {
      "op": "ADD"
    },
    "11831": {
      "op": "SWAP1"
    },
    "11832": {
      "jump": "o",
      "op": "JUMP"
    },
    "11833": {
      "op": "JUMPDEST"
    },
    "11834": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11839": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11841": {
      "op": "SHL"
    },
    "11842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11844": {
      "op": "MSTORE"
    },
    "11845": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11847": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11849": {
      "op": "MSTORE"
    },
    "11850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11852": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11854": {
      "op": "REVERT"
    },
    "11855": {
      "op": "JUMPDEST"
    },
    "11856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11860": {
      "op": "DUP3"
    },
    "11861": {
      "op": "ADD"
    },
    "11862": {
      "op": "PUSH2",
      "value": "0x2E61"
    },
    "11865": {
      "op": "JUMPI"
    },
    "11866": {
      "op": "PUSH2",
      "value": "0x2E61"
    },
    "11869": {
      "op": "PUSH2",
      "value": "0x2DD3"
    },
    "11872": {
      "jump": "i",
      "op": "JUMP"
    },
    "11873": {
      "op": "JUMPDEST"
    },
    "11874": {
      "op": "POP"
    },
    "11875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11877": {
      "op": "ADD"
    },
    "11878": {
      "op": "SWAP1"
    },
    "11879": {
      "jump": "o",
      "op": "JUMP"
    },
    "11880": {
      "op": "JUMPDEST"
    },
    "11881": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11883": {
      "op": "DUP1"
    },
    "11884": {
      "op": "DUP3"
    },
    "11885": {
      "op": "MSTORE"
    },
    "11886": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11888": {
      "op": "SWAP1"
    },
    "11889": {
      "op": "DUP3"
    },
    "11890": {
      "op": "ADD"
    },
    "11891": {
      "op": "MSTORE"
    },
    "11892": {
      "op": "PUSH20",
      "value": "0x57696C6C65723A20756E72656C65617361626C65"
    },
    "11913": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11915": {
      "op": "SHL"
    },
    "11916": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11918": {
      "op": "DUP3"
    },
    "11919": {
      "op": "ADD"
    },
    "11920": {
      "op": "MSTORE"
    },
    "11921": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11923": {
      "op": "ADD"
    },
    "11924": {
      "op": "SWAP1"
    },
    "11925": {
      "jump": "o",
      "op": "JUMP"
    },
    "11926": {
      "op": "JUMPDEST"
    },
    "11927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11929": {
      "op": "DUP1"
    },
    "11930": {
      "op": "DUP3"
    },
    "11931": {
      "op": "MSTORE"
    },
    "11932": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "11934": {
      "op": "SWAP1"
    },
    "11935": {
      "op": "DUP3"
    },
    "11936": {
      "op": "ADD"
    },
    "11937": {
      "op": "MSTORE"
    },
    "11938": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A206578656375746F72206973206E6F742062656E6566696369"
    },
    "11971": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11973": {
      "op": "DUP3"
    },
    "11974": {
      "op": "ADD"
    },
    "11975": {
      "op": "MSTORE"
    },
    "11976": {
      "op": "PUSH3",
      "value": "0x617279"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "11982": {
      "op": "SHL"
    },
    "11983": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11985": {
      "op": "DUP3"
    },
    "11986": {
      "op": "ADD"
    },
    "11987": {
      "op": "MSTORE"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11990": {
      "op": "ADD"
    },
    "11991": {
      "op": "SWAP1"
    },
    "11992": {
      "jump": "o",
      "op": "JUMP"
    },
    "11993": {
      "op": "JUMPDEST"
    },
    "11994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12000": {
      "op": "SHL"
    },
    "12001": {
      "op": "SUB"
    },
    "12002": {
      "op": "DUP5"
    },
    "12003": {
      "op": "DUP2"
    },
    "12004": {
      "op": "AND"
    },
    "12005": {
      "op": "DUP3"
    },
    "12006": {
      "op": "MSTORE"
    },
    "12007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12011": {
      "op": "DUP1"
    },
    "12012": {
      "op": "DUP5"
    },
    "12013": {
      "op": "ADD"
    },
    "12014": {
      "op": "DUP3"
    },
    "12015": {
      "op": "SWAP1"
    },
    "12016": {
      "op": "MSTORE"
    },
    "12017": {
      "op": "SWAP1"
    },
    "12018": {
      "op": "DUP4"
    },
    "12019": {
      "op": "ADD"
    },
    "12020": {
      "op": "DUP5"
    },
    "12021": {
      "op": "SWAP1"
    },
    "12022": {
      "op": "MSTORE"
    },
    "12023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12025": {
      "op": "SWAP2"
    },
    "12026": {
      "op": "DUP6"
    },
    "12027": {
      "op": "SWAP2"
    },
    "12028": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12030": {
      "op": "DUP6"
    },
    "12031": {
      "op": "ADD"
    },
    "12032": {
      "op": "DUP5"
    },
    "12033": {
      "op": "JUMPDEST"
    },
    "12034": {
      "op": "DUP8"
    },
    "12035": {
      "op": "DUP2"
    },
    "12036": {
      "op": "LT"
    },
    "12037": {
      "op": "ISZERO"
    },
    "12038": {
      "op": "PUSH2",
      "value": "0x2F28"
    },
    "12041": {
      "op": "JUMPI"
    },
    "12042": {
      "op": "DUP5"
    },
    "12043": {
      "op": "CALLDATALOAD"
    },
    "12044": {
      "op": "PUSH2",
      "value": "0x2F14"
    },
    "12047": {
      "op": "DUP2"
    },
    "12048": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "12051": {
      "jump": "i",
      "op": "JUMP"
    },
    "12052": {
      "op": "JUMPDEST"
    },
    "12053": {
      "op": "DUP5"
    },
    "12054": {
      "op": "AND"
    },
    "12055": {
      "op": "DUP3"
    },
    "12056": {
      "op": "MSTORE"
    },
    "12057": {
      "op": "SWAP4"
    },
    "12058": {
      "op": "DUP3"
    },
    "12059": {
      "op": "ADD"
    },
    "12060": {
      "op": "SWAP4"
    },
    "12061": {
      "op": "SWAP1"
    },
    "12062": {
      "op": "DUP3"
    },
    "12063": {
      "op": "ADD"
    },
    "12064": {
      "op": "SWAP1"
    },
    "12065": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12067": {
      "op": "ADD"
    },
    "12068": {
      "op": "PUSH2",
      "value": "0x2F01"
    },
    "12071": {
      "op": "JUMP"
    },
    "12072": {
      "op": "JUMPDEST"
    },
    "12073": {
      "op": "POP"
    },
    "12074": {
      "op": "SWAP9"
    },
    "12075": {
      "op": "SWAP8"
    },
    "12076": {
      "op": "POP"
    },
    "12077": {
      "op": "POP"
    },
    "12078": {
      "op": "POP"
    },
    "12079": {
      "op": "POP"
    },
    "12080": {
      "op": "POP"
    },
    "12081": {
      "op": "POP"
    },
    "12082": {
      "op": "POP"
    },
    "12083": {
      "op": "POP"
    },
    "12084": {
      "jump": "o",
      "op": "JUMP"
    },
    "12085": {
      "op": "JUMPDEST"
    },
    "12086": {
      "op": "DUP2"
    },
    "12087": {
      "op": "DUP4"
    },
    "12088": {
      "op": "MSTORE"
    },
    "12089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12095": {
      "op": "PUSH1",
      "value": "0xFB"
    },
    "12097": {
      "op": "SHL"
    },
    "12098": {
      "op": "SUB"
    },
    "12099": {
      "op": "DUP4"
    },
    "12100": {
      "op": "GT"
    },
    "12101": {
      "op": "ISZERO"
    },
    "12102": {
      "op": "PUSH2",
      "value": "0x2F4E"
    },
    "12105": {
      "op": "JUMPI"
    },
    "12106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12108": {
      "op": "DUP1"
    },
    "12109": {
      "op": "REVERT"
    },
    "12110": {
      "op": "JUMPDEST"
    },
    "12111": {
      "op": "DUP3"
    },
    "12112": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12114": {
      "op": "SHL"
    },
    "12115": {
      "op": "DUP1"
    },
    "12116": {
      "op": "DUP4"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12119": {
      "op": "DUP8"
    },
    "12120": {
      "op": "ADD"
    },
    "12121": {
      "op": "CALLDATACOPY"
    },
    "12122": {
      "op": "SWAP4"
    },
    "12123": {
      "op": "SWAP1"
    },
    "12124": {
      "op": "SWAP4"
    },
    "12125": {
      "op": "ADD"
    },
    "12126": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12128": {
      "op": "ADD"
    },
    "12129": {
      "op": "SWAP4"
    },
    "12130": {
      "op": "SWAP3"
    },
    "12131": {
      "op": "POP"
    },
    "12132": {
      "op": "POP"
    },
    "12133": {
      "op": "POP"
    },
    "12134": {
      "jump": "o",
      "op": "JUMP"
    },
    "12135": {
      "op": "JUMPDEST"
    },
    "12136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12142": {
      "op": "SHL"
    },
    "12143": {
      "op": "SUB"
    },
    "12144": {
      "op": "DUP7"
    },
    "12145": {
      "op": "DUP2"
    },
    "12146": {
      "op": "AND"
    },
    "12147": {
      "op": "DUP3"
    },
    "12148": {
      "op": "MSTORE"
    },
    "12149": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12153": {
      "op": "DUP1"
    },
    "12154": {
      "op": "DUP5"
    },
    "12155": {
      "op": "ADD"
    },
    "12156": {
      "op": "DUP3"
    },
    "12157": {
      "op": "SWAP1"
    },
    "12158": {
      "op": "MSTORE"
    },
    "12159": {
      "op": "SWAP1"
    },
    "12160": {
      "op": "DUP4"
    },
    "12161": {
      "op": "ADD"
    },
    "12162": {
      "op": "DUP7"
    },
    "12163": {
      "op": "SWAP1"
    },
    "12164": {
      "op": "MSTORE"
    },
    "12165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12167": {
      "op": "SWAP2"
    },
    "12168": {
      "op": "DUP8"
    },
    "12169": {
      "op": "SWAP2"
    },
    "12170": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12172": {
      "op": "DUP6"
    },
    "12173": {
      "op": "ADD"
    },
    "12174": {
      "op": "DUP5"
    },
    "12175": {
      "op": "JUMPDEST"
    },
    "12176": {
      "op": "DUP10"
    },
    "12177": {
      "op": "DUP2"
    },
    "12178": {
      "op": "LT"
    },
    "12179": {
      "op": "ISZERO"
    },
    "12180": {
      "op": "PUSH2",
      "value": "0x2FB6"
    },
    "12183": {
      "op": "JUMPI"
    },
    "12184": {
      "op": "DUP5"
    },
    "12185": {
      "op": "CALLDATALOAD"
    },
    "12186": {
      "op": "PUSH2",
      "value": "0x2FA2"
    },
    "12189": {
      "op": "DUP2"
    },
    "12190": {
      "op": "PUSH2",
      "value": "0x2940"
    },
    "12193": {
      "jump": "i",
      "op": "JUMP"
    },
    "12194": {
      "op": "JUMPDEST"
    },
    "12195": {
      "op": "DUP5"
    },
    "12196": {
      "op": "AND"
    },
    "12197": {
      "op": "DUP3"
    },
    "12198": {
      "op": "MSTORE"
    },
    "12199": {
      "op": "SWAP4"
    },
    "12200": {
      "op": "DUP3"
    },
    "12201": {
      "op": "ADD"
    },
    "12202": {
      "op": "SWAP4"
    },
    "12203": {
      "op": "SWAP1"
    },
    "12204": {
      "op": "DUP3"
    },
    "12205": {
      "op": "ADD"
    },
    "12206": {
      "op": "SWAP1"
    },
    "12207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12209": {
      "op": "ADD"
    },
    "12210": {
      "op": "PUSH2",
      "value": "0x2F8F"
    },
    "12213": {
      "op": "JUMP"
    },
    "12214": {
      "op": "JUMPDEST"
    },
    "12215": {
      "op": "POP"
    },
    "12216": {
      "op": "DUP6"
    },
    "12217": {
      "op": "DUP2"
    },
    "12218": {
      "op": "SUB"
    },
    "12219": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12221": {
      "op": "DUP8"
    },
    "12222": {
      "op": "ADD"
    },
    "12223": {
      "op": "MSTORE"
    },
    "12224": {
      "op": "DUP7"
    },
    "12225": {
      "op": "DUP2"
    },
    "12226": {
      "op": "MSTORE"
    },
    "12227": {
      "op": "DUP2"
    },
    "12228": {
      "op": "DUP2"
    },
    "12229": {
      "op": "ADD"
    },
    "12230": {
      "op": "SWAP4"
    },
    "12231": {
      "op": "POP"
    },
    "12232": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12234": {
      "op": "SWAP3"
    },
    "12235": {
      "op": "POP"
    },
    "12236": {
      "op": "DUP7"
    },
    "12237": {
      "op": "DUP4"
    },
    "12238": {
      "op": "SHL"
    },
    "12239": {
      "op": "DUP2"
    },
    "12240": {
      "op": "ADD"
    },
    "12241": {
      "op": "DUP3"
    },
    "12242": {
      "op": "ADD"
    },
    "12243": {
      "op": "DUP9"
    },
    "12244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12246": {
      "op": "JUMPDEST"
    },
    "12247": {
      "op": "DUP10"
    },
    "12248": {
      "op": "DUP2"
    },
    "12249": {
      "op": "LT"
    },
    "12250": {
      "op": "ISZERO"
    },
    "12251": {
      "op": "PUSH2",
      "value": "0x3048"
    },
    "12254": {
      "op": "JUMPI"
    },
    "12255": {
      "op": "DUP4"
    },
    "12256": {
      "op": "DUP4"
    },
    "12257": {
      "op": "SUB"
    },
    "12258": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "12260": {
      "op": "NOT"
    },
    "12261": {
      "op": "ADD"
    },
    "12262": {
      "op": "DUP8"
    },
    "12263": {
      "op": "MSTORE"
    },
    "12264": {
      "op": "DUP2"
    },
    "12265": {
      "op": "CALLDATALOAD"
    },
    "12266": {
      "op": "CALLDATASIZE"
    },
    "12267": {
      "op": "DUP13"
    },
    "12268": {
      "op": "SWAP1"
    },
    "12269": {
      "op": "SUB"
    },
    "12270": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "12272": {
      "op": "NOT"
    },
    "12273": {
      "op": "ADD"
    },
    "12274": {
      "op": "DUP2"
    },
    "12275": {
      "op": "SLT"
    },
    "12276": {
      "op": "PUSH2",
      "value": "0x2FFC"
    },
    "12279": {
      "op": "JUMPI"
    },
    "12280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12282": {
      "op": "DUP1"
    },
    "12283": {
      "op": "REVERT"
    },
    "12284": {
      "op": "JUMPDEST"
    },
    "12285": {
      "op": "DUP12"
    },
    "12286": {
      "op": "ADD"
    },
    "12287": {
      "op": "DUP6"
    },
    "12288": {
      "op": "DUP2"
    },
    "12289": {
      "op": "ADD"
    },
    "12290": {
      "op": "SWAP1"
    },
    "12291": {
      "op": "CALLDATALOAD"
    },
    "12292": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12301": {
      "op": "DUP2"
    },
    "12302": {
      "op": "GT"
    },
    "12303": {
      "op": "ISZERO"
    },
    "12304": {
      "op": "PUSH2",
      "value": "0x3018"
    },
    "12307": {
      "op": "JUMPI"
    },
    "12308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12310": {
      "op": "DUP1"
    },
    "12311": {
      "op": "REVERT"
    },
    "12312": {
      "op": "JUMPDEST"
    },
    "12313": {
      "op": "DUP1"
    },
    "12314": {
      "op": "DUP9"
    },
    "12315": {
      "op": "SHL"
    },
    "12316": {
      "op": "CALLDATASIZE"
    },
    "12317": {
      "op": "SUB"
    },
    "12318": {
      "op": "DUP3"
    },
    "12319": {
      "op": "SGT"
    },
    "12320": {
      "op": "ISZERO"
    },
    "12321": {
      "op": "PUSH2",
      "value": "0x3029"
    },
    "12324": {
      "op": "JUMPI"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12327": {
      "op": "DUP1"
    },
    "12328": {
      "op": "REVERT"
    },
    "12329": {
      "op": "JUMPDEST"
    },
    "12330": {
      "op": "PUSH2",
      "value": "0x3034"
    },
    "12333": {
      "op": "DUP6"
    },
    "12334": {
      "op": "DUP3"
    },
    "12335": {
      "op": "DUP5"
    },
    "12336": {
      "op": "PUSH2",
      "value": "0x2F35"
    },
    "12339": {
      "jump": "i",
      "op": "JUMP"
    },
    "12340": {
      "op": "JUMPDEST"
    },
    "12341": {
      "op": "SWAP9"
    },
    "12342": {
      "op": "DUP8"
    },
    "12343": {
      "op": "ADD"
    },
    "12344": {
      "op": "SWAP9"
    },
    "12345": {
      "op": "SWAP5"
    },
    "12346": {
      "op": "POP"
    },
    "12347": {
      "op": "POP"
    },
    "12348": {
      "op": "POP"
    },
    "12349": {
      "op": "SWAP1"
    },
    "12350": {
      "op": "DUP5"
    },
    "12351": {
      "op": "ADD"
    },
    "12352": {
      "op": "SWAP1"
    },
    "12353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12355": {
      "op": "ADD"
    },
    "12356": {
      "op": "PUSH2",
      "value": "0x2FD6"
    },
    "12359": {
      "op": "JUMP"
    },
    "12360": {
      "op": "JUMPDEST"
    },
    "12361": {
      "op": "POP"
    },
    "12362": {
      "op": "SWAP1"
    },
    "12363": {
      "op": "SWAP13"
    },
    "12364": {
      "op": "SWAP12"
    },
    "12365": {
      "op": "POP"
    },
    "12366": {
      "op": "POP"
    },
    "12367": {
      "op": "POP"
    },
    "12368": {
      "op": "POP"
    },
    "12369": {
      "op": "POP"
    },
    "12370": {
      "op": "POP"
    },
    "12371": {
      "op": "POP"
    },
    "12372": {
      "op": "POP"
    },
    "12373": {
      "op": "POP"
    },
    "12374": {
      "op": "POP"
    },
    "12375": {
      "op": "POP"
    },
    "12376": {
      "op": "POP"
    },
    "12377": {
      "jump": "o",
      "op": "JUMP"
    },
    "12378": {
      "op": "JUMPDEST"
    },
    "12379": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12381": {
      "op": "DUP1"
    },
    "12382": {
      "op": "DUP4"
    },
    "12383": {
      "op": "CALLDATALOAD"
    },
    "12384": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "12386": {
      "op": "NOT"
    },
    "12387": {
      "op": "DUP5"
    },
    "12388": {
      "op": "CALLDATASIZE"
    },
    "12389": {
      "op": "SUB"
    },
    "12390": {
      "op": "ADD"
    },
    "12391": {
      "op": "DUP2"
    },
    "12392": {
      "op": "SLT"
    },
    "12393": {
      "op": "PUSH2",
      "value": "0x3071"
    },
    "12396": {
      "op": "JUMPI"
    },
    "12397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12399": {
      "op": "DUP1"
    },
    "12400": {
      "op": "REVERT"
    },
    "12401": {
      "op": "JUMPDEST"
    },
    "12402": {
      "op": "DUP4"
    },
    "12403": {
      "op": "ADD"
    },
    "12404": {
      "op": "DUP1"
    },
    "12405": {
      "op": "CALLDATALOAD"
    },
    "12406": {
      "op": "SWAP2"
    },
    "12407": {
      "op": "POP"
    },
    "12408": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "12417": {
      "op": "DUP3"
    },
    "12418": {
      "op": "GT"
    },
    "12419": {
      "op": "ISZERO"
    },
    "12420": {
      "op": "PUSH2",
      "value": "0x308C"
    },
    "12423": {
      "op": "JUMPI"
    },
    "12424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12426": {
      "op": "DUP1"
    },
    "12427": {
      "op": "REVERT"
    },
    "12428": {
      "op": "JUMPDEST"
    },
    "12429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12431": {
      "op": "ADD"
    },
    "12432": {
      "op": "SWAP2"
    },
    "12433": {
      "op": "POP"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "12436": {
      "op": "DUP2"
    },
    "12437": {
      "op": "SWAP1"
    },
    "12438": {
      "op": "SHL"
    },
    "12439": {
      "op": "CALLDATASIZE"
    },
    "12440": {
      "op": "SUB"
    },
    "12441": {
      "op": "DUP3"
    },
    "12442": {
      "op": "SGT"
    },
    "12443": {
      "op": "ISZERO"
    },
    "12444": {
      "op": "PUSH2",
      "value": "0x2A14"
    },
    "12447": {
      "op": "JUMPI"
    },
    "12448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12450": {
      "op": "DUP1"
    },
    "12451": {
      "op": "REVERT"
    },
    "12452": {
      "op": "JUMPDEST"
    },
    "12453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12459": {
      "op": "SHL"
    },
    "12460": {
      "op": "SUB"
    },
    "12461": {
      "op": "DUP6"
    },
    "12462": {
      "op": "DUP2"
    },
    "12463": {
      "op": "AND"
    },
    "12464": {
      "op": "DUP3"
    },
    "12465": {
      "op": "MSTORE"
    },
    "12466": {
      "op": "DUP5"
    },
    "12467": {
      "op": "AND"
    },
    "12468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12470": {
      "op": "DUP3"
    },
    "12471": {
      "op": "ADD"
    },
    "12472": {
      "op": "MSTORE"
    },
    "12473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12475": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12477": {
      "op": "DUP3"
    },
    "12478": {
      "op": "ADD"
    },
    "12479": {
      "op": "DUP2"
    },
    "12480": {
      "op": "SWAP1"
    },
    "12481": {
      "op": "MSTORE"
    },
    "12482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12484": {
      "op": "SWAP1"
    },
    "12485": {
      "op": "PUSH2",
      "value": "0x30D1"
    },
    "12488": {
      "op": "SWAP1"
    },
    "12489": {
      "op": "DUP4"
    },
    "12490": {
      "op": "ADD"
    },
    "12491": {
      "op": "DUP5"
    },
    "12492": {
      "op": "DUP7"
    },
    "12493": {
      "op": "PUSH2",
      "value": "0x2F35"
    },
    "12496": {
      "jump": "i",
      "op": "JUMP"
    },
    "12497": {
      "op": "JUMPDEST"
    },
    "12498": {
      "op": "SWAP7"
    },
    "12499": {
      "op": "SWAP6"
    },
    "12500": {
      "op": "POP"
    },
    "12501": {
      "op": "POP"
    },
    "12502": {
      "op": "POP"
    },
    "12503": {
      "op": "POP"
    },
    "12504": {
      "op": "POP"
    },
    "12505": {
      "op": "POP"
    },
    "12506": {
      "jump": "o",
      "op": "JUMP"
    },
    "12507": {
      "op": "JUMPDEST"
    },
    "12508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12510": {
      "op": "DUP1"
    },
    "12511": {
      "op": "DUP3"
    },
    "12512": {
      "op": "MSTORE"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "12515": {
      "op": "SWAP1"
    },
    "12516": {
      "op": "DUP3"
    },
    "12517": {
      "op": "ADD"
    },
    "12518": {
      "op": "MSTORE"
    },
    "12519": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2062656E656669636961726965735F20616E64207368617265"
    },
    "12552": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12554": {
      "op": "DUP3"
    },
    "12555": {
      "op": "ADD"
    },
    "12556": {
      "op": "MSTORE"
    },
    "12557": {
      "op": "PUSH18",
      "value": "0xE6BE40D8CADCCEE8D040DAD2E6DAC2E8C6D"
    },
    "12576": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "12578": {
      "op": "SHL"
    },
    "12579": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12581": {
      "op": "DUP3"
    },
    "12582": {
      "op": "ADD"
    },
    "12583": {
      "op": "MSTORE"
    },
    "12584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12586": {
      "op": "ADD"
    },
    "12587": {
      "op": "SWAP1"
    },
    "12588": {
      "jump": "o",
      "op": "JUMP"
    },
    "12589": {
      "op": "JUMPDEST"
    },
    "12590": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12592": {
      "op": "DUP1"
    },
    "12593": {
      "op": "DUP3"
    },
    "12594": {
      "op": "MSTORE"
    },
    "12595": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "12597": {
      "op": "SWAP1"
    },
    "12598": {
      "op": "DUP3"
    },
    "12599": {
      "op": "ADD"
    },
    "12600": {
      "op": "MSTORE"
    },
    "12601": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2061646472657373207A65726F206973206E6F742061207661"
    },
    "12634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12636": {
      "op": "DUP3"
    },
    "12637": {
      "op": "ADD"
    },
    "12638": {
      "op": "MSTORE"
    },
    "12639": {
      "op": "PUSH15",
      "value": "0x6C69642062656E6566696369617279"
    },
    "12655": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "12657": {
      "op": "SHL"
    },
    "12658": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12660": {
      "op": "DUP3"
    },
    "12661": {
      "op": "ADD"
    },
    "12662": {
      "op": "MSTORE"
    },
    "12663": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12665": {
      "op": "ADD"
    },
    "12666": {
      "op": "SWAP1"
    },
    "12667": {
      "jump": "o",
      "op": "JUMP"
    },
    "12668": {
      "op": "JUMPDEST"
    },
    "12669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12671": {
      "op": "DUP1"
    },
    "12672": {
      "op": "DUP3"
    },
    "12673": {
      "op": "MSTORE"
    },
    "12674": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "12676": {
      "op": "SWAP1"
    },
    "12677": {
      "op": "DUP3"
    },
    "12678": {
      "op": "ADD"
    },
    "12679": {
      "op": "MSTORE"
    },
    "12680": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A207465737461746F72206973206E6F7420612076616C696420"
    },
    "12713": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12715": {
      "op": "DUP3"
    },
    "12716": {
      "op": "ADD"
    },
    "12717": {
      "op": "MSTORE"
    },
    "12718": {
      "op": "PUSH11",
      "value": "0x62656E6566696369617279"
    },
    "12730": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "12732": {
      "op": "SHL"
    },
    "12733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12735": {
      "op": "DUP3"
    },
    "12736": {
      "op": "ADD"
    },
    "12737": {
      "op": "MSTORE"
    },
    "12738": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12740": {
      "op": "ADD"
    },
    "12741": {
      "op": "SWAP1"
    },
    "12742": {
      "jump": "o",
      "op": "JUMP"
    },
    "12743": {
      "op": "JUMPDEST"
    },
    "12744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12746": {
      "op": "DUP1"
    },
    "12747": {
      "op": "DUP3"
    },
    "12748": {
      "op": "MSTORE"
    },
    "12749": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "12751": {
      "op": "SWAP1"
    },
    "12752": {
      "op": "DUP3"
    },
    "12753": {
      "op": "ADD"
    },
    "12754": {
      "op": "MSTORE"
    },
    "12755": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2073686172652063616E277420626520677265617465722074"
    },
    "12788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12790": {
      "op": "DUP3"
    },
    "12791": {
      "op": "ADD"
    },
    "12792": {
      "op": "MSTORE"
    },
    "12793": {
      "op": "PUSH12",
      "value": "0x68616E204D41585348415245"
    },
    "12806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12808": {
      "op": "SHL"
    },
    "12809": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12811": {
      "op": "DUP3"
    },
    "12812": {
      "op": "ADD"
    },
    "12813": {
      "op": "MSTORE"
    },
    "12814": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12816": {
      "op": "ADD"
    },
    "12817": {
      "op": "SWAP1"
    },
    "12818": {
      "jump": "o",
      "op": "JUMP"
    },
    "12819": {
      "op": "JUMPDEST"
    },
    "12820": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12822": {
      "op": "DUP1"
    },
    "12823": {
      "op": "DUP3"
    },
    "12824": {
      "op": "MSTORE"
    },
    "12825": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "12827": {
      "op": "SWAP1"
    },
    "12828": {
      "op": "DUP3"
    },
    "12829": {
      "op": "ADD"
    },
    "12830": {
      "op": "MSTORE"
    },
    "12831": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2073686172652063616E277420626520300000000000000000"
    },
    "12864": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12866": {
      "op": "DUP3"
    },
    "12867": {
      "op": "ADD"
    },
    "12868": {
      "op": "MSTORE"
    },
    "12869": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12871": {
      "op": "ADD"
    },
    "12872": {
      "op": "SWAP1"
    },
    "12873": {
      "jump": "o",
      "op": "JUMP"
    },
    "12874": {
      "op": "JUMPDEST"
    },
    "12875": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12877": {
      "op": "DUP1"
    },
    "12878": {
      "op": "DUP3"
    },
    "12879": {
      "op": "MSTORE"
    },
    "12880": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "12882": {
      "op": "SWAP1"
    },
    "12883": {
      "op": "DUP3"
    },
    "12884": {
      "op": "ADD"
    },
    "12885": {
      "op": "MSTORE"
    },
    "12886": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2072657175697265282072656C656173652074696D65203E20"
    },
    "12919": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12921": {
      "op": "DUP3"
    },
    "12922": {
      "op": "ADD"
    },
    "12923": {
      "op": "MSTORE"
    },
    "12924": {
      "op": "PUSH32",
      "value": "0x63757272656E742074696D65202B204255464645522029000000000000000000"
    },
    "12957": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12959": {
      "op": "DUP3"
    },
    "12960": {
      "op": "ADD"
    },
    "12961": {
      "op": "MSTORE"
    },
    "12962": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12964": {
      "op": "ADD"
    },
    "12965": {
      "op": "SWAP1"
    },
    "12966": {
      "jump": "o",
      "op": "JUMP"
    },
    "12967": {
      "op": "JUMPDEST"
    },
    "12968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12970": {
      "op": "DUP1"
    },
    "12971": {
      "op": "DUP3"
    },
    "12972": {
      "op": "MSTORE"
    },
    "12973": {
      "op": "PUSH1",
      "value": "0x37"
    },
    "12975": {
      "op": "SWAP1"
    },
    "12976": {
      "op": "DUP3"
    },
    "12977": {
      "op": "ADD"
    },
    "12978": {
      "op": "MSTORE"
    },
    "12979": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A2061646472657373207A65726F206973206E6F742061207661"
    },
    "13012": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13014": {
      "op": "DUP3"
    },
    "13015": {
      "op": "ADD"
    },
    "13016": {
      "op": "MSTORE"
    },
    "13017": {
      "op": "PUSH32",
      "value": "0x6C69642062656E65666963696172794F66455243373231000000000000000000"
    },
    "13050": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13052": {
      "op": "DUP3"
    },
    "13053": {
      "op": "ADD"
    },
    "13054": {
      "op": "MSTORE"
    },
    "13055": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13057": {
      "op": "ADD"
    },
    "13058": {
      "op": "SWAP1"
    },
    "13059": {
      "jump": "o",
      "op": "JUMP"
    },
    "13060": {
      "op": "JUMPDEST"
    },
    "13061": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13065": {
      "op": "DUP3"
    },
    "13066": {
      "op": "DUP5"
    },
    "13067": {
      "op": "SUB"
    },
    "13068": {
      "op": "SLT"
    },
    "13069": {
      "op": "ISZERO"
    },
    "13070": {
      "op": "PUSH2",
      "value": "0x3316"
    },
    "13073": {
      "op": "JUMPI"
    },
    "13074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13076": {
      "op": "DUP1"
    },
    "13077": {
      "op": "REVERT"
    },
    "13078": {
      "op": "JUMPDEST"
    },
    "13079": {
      "op": "POP"
    },
    "13080": {
      "op": "MLOAD"
    },
    "13081": {
      "op": "SWAP2"
    },
    "13082": {
      "op": "SWAP1"
    },
    "13083": {
      "op": "POP"
    },
    "13084": {
      "jump": "o",
      "op": "JUMP"
    },
    "13085": {
      "op": "JUMPDEST"
    },
    "13086": {
      "op": "DUP2"
    },
    "13087": {
      "op": "DUP2"
    },
    "13088": {
      "op": "SUB"
    },
    "13089": {
      "op": "DUP2"
    },
    "13090": {
      "op": "DUP2"
    },
    "13091": {
      "op": "GT"
    },
    "13092": {
      "op": "ISZERO"
    },
    "13093": {
      "op": "PUSH2",
      "value": "0x2DFC"
    },
    "13096": {
      "op": "JUMPI"
    },
    "13097": {
      "op": "PUSH2",
      "value": "0x2DFC"
    },
    "13100": {
      "op": "PUSH2",
      "value": "0x2DD3"
    },
    "13103": {
      "jump": "i",
      "op": "JUMP"
    },
    "13104": {
      "op": "JUMPDEST"
    },
    "13105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13107": {
      "op": "JUMPDEST"
    },
    "13108": {
      "op": "DUP4"
    },
    "13109": {
      "op": "DUP2"
    },
    "13110": {
      "op": "LT"
    },
    "13111": {
      "op": "ISZERO"
    },
    "13112": {
      "op": "PUSH2",
      "value": "0x334B"
    },
    "13115": {
      "op": "JUMPI"
    },
    "13116": {
      "op": "DUP2"
    },
    "13117": {
      "op": "DUP2"
    },
    "13118": {
      "op": "ADD"
    },
    "13119": {
      "op": "MLOAD"
    },
    "13120": {
      "op": "DUP4"
    },
    "13121": {
      "op": "DUP3"
    },
    "13122": {
      "op": "ADD"
    },
    "13123": {
      "op": "MSTORE"
    },
    "13124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13126": {
      "op": "ADD"
    },
    "13127": {
      "op": "PUSH2",
      "value": "0x3333"
    },
    "13130": {
      "op": "JUMP"
    },
    "13131": {
      "op": "JUMPDEST"
    },
    "13132": {
      "op": "POP"
    },
    "13133": {
      "op": "POP"
    },
    "13134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13136": {
      "op": "SWAP2"
    },
    "13137": {
      "op": "ADD"
    },
    "13138": {
      "op": "MSTORE"
    },
    "13139": {
      "jump": "o",
      "op": "JUMP"
    },
    "13140": {
      "op": "JUMPDEST"
    },
    "13141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13143": {
      "op": "DUP2"
    },
    "13144": {
      "op": "MLOAD"
    },
    "13145": {
      "op": "DUP1"
    },
    "13146": {
      "op": "DUP5"
    },
    "13147": {
      "op": "MSTORE"
    },
    "13148": {
      "op": "PUSH2",
      "value": "0x336C"
    },
    "13151": {
      "op": "DUP2"
    },
    "13152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13154": {
      "op": "DUP7"
    },
    "13155": {
      "op": "ADD"
    },
    "13156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13158": {
      "op": "DUP7"
    },
    "13159": {
      "op": "ADD"
    },
    "13160": {
      "op": "PUSH2",
      "value": "0x3330"
    },
    "13163": {
      "jump": "i",
      "op": "JUMP"
    },
    "13164": {
      "op": "JUMPDEST"
    },
    "13165": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13167": {
      "op": "ADD"
    },
    "13168": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13170": {
      "op": "NOT"
    },
    "13171": {
      "op": "AND"
    },
    "13172": {
      "op": "SWAP3"
    },
    "13173": {
      "op": "SWAP1"
    },
    "13174": {
      "op": "SWAP3"
    },
    "13175": {
      "op": "ADD"
    },
    "13176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13178": {
      "op": "ADD"
    },
    "13179": {
      "op": "SWAP3"
    },
    "13180": {
      "op": "SWAP2"
    },
    "13181": {
      "op": "POP"
    },
    "13182": {
      "op": "POP"
    },
    "13183": {
      "jump": "o",
      "op": "JUMP"
    },
    "13184": {
      "op": "JUMPDEST"
    },
    "13185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13191": {
      "op": "SHL"
    },
    "13192": {
      "op": "SUB"
    },
    "13193": {
      "op": "DUP7"
    },
    "13194": {
      "op": "DUP2"
    },
    "13195": {
      "op": "AND"
    },
    "13196": {
      "op": "DUP3"
    },
    "13197": {
      "op": "MSTORE"
    },
    "13198": {
      "op": "DUP6"
    },
    "13199": {
      "op": "AND"
    },
    "13200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13202": {
      "op": "DUP3"
    },
    "13203": {
      "op": "ADD"
    },
    "13204": {
      "op": "MSTORE"
    },
    "13205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13207": {
      "op": "DUP2"
    },
    "13208": {
      "op": "ADD"
    },
    "13209": {
      "op": "DUP5"
    },
    "13210": {
      "op": "SWAP1"
    },
    "13211": {
      "op": "MSTORE"
    },
    "13212": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13214": {
      "op": "DUP2"
    },
    "13215": {
      "op": "ADD"
    },
    "13216": {
      "op": "DUP4"
    },
    "13217": {
      "op": "SWAP1"
    },
    "13218": {
      "op": "MSTORE"
    },
    "13219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13221": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13223": {
      "op": "DUP3"
    },
    "13224": {
      "op": "ADD"
    },
    "13225": {
      "op": "DUP2"
    },
    "13226": {
      "op": "SWAP1"
    },
    "13227": {
      "op": "MSTORE"
    },
    "13228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13230": {
      "op": "SWAP1"
    },
    "13231": {
      "op": "PUSH2",
      "value": "0x27E4"
    },
    "13234": {
      "op": "SWAP1"
    },
    "13235": {
      "op": "DUP4"
    },
    "13236": {
      "op": "ADD"
    },
    "13237": {
      "op": "DUP5"
    },
    "13238": {
      "op": "PUSH2",
      "value": "0x3354"
    },
    "13241": {
      "jump": "i",
      "op": "JUMP"
    },
    "13242": {
      "op": "JUMPDEST"
    },
    "13243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13245": {
      "op": "DUP1"
    },
    "13246": {
      "op": "DUP3"
    },
    "13247": {
      "op": "MSTORE"
    },
    "13248": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "13250": {
      "op": "SWAP1"
    },
    "13251": {
      "op": "DUP3"
    },
    "13252": {
      "op": "ADD"
    },
    "13253": {
      "op": "MSTORE"
    },
    "13254": {
      "op": "PUSH32",
      "value": "0x57696C6C65723A204E6F20455243323020746F6B656E7320746F2072656C6561"
    },
    "13287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "13289": {
      "op": "DUP3"
    },
    "13290": {
      "op": "ADD"
    },
    "13291": {
      "op": "MSTORE"
    },
    "13292": {
      "op": "PUSH2",
      "value": "0x7365"
    },
    "13295": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "13297": {
      "op": "SHL"
    },
    "13298": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "13300": {
      "op": "DUP3"
    },
    "13301": {
      "op": "ADD"
    },
    "13302": {
      "op": "MSTORE"
    },
    "13303": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "13305": {
      "op": "ADD"
    },
    "13306": {
      "op": "SWAP1"
    },
    "13307": {
      "jump": "o",
      "op": "JUMP"
    },
    "13308": {
      "op": "JUMPDEST"
    },
    "13309": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "13314": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "13316": {
      "op": "SHL"
    },
    "13317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13319": {
      "op": "MSTORE"
    },
    "13320": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "13322": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "13324": {
      "op": "MSTORE"
    },
    "13325": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "13327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13329": {
      "op": "REVERT"
    },
    "13330": {
      "op": "JUMPDEST"
    },
    "13331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13335": {
      "op": "DUP3"
    },
    "13336": {
      "op": "DUP5"
    },
    "13337": {
      "op": "SUB"
    },
    "13338": {
      "op": "SLT"
    },
    "13339": {
      "op": "ISZERO"
    },
    "13340": {
      "op": "PUSH2",
      "value": "0x3424"
    },
    "13343": {
      "op": "JUMPI"
    },
    "13344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13346": {
      "op": "DUP1"
    },
    "13347": {
      "op": "REVERT"
    },
    "13348": {
      "op": "JUMPDEST"
    },
    "13349": {
      "op": "DUP2"
    },
    "13350": {
      "op": "MLOAD"
    },
    "13351": {
      "op": "DUP1"
    },
    "13352": {
      "op": "ISZERO"
    },
    "13353": {
      "op": "ISZERO"
    },
    "13354": {
      "op": "DUP2"
    },
    "13355": {
      "op": "EQ"
    },
    "13356": {
      "op": "PUSH2",
      "value": "0x25BF"
    },
    "13359": {
      "op": "JUMPI"
    },
    "13360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13362": {
      "op": "DUP1"
    },
    "13363": {
      "op": "REVERT"
    },
    "13364": {
      "op": "JUMPDEST"
    },
    "13365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13367": {
      "op": "DUP3"
    },
    "13368": {
      "op": "MLOAD"
    },
    "13369": {
      "op": "PUSH2",
      "value": "0x3446"
    },
    "13372": {
      "op": "DUP2"
    },
    "13373": {
      "op": "DUP5"
    },
    "13374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13376": {
      "op": "DUP8"
    },
    "13377": {
      "op": "ADD"
    },
    "13378": {
      "op": "PUSH2",
      "value": "0x3330"
    },
    "13381": {
      "jump": "i",
      "op": "JUMP"
    },
    "13382": {
      "op": "JUMPDEST"
    },
    "13383": {
      "op": "SWAP2"
    },
    "13384": {
      "op": "SWAP1"
    },
    "13385": {
      "op": "SWAP2"
    },
    "13386": {
      "op": "ADD"
    },
    "13387": {
      "op": "SWAP3"
    },
    "13388": {
      "op": "SWAP2"
    },
    "13389": {
      "op": "POP"
    },
    "13390": {
      "op": "POP"
    },
    "13391": {
      "jump": "o",
      "op": "JUMP"
    },
    "13392": {
      "op": "JUMPDEST"
    },
    "13393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13395": {
      "op": "DUP2"
    },
    "13396": {
      "op": "MSTORE"
    },
    "13397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "13399": {
      "op": "PUSH2",
      "value": "0x25BF"
    },
    "13402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13404": {
      "op": "DUP4"
    },
    "13405": {
      "op": "ADD"
    },
    "13406": {
      "op": "DUP5"
    },
    "13407": {
      "op": "PUSH2",
      "value": "0x3354"
    },
    "13410": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "79a60e116dce8ac50b8e4021ec12755a58681674",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title Willer\n * @author DimaKush\n *\n */\ncontract Willer is Ownable, ReentrancyGuard {\n    using Math for uint;\n    using SafeERC20 for IERC20;\n\n    struct Will {\n        address[] beneficiaries;\n        uint sumShares;\n        address beneficiaryOfERC721;\n        uint releaseTime;\n        uint[] shares;\n    }\n\n    uint BUFFER = 60;\n    uint MIN_BUFFER = 60;\n    uint MAXSHARE = 10;\n    uint REAP_DELAY = 500000000; //\n    address treasuryAddress = address(this);\n\n    mapping(address => Will) private testatorToWill;\n\n    modifier releasable(address _testator) {\n        require(\n            block.timestamp >= testatorToWill[_testator].releaseTime,\n            \"Willer: unreleasable\"\n        );\n        _;\n    }\n\n    modifier releasableToTreasury(address _testator) {\n        require(\n            block.timestamp >=\n                testatorToWill[_testator].releaseTime + REAP_DELAY,\n            \"Willer: Too early to reap\"\n        );\n        _;\n    }\n\n    modifier validReleaseTime(uint releaseTime_) {\n        require(\n            releaseTime_ >= block.timestamp + BUFFER,\n            \"Willer: require( release time > current time + BUFFER )\"\n        );\n        _;\n    }\n\n    modifier validBeneficiaryOfERC721(address beneficiaryOfERC721_) {\n        require(\n            beneficiaryOfERC721_ != address(0),\n            \"Willer: address zero is not a valid beneficiaryOfERC721\"\n        );\n        _;\n    }\n\n    modifier validBeneficiariesAndShares(\n        address[] calldata beneficiaries_,\n        uint[] calldata shares_,\n        address testator_\n    ) {\n        require(\n            beneficiaries_.length == shares_.length,\n            \"Willer: beneficiaries_ and shares_ length mismatch\"\n        );\n\n        for (uint i; i < beneficiaries_.length; i++) {\n            require(\n                beneficiaries_[i] != address(0),\n                \"Willer: address zero is not a valid beneficiary\"\n            );\n            require(\n                beneficiaries_[i] != testator_,\n                \"Willer: testator is not a valid beneficiary\"\n            );\n            require(\n                shares_[i] <= MAXSHARE,\n                \"Willer: share can't be greater than MAXSHARE\"\n            );\n            require(shares_[i] != 0, \"Willer: share can't be 0\");\n        }\n        _;\n    }\n\n    modifier validShares(uint[] calldata shares_) {\n        for (uint i; i < shares_.length; i++) {\n            require(\n                shares_[i] <= MAXSHARE,\n                \"Willer: share can't be greater than MAXSHARE\"\n            );\n            require(shares_[i] >= 0, \"Willer: share can't be 0\");\n        }\n        _;\n    }\n\n    modifier willExists(address _testator) {\n        require(\n            (testatorToWill[_testator].releaseTime != 0 &&\n                testatorToWill[_testator].beneficiaries.length != 0 &&\n                testatorToWill[_testator].beneficiaryOfERC721 != address(0)),\n            \"Willer: will doesn't exist\"\n        );\n        _;\n    }\n\n    modifier sameLengthArrays(\n        address[] calldata beneficiaries_,\n        uint[] calldata shares_\n    ) {\n        require(\n            beneficiaries_.length == shares_.length,\n            \"Willer: beneficiaries_ and shares_ length mismatch\"\n        );\n        _;\n    }\n\n    // add events\n    // event ReleasedERC20(address owner, address beneficiary, address tokenERC20Address);\n    // event ReleasedERC721(address owner, address beneficiary, address tokenERC721Address);\n    // event ReleasedERC1155(address owner, address beneficiary, address tokenERC1155Address);\n    // event NewReleaseTime(uint releaseTime);\n    // event NewBeneficiary(address beneficiary);\n\n    modifier executorIsBeneficiary(address _testator) {\n        bool _executorIsBeneficiary = false;\n        for (\n            uint i = 0;\n            i < testatorToWill[_testator].beneficiaries.length;\n            i++\n        ) {\n            if (msg.sender == testatorToWill[_testator].beneficiaries[i]) {\n                _executorIsBeneficiary = true;\n            }\n        }\n        if (msg.sender == testatorToWill[_testator].beneficiaryOfERC721) {\n            _executorIsBeneficiary = true;\n        }\n\n        require(_executorIsBeneficiary, \"Willer: executor is not beneficiary\");\n        _;\n    }\n\n    function addWill(\n        address[] calldata beneficiaries_,\n        uint[] calldata shares_,\n        address beneficiaryOfERC721_,\n        uint releaseTime_\n    )\n        public\n        validBeneficiariesAndShares(beneficiaries_, shares_, msg.sender)\n        validReleaseTime(releaseTime_)\n        validBeneficiaryOfERC721(beneficiaryOfERC721_)\n        validShares(shares_)\n    {\n        Will storage w = testatorToWill[msg.sender];\n        w.beneficiaries = beneficiaries_;\n        w.shares = shares_;\n        w.sumShares = 0;\n        w.beneficiaryOfERC721 = beneficiaryOfERC721_;\n        w.releaseTime = releaseTime_;\n\n        for (uint i = 0; i < shares_.length; i++) {\n            w.sumShares += shares_[i];\n        }\n    }\n\n    function getBuffer() public view returns (uint) {\n        return BUFFER;\n    }\n\n    function getReapDelay() public view returns (uint) {\n        return REAP_DELAY;\n    }\n\n    function getMaxShare() public view returns (uint) {\n        return MAXSHARE;\n    }\n\n    function getReleaseTime(address testator) public view returns (uint) {\n        return testatorToWill[testator].releaseTime;\n    }\n\n    function getBeneficiaries(\n        address testator\n    ) public view returns (address[] memory) {\n        return testatorToWill[testator].beneficiaries;\n    }\n\n    function getShares(address testator) public view returns (uint[] memory) {\n        return testatorToWill[testator].shares;\n    }\n\n    function getSumShares(address testator) public view returns (uint) {\n        return testatorToWill[testator].sumShares;\n    }\n\n    function getBeneficiaryOfERC721(\n        address _testator\n    ) public view returns (address beneficiaryOfERC721) {\n        return testatorToWill[_testator].beneficiaryOfERC721;\n    }\n\n    // function timeNow() public view returns(uint) {\n    //     return block.timestamp;\n    // }\n\n    function setNewBeneficiaries(\n        address[] calldata newBeneficiaries,\n        uint[] calldata newShares\n    )\n        public\n        willExists(msg.sender)\n        validBeneficiariesAndShares(newBeneficiaries, newShares, msg.sender)\n        returns (bool)\n    {\n        testatorToWill[msg.sender].beneficiaries = newBeneficiaries;\n        testatorToWill[msg.sender].shares = newShares;\n        // emit NewBeneficiary(beneficiary);\n        return true;\n    }\n\n    function setNewReleaseTime(\n        uint newReleaseTime\n    )\n        external\n        willExists(msg.sender)\n        validReleaseTime(newReleaseTime)\n        returns (uint)\n    {\n        testatorToWill[msg.sender].releaseTime = newReleaseTime;\n        // emit NewReleaseTime(testatorToWill[msg.sender]);\n        return testatorToWill[msg.sender].releaseTime;\n    }\n\n    function setNewBeneficiaryOfERC721(\n        address newBeneficiaryOfERC721\n    )\n        public\n        willExists(msg.sender)\n        validBeneficiaryOfERC721(newBeneficiaryOfERC721)\n    {\n        testatorToWill[msg.sender].beneficiaryOfERC721 = newBeneficiaryOfERC721;\n        // emit NewBeneficiaryOfERC721(beneficiary);\n    }\n\n    function releaseERC20ToTreasury(\n        address testator,\n        IERC20 tokenERC20\n    ) private {\n        uint balance = tokenERC20.balanceOf(testator);\n        uint bequest = 0;\n        require(balance != 0, \"Willer: No ERC20 tokens to release\");\n        uint allowed = tokenERC20.allowance(testator, address(this));\n        require(allowed != 0, \"Willer: ERC20 zero allowance\");\n        if (allowed < balance) {\n            balance = allowed;\n        }\n        tokenERC20.safeTransferFrom(testator, treasuryAddress, balance);\n    }\n\n    function releaseERC20(\n        address testator,\n        IERC20 tokenERC20 // executorIsBeneficiary(testator)\n    ) private {\n        uint balance = tokenERC20.balanceOf(testator);\n        uint bequest = 0;\n        require(balance != 0, \"Willer: No ERC20 tokens to release\");\n        uint allowed = tokenERC20.allowance(testator, address(this));\n        require(allowed != 0, \"Willer: ERC20 zero allowance\");\n        if (allowed < balance) {\n            balance = allowed;\n        }\n        for (\n            uint i = 0;\n            i < testatorToWill[testator].beneficiaries.length;\n            i++\n        ) {\n            bequest = balance.mulDiv(\n                testatorToWill[testator].shares[i],\n                testatorToWill[testator].sumShares\n            );\n            // last beneficiary receives bequest and modulo\n            if (i == testatorToWill[testator].beneficiaries.length - 1) {\n                bequest = tokenERC20.balanceOf(testator);\n            }\n            tokenERC20.safeTransferFrom(\n                testator,\n                testatorToWill[testator].beneficiaries[i],\n                bequest\n            );\n            // emit ReleasedERC20(testator, beneficiary, tokenERC20);\n        }\n    }\n\n    function batchReleaseERC20(\n        address testator,\n        IERC20[] calldata tokenERC20List\n    )\n        external\n        willExists(testator)\n        releasable(testator)\n        executorIsBeneficiary(testator)\n        nonReentrant()\n    {\n        for (uint i = 0; i < tokenERC20List.length; i++) {\n            releaseERC20(testator, tokenERC20List[i]);\n        }\n    }\n\n    function batchReleaseERC20ToTreasury(\n        address testator,\n        IERC20[] calldata tokenERC20List\n    )\n        external\n        willExists(testator)\n        releasableToTreasury(testator)\n        nonReentrant()\n    {\n        for (uint i = 0; i < tokenERC20List.length; i++) {\n            releaseERC20ToTreasury(testator, tokenERC20List[i]);\n        }\n    }\n\n    function releaseERC721(\n        address testator,\n        IERC721 tokenERC721,\n        uint[] calldata tokenIdList\n    )\n        private\n    {\n        for (uint i = 0; i < tokenIdList.length; i++) {\n            tokenERC721.safeTransferFrom(\n                testator,\n                testatorToWill[testator].beneficiaryOfERC721,\n                tokenIdList[i]\n            );\n        }\n        // emit ReleasedERC721(testator, beneficiaryOfERC721, tokenERC721);\n    }\n\n    function releaseERC721ToTreasury(\n        address testator,\n        IERC721 tokenERC721,\n        uint[] calldata tokenIdList\n    ) private {\n        for (uint i = 0; i < tokenIdList.length; i++) {\n            tokenERC721.safeTransferFrom(\n                testator,\n                treasuryAddress,\n                tokenIdList[i]\n            );\n        }\n        // emit ReleasedERC721(testator, beneficiaryOfERC721, tokenERC721);\n    }\n\n    function batchReleaseERC721(\n        address testator,\n        IERC721[] calldata tokenERC721List,\n        uint[][] calldata tokenIdLists\n    )\n        external\n        willExists(testator)\n        releasable(testator)\n        executorIsBeneficiary(testator)\n        nonReentrant()\n    {\n        for (uint i = 0; i < tokenERC721List.length; i++) {\n            releaseERC721(testator, tokenERC721List[i], tokenIdLists[i]);\n        }\n    }\n\n    function batchReleaseERC721ToTreasury(\n        address testator,\n        IERC721[] calldata tokenERC721List,\n        uint[][] calldata tokenIdLists\n    ) external \n    willExists(testator) \n    releasableToTreasury(testator)\n    nonReentrant()\n    {\n        for (uint i = 0; i < tokenERC721List.length; i++) {\n            releaseERC721ToTreasury(\n                testator,\n                tokenERC721List[i],\n                tokenIdLists[i]\n            );\n        }\n    }\n\n    function releaseERC1155(\n        address testator,\n        IERC1155 tokenERC1155,\n        uint tokenId\n    )\n        internal\n    {\n        uint balance = tokenERC1155.balanceOf(testator, tokenId);\n        uint bequest = 0;\n        for (\n            uint i = 0;\n            i < testatorToWill[testator].beneficiaries.length;\n            i++\n        ) {\n            bequest = balance.mulDiv(\n                testatorToWill[testator].shares[i],\n                testatorToWill[testator].sumShares\n            );\n            // last beneficiary receives bequest and modulo\n            if (i == testatorToWill[testator].beneficiaries.length - 1) {\n                bequest = tokenERC1155.balanceOf(testator, tokenId);\n            }\n            tokenERC1155.safeTransferFrom(\n                testator,\n                testatorToWill[testator].beneficiaries[i],\n                tokenId,\n                bequest,\n                bytes(\"\")\n            );\n        }\n        // emit ReleasedERC1155(testator, beneficiary, address(tokenERC1155));\n    }\n\n    function releaseERC1155ToTreasury(\n        address testator,\n        IERC1155 tokenERC1155,\n        uint tokenId\n    ) private {\n        uint balance = tokenERC1155.balanceOf(testator, tokenId);\n        uint bequest = 0;\n        for (\n            uint i = 0;\n            i < testatorToWill[testator].beneficiaries.length;\n            i++\n        ) {\n            bequest = balance.mulDiv(\n                testatorToWill[testator].shares[i],\n                testatorToWill[testator].sumShares\n            );\n            // last beneficiary receives bequest and modulo\n            if (i == testatorToWill[testator].beneficiaries.length - 1) {\n                bequest = tokenERC1155.balanceOf(testator, tokenId);\n            }\n            tokenERC1155.safeTransferFrom(\n                testator,\n                treasuryAddress,\n                tokenId,\n                bequest,\n                bytes(\"\")\n            );\n        }\n        // emit ReleasedERC1155(testator, beneficiary, address(tokenERC1155));\n    }\n\n    function batchReleaseERC1155(\n        address testator,\n        IERC1155 tokenERC1155,\n        uint[] calldata tokenIdLists\n    )\n        external\n        willExists(testator)\n        releasable(testator)\n        executorIsBeneficiary(testator)\n        nonReentrant()\n    {\n        for (uint i = 0; i < tokenIdLists.length; i++) {\n            releaseERC1155(testator, tokenERC1155, tokenIdLists[i]);\n        }\n    }\n\n    function batchReleaseERC1155ToTreasury(\n        address testator,\n        IERC1155 tokenERC1155,\n        uint[] calldata tokenIdLists\n    ) external \n    willExists(testator) \n    releasableToTreasury(testator) \n    nonReentrant()\n    {\n        for (uint i = 0; i < tokenIdLists.length; i++) {\n            releaseERC1155ToTreasury(\n                testator,\n                tokenERC1155,\n                tokenIdLists[i]\n            );\n        }\n    }\n\n    function batchRelease(\n        address testator,\n        IERC20[] calldata tokenERC20List,\n        IERC721[] calldata tokenERC721List,\n        IERC1155[] calldata tokenERC1155List,\n        uint[][] calldata ERC721tokenIdLists,\n        uint[][] calldata ERC1155tokenIdLists\n    ) external {\n        this.batchReleaseERC20(testator, tokenERC20List);\n        this.batchReleaseERC721(testator, tokenERC721List, ERC721tokenIdLists);\n        for (uint i = 0; i < tokenERC1155List.length; i++) {\n            this.batchReleaseERC1155(\n                testator,\n                tokenERC1155List[i],\n                ERC1155tokenIdLists[i]\n            );\n        }\n    }\n\n    function batchReleaseToTreasury(\n        address testator,\n        IERC20[] calldata tokenERC20List,\n        IERC721[] calldata tokenERC721List,\n        IERC1155[] calldata tokenERC1155List,\n        uint[][] calldata ERC721tokenIdLists,\n        uint[][] calldata ERC1155tokenIdLists\n    ) external willExists(testator) releasableToTreasury(testator) {\n        this.batchReleaseERC20ToTreasury(testator, tokenERC20List);\n        this.batchReleaseERC721ToTreasury(\n            testator,\n            tokenERC721List,\n            ERC721tokenIdLists\n        );\n        for (uint i = 0; i < tokenERC1155List.length; i++) {\n            this.batchReleaseERC1155ToTreasury(\n                testator,\n                tokenERC1155List[i],\n                ERC1155tokenIdLists[i]\n            );\n        }\n    }\n\n    function setTreasuryAddress(address _treasuryAddress) public onlyOwner {\n        treasuryAddress = _treasuryAddress;\n    }\n\n    function getTreasuryAddress() public view returns (address) {\n        return treasuryAddress;\n    }\n}\n",
  "sourceMap": "520:16225:11:-:0;;;810:2;796:16;;;;818:20;;860:2;844:18;;886:9;868:27;;904:39;;;-1:-1:-1;;;;;;904:39:11;938:4;904:39;;;520:16225;;;;;;;;;-1:-1:-1;936:32:0;719:10:8;936:18:0;:32::i;:::-;1716:1:1;1821:22;;520:16225:11;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;520:16225:11:-;;;;;;;",
  "sourcePath": "contracts/Willer.sol",
  "type": "contract"
}