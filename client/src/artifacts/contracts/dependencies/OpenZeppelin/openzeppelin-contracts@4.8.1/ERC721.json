{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/ERC721.sol",
    "12": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721.sol",
    "13": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721Receiver.sol",
    "15": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "16": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Address.sol",
    "17": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Context.sol",
    "19": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Strings.sol",
    "20": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/introspection/ERC165.sol",
    "21": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/introspection/IERC165.sol",
    "22": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/math/Math.sol"
  },
  "ast": {
    "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        6625
      ],
      "Context": [
        6227
      ],
      "ERC165": [
        6649
      ],
      "ERC721": [
        4806
      ],
      "IERC165": [
        6239
      ],
      "IERC721": [
        2051
      ],
      "IERC721Metadata": [
        6719
      ],
      "IERC721Receiver": [
        6692
      ],
      "Math": [
        6205
      ],
      "Strings": [
        6894
      ]
    },
    "id": 4807,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3863,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:11"
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 3864,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 2052,
        "src": "132:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 3865,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6693,
        "src": "156:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 3866,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6720,
        "src": "188:42:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 3867,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6626,
        "src": "231:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 3868,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6228,
        "src": "265:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 3869,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6895,
        "src": "299:33:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 3870,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4807,
        "sourceUnit": 6650,
        "src": "333:46:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3872,
              "name": "Context",
              "nameLocations": [
                "647:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6227,
              "src": "647:7:11"
            },
            "id": 3873,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:11"
          },
          {
            "baseName": {
              "id": 3874,
              "name": "ERC165",
              "nameLocations": [
                "656:6:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6649,
              "src": "656:6:11"
            },
            "id": 3875,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:11"
          },
          {
            "baseName": {
              "id": 3876,
              "name": "IERC721",
              "nameLocations": [
                "664:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2051,
              "src": "664:7:11"
            },
            "id": 3877,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:11"
          },
          {
            "baseName": {
              "id": 3878,
              "name": "IERC721Metadata",
              "nameLocations": [
                "673:15:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6719,
              "src": "673:15:11"
            },
            "id": 3879,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:11"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3871,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:11",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 4806,
        "linearizedBaseContracts": [
          4806,
          6719,
          2051,
          6649,
          6239,
          6227
        ],
        "name": "ERC721",
        "nameLocation": "637:6:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3882,
            "libraryName": {
              "id": 3880,
              "name": "Address",
              "nameLocations": [
                "701:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6625,
              "src": "701:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:11",
            "typeName": {
              "id": 3881,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 3885,
            "libraryName": {
              "id": 3883,
              "name": "Strings",
              "nameLocations": [
                "732:7:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6894,
              "src": "732:7:11"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:11",
            "typeName": {
              "id": 3884,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3887,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "776:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3886,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3889,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "823:22:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3888,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3893,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:11",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "898:43:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3892,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3890,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3891,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3897,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:11",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "992:45:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3896,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3894,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3895,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3901,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:11",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "1093:51:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 3900,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3898,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3899,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:11",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3907,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:11",
            "nodeType": "VariableDeclaration",
            "scope": 4806,
            "src": "1199:71:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 3906,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 3902,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:11",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3905,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 3903,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 3904,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3923,
              "nodeType": "Block",
              "src": "1446:57:11",
              "statements": [
                {
                  "expression": {
                    "id": 3917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3915,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3887,
                      "src": "1456:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3916,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3910,
                      "src": "1464:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3918,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:11"
                },
                {
                  "expression": {
                    "id": 3921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3919,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3889,
                      "src": "1479:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3920,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3912,
                      "src": "1489:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3922,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:11"
                }
              ]
            },
            "documentation": {
              "id": 3908,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:11",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 3924,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3910,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3924,
                  "src": "1402:19:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3909,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3912,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3924,
                  "src": "1423:21:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3911,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:11"
            },
            "returnParameters": {
              "id": 3914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:11"
            },
            "scope": 4806,
            "src": "1390:113:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6238,
              6648
            ],
            "body": {
              "id": 3954,
              "nodeType": "Block",
              "src": "1678:192:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 3940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3935,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1707:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3937,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2051,
                                "src": "1727:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2051_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2051_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 3936,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 3938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2051",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 3939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1736:11:11",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3941,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1763:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3943,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6719,
                                "src": "1783:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$6719_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$6719_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 3942,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 3944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$6719",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 3945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1800:11:11",
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 3950,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3927,
                          "src": "1851:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 3948,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$4806_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 3949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1833:17:11",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6648,
                        "src": "1827:23:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 3951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 3934,
                  "id": 3953,
                  "nodeType": "Return",
                  "src": "1688:175:11"
                }
              ]
            },
            "documentation": {
              "id": 3925,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:11",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 3955,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3931,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 3929,
                  "name": "ERC165",
                  "nameLocations": [
                    "1646:6:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6649,
                  "src": "1646:6:11"
                },
                {
                  "id": 3930,
                  "name": "IERC165",
                  "nameLocations": [
                    "1654:7:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6239,
                  "src": "1654:7:11"
                }
              ],
              "src": "1637:25:11"
            },
            "parameters": {
              "id": 3928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3927,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3955,
                  "src": "1597:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3926,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:11"
            },
            "returnParameters": {
              "id": 3934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3955,
                  "src": "1672:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3932,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:11"
            },
            "scope": 4806,
            "src": "1570:300:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1976
            ],
            "body": {
              "id": 3978,
              "nodeType": "Block",
              "src": "2010:123:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3965,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3958,
                          "src": "2028:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3966,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 3971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:43:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 3964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:73:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3973,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:73:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3974,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3897,
                      "src": "2110:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3976,
                    "indexExpression": {
                      "id": 3975,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3958,
                      "src": "2120:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2110:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3963,
                  "id": 3977,
                  "nodeType": "Return",
                  "src": "2103:23:11"
                }
              ]
            },
            "documentation": {
              "id": 3956,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:11",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 3979,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:11"
            },
            "parameters": {
              "id": 3959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3958,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "1948:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:11"
            },
            "returnParameters": {
              "id": 3963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "2001:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:11"
            },
            "scope": 4806,
            "src": "1929:204:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1984
            ],
            "body": {
              "id": 4006,
              "nodeType": "Block",
              "src": "2271:138:11",
              "statements": [
                {
                  "assignments": [
                    3989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3989,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2289:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4006,
                      "src": "2281:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3988,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2281:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3993,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3991,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3982,
                        "src": "2306:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3990,
                      "name": "_ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4289,
                      "src": "2297:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 3992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:17:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2281:33:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3995,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3989,
                          "src": "2332:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2341:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3996,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2332:19:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 4001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 3994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2324:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:56:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4003,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:56:11"
                },
                {
                  "expression": {
                    "id": 4004,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3989,
                    "src": "2397:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3987,
                  "id": 4005,
                  "nodeType": "Return",
                  "src": "2390:12:11"
                }
              ]
            },
            "documentation": {
              "id": 3980,
              "nodeType": "StructuredDocumentation",
              "src": "2139:46:11",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 4007,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2199:7:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3984,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2244:8:11"
            },
            "parameters": {
              "id": 3983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3982,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2215:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "2207:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:17:11"
            },
            "returnParameters": {
              "id": 3987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4007,
                  "src": "2262:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2261:9:11"
            },
            "scope": 4806,
            "src": "2190:219:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6704
            ],
            "body": {
              "id": 4016,
              "nodeType": "Block",
              "src": "2540:29:11",
              "statements": [
                {
                  "expression": {
                    "id": 4014,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3887,
                    "src": "2557:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4013,
                  "id": 4015,
                  "nodeType": "Return",
                  "src": "2550:12:11"
                }
              ]
            },
            "documentation": {
              "id": 4008,
              "nodeType": "StructuredDocumentation",
              "src": "2415:51:11",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 4017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2480:4:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2507:8:11"
            },
            "parameters": {
              "id": 4009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:2:11"
            },
            "returnParameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4017,
                  "src": "2525:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2524:15:11"
            },
            "scope": 4806,
            "src": "2471:98:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6710
            ],
            "body": {
              "id": 4026,
              "nodeType": "Block",
              "src": "2704:31:11",
              "statements": [
                {
                  "expression": {
                    "id": 4024,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3889,
                    "src": "2721:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4023,
                  "id": 4025,
                  "nodeType": "Return",
                  "src": "2714:14:11"
                }
              ]
            },
            "documentation": {
              "id": 4018,
              "nodeType": "StructuredDocumentation",
              "src": "2575:53:11",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 4027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2642:6:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4020,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2671:8:11"
            },
            "parameters": {
              "id": 4019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:2:11"
            },
            "returnParameters": {
              "id": 4023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4027,
                  "src": "2689:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2688:15:11"
            },
            "scope": 4806,
            "src": "2633:102:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6718
            ],
            "body": {
              "id": 4065,
              "nodeType": "Block",
              "src": "2889:188:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4037,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4030,
                        "src": "2914:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4036,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4684,
                      "src": "2899:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4039,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:23:11"
                },
                {
                  "assignments": [
                    4041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4041,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2947:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4065,
                      "src": "2933:21:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 4040,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2933:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4044,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4042,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4075,
                      "src": "2957:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 4043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2957:10:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2933:34:11"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4047,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4041,
                              "src": "2990:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 4046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2984:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 4045,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2984:5:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:14:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2999:6:11",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2984:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 4050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3008:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2984:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 4062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 4063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2984:86:11",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4056,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4041,
                              "src": "3036:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 4057,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4030,
                                  "src": "3045:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3053:8:11",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6777,
                                "src": "3045:16:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 4059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3045:18:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 4054,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3019:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3023:12:11",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3019:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:45:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 4053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3012:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 4052,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:6:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3012:53:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 4035,
                  "id": 4064,
                  "nodeType": "Return",
                  "src": "2977:93:11"
                }
              ]
            },
            "documentation": {
              "id": 4028,
              "nodeType": "StructuredDocumentation",
              "src": "2741:55:11",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 4066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2810:8:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4032,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2856:8:11"
            },
            "parameters": {
              "id": 4031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4030,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2827:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "2819:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:17:11"
            },
            "returnParameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4066,
                  "src": "2874:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2873:15:11"
            },
            "scope": 4806,
            "src": "2801:276:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4074,
              "nodeType": "Block",
              "src": "3385:26:11",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 4072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3402:2:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 4071,
                  "id": 4073,
                  "nodeType": "Return",
                  "src": "3395:9:11"
                }
              ]
            },
            "documentation": {
              "id": 4067,
              "nodeType": "StructuredDocumentation",
              "src": "3083:231:11",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 4075,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3328:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3336:2:11"
            },
            "returnParameters": {
              "id": 4071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4075,
                  "src": "3370:13:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4069,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:15:11"
            },
            "scope": 4806,
            "src": "3319:92:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2024
            ],
            "body": {
              "id": 4117,
              "nodeType": "Block",
              "src": "3538:336:11",
              "statements": [
                {
                  "assignments": [
                    4085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4085,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3556:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4117,
                      "src": "3548:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4084,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4090,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4088,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "3579:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4086,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4806,
                        "src": "3564:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3571:7:11",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4007,
                      "src": "3564:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 4089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3564:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4092,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4078,
                          "src": "3605:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4093,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4085,
                          "src": "3611:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3605:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 4095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3618:35:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 4091,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3597:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3597:57:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4097,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:57:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4099,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6217,
                              "src": "3686:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3686:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4101,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4085,
                            "src": "3702:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3686:21:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 4104,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4085,
                              "src": "3728:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4105,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6217,
                                "src": "3735:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3735:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4103,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4171,
                            "src": "3711:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 4107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:37:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3686:62:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
                        "id": 4109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:63:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
                        },
                        "value": "ERC721: approve caller is not token owner or approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
                        }
                      ],
                      "id": 4098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3665:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:170:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4111,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:170:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4113,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4078,
                        "src": "3855:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4114,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4080,
                        "src": "3859:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4112,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4638,
                      "src": "3846:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3846:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4116,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:21:11"
                }
              ]
            },
            "documentation": {
              "id": 4076,
              "nodeType": "StructuredDocumentation",
              "src": "3417:46:11",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 4118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3477:7:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3529:8:11"
            },
            "parameters": {
              "id": 4081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4078,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3493:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4118,
                  "src": "3485:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4080,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3505:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4118,
                  "src": "3497:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3497:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:29:11"
            },
            "returnParameters": {
              "id": 4083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:0:11"
            },
            "scope": 4806,
            "src": "3468:406:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2040
            ],
            "body": {
              "id": 4135,
              "nodeType": "Block",
              "src": "4020:82:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4128,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4121,
                        "src": "4045:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4127,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4684,
                      "src": "4030:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 4129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4130,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:23:11"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4131,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3901,
                      "src": "4071:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4133,
                    "indexExpression": {
                      "id": 4132,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4121,
                      "src": "4087:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4071:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4126,
                  "id": 4134,
                  "nodeType": "Return",
                  "src": "4064:31:11"
                }
              ]
            },
            "documentation": {
              "id": 4119,
              "nodeType": "StructuredDocumentation",
              "src": "3880:50:11",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 4136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3944:11:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4123,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3993:8:11"
            },
            "parameters": {
              "id": 4122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4121,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3964:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4136,
                  "src": "3956:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3955:17:11"
            },
            "returnParameters": {
              "id": 4126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4125,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4136,
                  "src": "4011:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4010:9:11"
            },
            "scope": 4806,
            "src": "3935:167:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2032
            ],
            "body": {
              "id": 4152,
              "nodeType": "Block",
              "src": "4253:69:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4146,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6217,
                          "src": "4282:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4282:12:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4148,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4139,
                        "src": "4296:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4149,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4141,
                        "src": "4306:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4145,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4670,
                      "src": "4263:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 4150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:52:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4151,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:52:11"
                }
              ]
            },
            "documentation": {
              "id": 4137,
              "nodeType": "StructuredDocumentation",
              "src": "4108:56:11",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 4153,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4178:17:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4143,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4244:8:11"
            },
            "parameters": {
              "id": 4142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4139,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4204:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4153,
                  "src": "4196:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4196:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4141,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4219:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4153,
                  "src": "4214:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4140,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4195:33:11"
            },
            "returnParameters": {
              "id": 4144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4253:0:11"
            },
            "scope": 4806,
            "src": "4169:153:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2050
            ],
            "body": {
              "id": 4170,
              "nodeType": "Block",
              "src": "4491:59:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4164,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3907,
                        "src": "4508:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 4166,
                      "indexExpression": {
                        "id": 4165,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4156,
                        "src": "4527:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4508:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 4168,
                    "indexExpression": {
                      "id": 4167,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4158,
                      "src": "4534:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4508:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4163,
                  "id": 4169,
                  "nodeType": "Return",
                  "src": "4501:42:11"
                }
              ]
            },
            "documentation": {
              "id": 4154,
              "nodeType": "StructuredDocumentation",
              "src": "4328:55:11",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 4171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4397:16:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4160,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4467:8:11"
            },
            "parameters": {
              "id": 4159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4156,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4422:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "4414:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4158,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4437:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "4429:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4413:33:11"
            },
            "returnParameters": {
              "id": 4163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4162,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "4485:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4161,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:6:11"
            },
            "scope": 4806,
            "src": "4388:162:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2016
            ],
            "body": {
              "id": 4197,
              "nodeType": "Block",
              "src": "4731:207:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4184,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6217,
                              "src": "4820:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4820:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4186,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4178,
                            "src": "4834:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4183,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4341,
                          "src": "4801:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 4187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4801:41:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 4188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4844:47:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "id": 4182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4793:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:99:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4190,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:99:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4192,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4174,
                        "src": "4913:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4193,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4176,
                        "src": "4919:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4194,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4178,
                        "src": "4923:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4191,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4614,
                      "src": "4903:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4196,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:28:11"
                }
              ]
            },
            "documentation": {
              "id": 4172,
              "nodeType": "StructuredDocumentation",
              "src": "4556:51:11",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 4198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4621:12:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4180,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4722:8:11"
            },
            "parameters": {
              "id": 4179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4174,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4651:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "4643:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4176,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4673:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "4665:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4178,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4693:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "4685:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:73:11"
            },
            "returnParameters": {
              "id": 4181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4731:0:11"
            },
            "scope": 4806,
            "src": "4612:326:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2006
            ],
            "body": {
              "id": 4216,
              "nodeType": "Block",
              "src": "5127:56:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4210,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4201,
                        "src": "5154:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4211,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4203,
                        "src": "5160:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4212,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4205,
                        "src": "5164:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5173:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4209,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4217,
                        4247
                      ],
                      "referencedDeclaration": 4247,
                      "src": "5137:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 4214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5137:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4215,
                  "nodeType": "ExpressionStatement",
                  "src": "5137:39:11"
                }
              ]
            },
            "documentation": {
              "id": 4199,
              "nodeType": "StructuredDocumentation",
              "src": "4944:55:11",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 4217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5013:16:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4207,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5118:8:11"
            },
            "parameters": {
              "id": 4206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4201,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5047:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4217,
                  "src": "5039:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5039:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4203,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5069:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4217,
                  "src": "5061:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5061:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4205,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5089:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4217,
                  "src": "5081:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5081:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5029:73:11"
            },
            "returnParameters": {
              "id": 4208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5127:0:11"
            },
            "scope": 4806,
            "src": "5004:179:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1996
            ],
            "body": {
              "id": 4246,
              "nodeType": "Block",
              "src": "5399:164:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4232,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6217,
                              "src": "5436:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5436:12:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4234,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4224,
                            "src": "5450:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4231,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4341,
                          "src": "5417:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 4235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5417:41:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 4236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5460:47:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "id": 4230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5409:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5409:99:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4238,
                  "nodeType": "ExpressionStatement",
                  "src": "5409:99:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4240,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4220,
                        "src": "5532:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4241,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4222,
                        "src": "5538:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4242,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4224,
                        "src": "5542:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4243,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4226,
                        "src": "5551:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4239,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4276,
                      "src": "5518:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 4244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5518:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4245,
                  "nodeType": "ExpressionStatement",
                  "src": "5518:38:11"
                }
              ]
            },
            "documentation": {
              "id": 4218,
              "nodeType": "StructuredDocumentation",
              "src": "5189:55:11",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 4247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5258:16:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 4228,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5390:8:11"
            },
            "parameters": {
              "id": 4227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4220,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5292:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4247,
                  "src": "5284:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5284:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4222,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5314:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4247,
                  "src": "5306:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5306:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4224,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5334:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4247,
                  "src": "5326:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5326:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4226,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5364:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4247,
                  "src": "5351:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4225,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5351:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5274:100:11"
            },
            "returnParameters": {
              "id": 4229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5399:0:11"
            },
            "scope": 4806,
            "src": "5249:314:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4275,
              "nodeType": "Block",
              "src": "6564:165:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4260,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4250,
                        "src": "6584:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4261,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4252,
                        "src": "6590:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4262,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4254,
                        "src": "6594:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4259,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4614,
                      "src": "6574:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4264,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4267,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4250,
                            "src": "6643:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4268,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4252,
                            "src": "6649:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4269,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4254,
                            "src": "6653:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4270,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4256,
                            "src": "6662:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4266,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4746,
                          "src": "6620:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 4271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6620:47:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 4272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6669:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 4265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6612:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:110:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4274,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:110:11"
                }
              ]
            },
            "documentation": {
              "id": 4248,
              "nodeType": "StructuredDocumentation",
              "src": "5569:850:11",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 4276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6433:13:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4250,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6464:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6456:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6456:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4252,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6486:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6478:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6478:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4254,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6506:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6498:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6536:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4276,
                  "src": "6523:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6446:100:11"
            },
            "returnParameters": {
              "id": 4258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6564:0:11"
            },
            "scope": 4806,
            "src": "6424:305:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4288,
              "nodeType": "Block",
              "src": "6913:40:11",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4284,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3893,
                      "src": "6930:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 4286,
                    "indexExpression": {
                      "id": 4285,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4279,
                      "src": "6938:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6930:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4283,
                  "id": 4287,
                  "nodeType": "Return",
                  "src": "6923:23:11"
                }
              ]
            },
            "documentation": {
              "id": 4277,
              "nodeType": "StructuredDocumentation",
              "src": "6735:98:11",
              "text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
            },
            "id": 4289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ownerOf",
            "nameLocation": "6847:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4279,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6864:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4289,
                  "src": "6856:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6856:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6855:17:11"
            },
            "returnParameters": {
              "id": 4283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4289,
                  "src": "6904:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6904:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6903:9:11"
            },
            "scope": 4806,
            "src": "6838:115:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4306,
              "nodeType": "Block",
              "src": "7327:55:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 4298,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4292,
                          "src": "7353:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4297,
                        "name": "_ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4289,
                        "src": "7344:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 4299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7344:17:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7373:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7365:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7365:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7365:10:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7344:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4296,
                  "id": 4305,
                  "nodeType": "Return",
                  "src": "7337:38:11"
                }
              ]
            },
            "documentation": {
              "id": 4290,
              "nodeType": "StructuredDocumentation",
              "src": "6959:292:11",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 4307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7265:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4292,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7281:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4307,
                  "src": "7273:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7273:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7272:17:11"
            },
            "returnParameters": {
              "id": 4296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4307,
                  "src": "7321:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7321:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7320:6:11"
            },
            "scope": 4806,
            "src": "7256:126:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4340,
              "nodeType": "Block",
              "src": "7639:162:11",
              "statements": [
                {
                  "assignments": [
                    4318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4318,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7657:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4340,
                      "src": "7649:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4317,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7649:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4323,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4321,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4312,
                        "src": "7680:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4319,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4806,
                        "src": "7665:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7672:7:11",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4007,
                      "src": "7665:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 4322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7665:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7649:39:11"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4324,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4310,
                              "src": "7706:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 4325,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4318,
                              "src": "7717:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7706:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 4328,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4318,
                                "src": "7743:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4329,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4310,
                                "src": "7750:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 4327,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4171,
                              "src": "7726:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 4330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7726:32:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7706:52:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 4333,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4312,
                                "src": "7774:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4332,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4136,
                              "src": "7762:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 4334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7762:20:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4335,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4310,
                            "src": "7786:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7762:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7706:87:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 4338,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7705:89:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4316,
                  "id": 4339,
                  "nodeType": "Return",
                  "src": "7698:96:11"
                }
              ]
            },
            "documentation": {
              "id": 4308,
              "nodeType": "StructuredDocumentation",
              "src": "7388:147:11",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 4341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7549:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4310,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7576:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4341,
                  "src": "7568:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7568:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4312,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7593:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4341,
                  "src": "7585:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7585:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7567:34:11"
            },
            "returnParameters": {
              "id": 4316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4341,
                  "src": "7633:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4314,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7633:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7632:6:11"
            },
            "scope": 4806,
            "src": "7540:261:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4355,
              "nodeType": "Block",
              "src": "8196:43:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4350,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4344,
                        "src": "8216:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4351,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4346,
                        "src": "8220:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 4352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8229:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 4349,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4356,
                        4385
                      ],
                      "referencedDeclaration": 4385,
                      "src": "8206:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 4353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8206:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4354,
                  "nodeType": "ExpressionStatement",
                  "src": "8206:26:11"
                }
              ]
            },
            "documentation": {
              "id": 4342,
              "nodeType": "StructuredDocumentation",
              "src": "7807:319:11",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 4356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8140:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4344,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8158:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "8150:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4346,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8170:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4356,
                  "src": "8162:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8162:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8149:29:11"
            },
            "returnParameters": {
              "id": 4348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8196:0:11"
            },
            "scope": 4806,
            "src": "8131:108:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4384,
              "nodeType": "Block",
              "src": "8574:195:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4367,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4359,
                        "src": "8590:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4368,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4361,
                        "src": "8594:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4366,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4462,
                      "src": "8584:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8584:18:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4370,
                  "nodeType": "ExpressionStatement",
                  "src": "8584:18:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8664:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8656:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4373,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8656:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8656:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4377,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "8668:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4378,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4361,
                            "src": "8672:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 4379,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4363,
                            "src": "8681:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4372,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4746,
                          "src": "8633:22:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 4380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8633:53:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 4381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8700:52:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 4371,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8612:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8612:150:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4383,
                  "nodeType": "ExpressionStatement",
                  "src": "8612:150:11"
                }
              ]
            },
            "documentation": {
              "id": 4357,
              "nodeType": "StructuredDocumentation",
              "src": "8245:210:11",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 4385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8469:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4359,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8496:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4385,
                  "src": "8488:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8488:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4361,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8516:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4385,
                  "src": "8508:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8508:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4363,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8546:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4385,
                  "src": "8533:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4362,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8533:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8478:78:11"
            },
            "returnParameters": {
              "id": 4365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8574:0:11"
            },
            "scope": 4806,
            "src": "8460:309:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4461,
              "nodeType": "Block",
              "src": "9152:859:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4394,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4388,
                          "src": "9170:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9184:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9176:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9176:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9176:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9170:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9188:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 4393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9162:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9162:61:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4402,
                  "nodeType": "ExpressionStatement",
                  "src": "9162:61:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9241:17:11",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4405,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4390,
                              "src": "9250:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4404,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "9242:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 4406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9242:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 4408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9260:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 4403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9233:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9233:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4410,
                  "nodeType": "ExpressionStatement",
                  "src": "9233:58:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9331:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9323:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9323:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9323:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4416,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4388,
                        "src": "9335:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4417,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4390,
                        "src": "9339:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9348:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4411,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4792,
                      "src": "9302:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 4419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9302:48:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4420,
                  "nodeType": "ExpressionStatement",
                  "src": "9302:48:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9445:17:11",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4423,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4390,
                              "src": "9454:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4422,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4307,
                            "src": "9446:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 4424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9446:16:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 4426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9464:30:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 4421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9437:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9437:58:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4428,
                  "nodeType": "ExpressionStatement",
                  "src": "9437:58:11"
                },
                {
                  "id": 4435,
                  "nodeType": "UncheckedBlock",
                  "src": "9506:360:11",
                  "statements": [
                    {
                      "expression": {
                        "id": 4433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4429,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3897,
                            "src": "9837:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4431,
                          "indexExpression": {
                            "id": 4430,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4388,
                            "src": "9847:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9837:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 4432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9854:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9837:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4434,
                      "nodeType": "ExpressionStatement",
                      "src": "9837:18:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4436,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3893,
                        "src": "9876:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4438,
                      "indexExpression": {
                        "id": 4437,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4390,
                        "src": "9884:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9876:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4439,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4388,
                      "src": "9895:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9876:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4441,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:21:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9930:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9922:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4443,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9922:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9922:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4447,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4388,
                        "src": "9934:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4448,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4390,
                        "src": "9938:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4442,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "9913:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9913:33:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4450,
                  "nodeType": "EmitStatement",
                  "src": "9908:38:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9985:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9977:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4452,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9977:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9977:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4456,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4388,
                        "src": "9989:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4457,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4390,
                        "src": "9993:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10002:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4451,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4805,
                      "src": "9957:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 4459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9957:47:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4460,
                  "nodeType": "ExpressionStatement",
                  "src": "9957:47:11"
                }
              ]
            },
            "documentation": {
              "id": 4386,
              "nodeType": "StructuredDocumentation",
              "src": "8775:311:11",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 4462,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9100:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9114:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "9106:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4390,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9126:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "9118:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9118:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9105:29:11"
            },
            "returnParameters": {
              "id": 4392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9152:0:11"
            },
            "scope": 4806,
            "src": "9091:920:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4528,
              "nodeType": "Block",
              "src": "10386:713:11",
              "statements": [
                {
                  "assignments": [
                    4469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4469,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10404:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 4528,
                      "src": "10396:13:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4468,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10396:7:11",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4474,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4472,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "10427:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4470,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4806,
                        "src": "10412:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 4471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10419:7:11",
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4007,
                      "src": "10412:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 4473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10412:23:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10396:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4476,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "10467:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10482:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10474:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10474:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10474:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4481,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "10486:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10495:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4475,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4792,
                      "src": "10446:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 4483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10446:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4484,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:51:11"
                },
                {
                  "expression": {
                    "id": 4490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4485,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4469,
                      "src": "10599:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4488,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4465,
                          "src": "10622:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 4486,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4806,
                          "src": "10607:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 4487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10614:7:11",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4007,
                        "src": "10607:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 4489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10607:23:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10599:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4491,
                  "nodeType": "ExpressionStatement",
                  "src": "10599:31:11"
                },
                {
                  "expression": {
                    "id": 4495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10668:31:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4492,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3901,
                        "src": "10675:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4494,
                      "indexExpression": {
                        "id": 4493,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "10691:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10675:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4496,
                  "nodeType": "ExpressionStatement",
                  "src": "10668:31:11"
                },
                {
                  "id": 4503,
                  "nodeType": "UncheckedBlock",
                  "src": "10710:237:11",
                  "statements": [
                    {
                      "expression": {
                        "id": 4501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4497,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3897,
                            "src": "10915:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4499,
                          "indexExpression": {
                            "id": 4498,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "10925:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10915:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 4500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10935:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10915:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4502,
                      "nodeType": "ExpressionStatement",
                      "src": "10915:21:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10956:23:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4504,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3893,
                        "src": "10963:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4506,
                      "indexExpression": {
                        "id": 4505,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "10971:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10963:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4508,
                  "nodeType": "ExpressionStatement",
                  "src": "10956:23:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4510,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "11004:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11019:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11011:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4511,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11011:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11011:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4515,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "11023:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4509,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "10995:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:36:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4517,
                  "nodeType": "EmitStatement",
                  "src": "10990:41:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4519,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4469,
                        "src": "11062:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11077:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11069:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4520,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11069:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11069:10:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4524,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "11081:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11090:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4518,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4805,
                      "src": "11042:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 4526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11042:50:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4527,
                  "nodeType": "ExpressionStatement",
                  "src": "11042:50:11"
                }
              ]
            },
            "documentation": {
              "id": 4463,
              "nodeType": "StructuredDocumentation",
              "src": "10017:315:11",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 4529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10346:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4465,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10360:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4529,
                  "src": "10352:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10351:17:11"
            },
            "returnParameters": {
              "id": 4467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10386:0:11"
            },
            "scope": 4806,
            "src": "10337:762:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4613,
              "nodeType": "Block",
              "src": "11532:1124:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4542,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4536,
                              "src": "11565:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4540,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4806,
                              "src": "11550:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 4541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11557:7:11",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4007,
                            "src": "11550:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 4543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11550:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4544,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4532,
                          "src": "11577:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11550:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 4546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11583:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 4539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11542:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:81:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4548,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:81:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4550,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4534,
                          "src": "11641:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11655:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11647:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4551,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11647:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11647:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11641:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11659:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 4549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11633:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11633:65:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4558,
                  "nodeType": "ExpressionStatement",
                  "src": "11633:65:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4560,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4532,
                        "src": "11730:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4561,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4534,
                        "src": "11736:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4562,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "11740:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11749:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4559,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4792,
                      "src": "11709:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 4564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11709:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4565,
                  "nodeType": "ExpressionStatement",
                  "src": "11709:42:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 4569,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4536,
                              "src": "11866:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4567,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4806,
                              "src": "11851:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 4568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11858:7:11",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4007,
                            "src": "11851:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 4570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11851:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4571,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4532,
                          "src": "11878:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11851:31:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 4573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11884:39:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 4566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11843:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11843:81:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4575,
                  "nodeType": "ExpressionStatement",
                  "src": "11843:81:11"
                },
                {
                  "expression": {
                    "id": 4579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11986:31:11",
                    "subExpression": {
                      "baseExpression": {
                        "id": 4576,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3901,
                        "src": "11993:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4578,
                      "indexExpression": {
                        "id": 4577,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "12009:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11993:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4580,
                  "nodeType": "ExpressionStatement",
                  "src": "11986:31:11"
                },
                {
                  "id": 4593,
                  "nodeType": "UncheckedBlock",
                  "src": "12028:496:11",
                  "statements": [
                    {
                      "expression": {
                        "id": 4585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4581,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3897,
                            "src": "12461:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4583,
                          "indexExpression": {
                            "id": 4582,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4532,
                            "src": "12471:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12461:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 4584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12480:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12461:20:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4586,
                      "nodeType": "ExpressionStatement",
                      "src": "12461:20:11"
                    },
                    {
                      "expression": {
                        "id": 4591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4587,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3897,
                            "src": "12495:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4589,
                          "indexExpression": {
                            "id": 4588,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4534,
                            "src": "12505:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12495:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 4590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12512:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12495:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4592,
                      "nodeType": "ExpressionStatement",
                      "src": "12495:18:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4594,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3893,
                        "src": "12533:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4596,
                      "indexExpression": {
                        "id": 4595,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "12541:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12533:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4597,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4534,
                      "src": "12552:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12533:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4599,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:21:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4601,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4532,
                        "src": "12579:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4602,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4534,
                        "src": "12585:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4603,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "12589:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4600,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1950,
                      "src": "12570:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12570:27:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4605,
                  "nodeType": "EmitStatement",
                  "src": "12565:32:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4607,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4532,
                        "src": "12628:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4608,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4534,
                        "src": "12634:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4609,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4536,
                        "src": "12638:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 4610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12647:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 4606,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4805,
                      "src": "12608:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 4611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12608:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4612,
                  "nodeType": "ExpressionStatement",
                  "src": "12608:41:11"
                }
              ]
            },
            "documentation": {
              "id": 4530,
              "nodeType": "StructuredDocumentation",
              "src": "11105:313:11",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 4614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "11432:9:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4532,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11459:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4614,
                  "src": "11451:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11451:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11481:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4614,
                  "src": "11473:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11473:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4536,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11501:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4614,
                  "src": "11493:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11493:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11441:73:11"
            },
            "returnParameters": {
              "id": 4538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11532:0:11"
            },
            "scope": 4806,
            "src": "11423:1233:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4637,
              "nodeType": "Block",
              "src": "12832:107:11",
              "statements": [
                {
                  "expression": {
                    "id": 4626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4622,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3901,
                        "src": "12842:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4624,
                      "indexExpression": {
                        "id": 4623,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4619,
                        "src": "12858:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12842:24:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4625,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4617,
                      "src": "12869:2:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12842:29:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4627,
                  "nodeType": "ExpressionStatement",
                  "src": "12842:29:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4631,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4619,
                            "src": "12910:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 4629,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4806,
                            "src": "12895:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$4806_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 4630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12902:7:11",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4007,
                          "src": "12895:14:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 4632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12895:23:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4633,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4617,
                        "src": "12920:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4634,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4619,
                        "src": "12924:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4628,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1959,
                      "src": "12886:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12886:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4636,
                  "nodeType": "EmitStatement",
                  "src": "12881:51:11"
                }
              ]
            },
            "documentation": {
              "id": 4615,
              "nodeType": "StructuredDocumentation",
              "src": "12662:101:11",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
            },
            "id": 4638,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "12777:8:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4617,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12794:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4638,
                  "src": "12786:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12786:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4619,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12806:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4638,
                  "src": "12798:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12798:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12785:29:11"
            },
            "returnParameters": {
              "id": 4621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12832:0:11"
            },
            "scope": 4806,
            "src": "12768:171:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4669,
              "nodeType": "Block",
              "src": "13198:184:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4649,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4641,
                          "src": "13216:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 4650,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4643,
                          "src": "13225:8:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13216:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 4652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13235:27:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 4648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13208:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13208:55:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4654,
                  "nodeType": "ExpressionStatement",
                  "src": "13208:55:11"
                },
                {
                  "expression": {
                    "id": 4661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4655,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3907,
                          "src": "13273:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 4658,
                        "indexExpression": {
                          "id": 4656,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4641,
                          "src": "13292:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13273:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 4659,
                      "indexExpression": {
                        "id": 4657,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4643,
                        "src": "13299:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13273:35:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4660,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4645,
                      "src": "13311:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13273:46:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4662,
                  "nodeType": "ExpressionStatement",
                  "src": "13273:46:11"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4664,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4641,
                        "src": "13349:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4665,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4643,
                        "src": "13356:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4666,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4645,
                        "src": "13366:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4663,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1968,
                      "src": "13334:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 4667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13334:41:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4668,
                  "nodeType": "EmitStatement",
                  "src": "13329:46:11"
                }
              ]
            },
            "documentation": {
              "id": 4639,
              "nodeType": "StructuredDocumentation",
              "src": "12945:125:11",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
            },
            "id": 4670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "13084:18:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4641,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "13120:5:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4670,
                  "src": "13112:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4643,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13143:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4670,
                  "src": "13135:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4642,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13135:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4645,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "13166:8:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4670,
                  "src": "13161:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4644,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13161:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:78:11"
            },
            "returnParameters": {
              "id": 4647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13198:0:11"
            },
            "scope": 4806,
            "src": "13075:307:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4683,
              "nodeType": "Block",
              "src": "13529:70:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4678,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4673,
                            "src": "13555:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4677,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4307,
                          "src": "13547:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 4679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13547:16:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 4680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13565:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 4676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13539:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13539:53:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4682,
                  "nodeType": "ExpressionStatement",
                  "src": "13539:53:11"
                }
              ]
            },
            "documentation": {
              "id": 4671,
              "nodeType": "StructuredDocumentation",
              "src": "13388:73:11",
              "text": " @dev Reverts if the `tokenId` has not been minted yet."
            },
            "id": 4684,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireMinted",
            "nameLocation": "13475:14:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4673,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13498:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4684,
                  "src": "13490:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13490:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13489:17:11"
            },
            "returnParameters": {
              "id": 4675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13529:0:11"
            },
            "scope": 4806,
            "src": "13466:133:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4745,
              "nodeType": "Block",
              "src": "14306:676:11",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 4698,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4689,
                        "src": "14320:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 4699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14323:10:11",
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6313,
                      "src": "14320:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 4700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14320:15:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4743,
                    "nodeType": "Block",
                    "src": "14940:36:11",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 4741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14961:4:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 4697,
                        "id": 4742,
                        "nodeType": "Return",
                        "src": "14954:11:11"
                      }
                    ]
                  },
                  "id": 4744,
                  "nodeType": "IfStatement",
                  "src": "14316:660:11",
                  "trueBody": {
                    "id": 4740,
                    "nodeType": "Block",
                    "src": "14337:597:11",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 4720,
                              "nodeType": "Block",
                              "src": "14451:91:11",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 4718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 4714,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4712,
                                      "src": "14476:6:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 4715,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6692,
                                          "src": "14486:15:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$6692_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 4716,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "14502:16:11",
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6691,
                                        "src": "14486:32:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 4717,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "14519:8:11",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14486:41:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14476:51:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 4697,
                                  "id": 4719,
                                  "nodeType": "Return",
                                  "src": "14469:58:11"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 4721,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 4713,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 4712,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "14443:6:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4721,
                                  "src": "14436:13:11",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 4711,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14436:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14435:15:11"
                            },
                            "src": "14427:115:11"
                          },
                          {
                            "block": {
                              "id": 4737,
                              "nodeType": "Block",
                              "src": "14571:353:11",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 4725,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4723,
                                        "src": "14593:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 4726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14600:6:11",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "14593:13:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 4727,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14610:1:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14593:18:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 4735,
                                    "nodeType": "Block",
                                    "src": "14720:190:11",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nativeSrc": "14806:86:11",
                                          "nodeType": "YulBlock",
                                          "src": "14806:86:11",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nativeSrc": "14843:2:11",
                                                        "nodeType": "YulLiteral",
                                                        "src": "14843:2:11",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "14847:6:11",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14847:6:11"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "14839:3:11",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14839:3:11"
                                                    },
                                                    "nativeSrc": "14839:15:11",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14839:15:11"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nativeSrc": "14862:6:11",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14862:6:11"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "14856:5:11",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14856:5:11"
                                                    },
                                                    "nativeSrc": "14856:13:11",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14856:13:11"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nativeSrc": "14832:6:11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14832:6:11"
                                                },
                                                "nativeSrc": "14832:38:11",
                                                "nodeType": "YulFunctionCall",
                                                "src": "14832:38:11"
                                              },
                                              "nativeSrc": "14832:38:11",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14832:38:11"
                                            }
                                          ]
                                        },
                                        "documentation": "@solidity memory-safe-assembly",
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 4723,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14847:6:11",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 4723,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14862:6:11",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 4734,
                                        "nodeType": "InlineAssembly",
                                        "src": "14797:95:11"
                                      }
                                    ]
                                  },
                                  "id": 4736,
                                  "nodeType": "IfStatement",
                                  "src": "14589:321:11",
                                  "trueBody": {
                                    "id": 4733,
                                    "nodeType": "Block",
                                    "src": "14613:101:11",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 4730,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14642:52:11",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 4729,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14635:6:11",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 4731,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14635:60:11",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 4732,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14635:60:11"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 4738,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 4724,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 4723,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14563:6:11",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4738,
                                  "src": "14550:19:11",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 4722,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14550:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14549:21:11"
                            },
                            "src": "14543:381:11"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4705,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6217,
                                "src": "14392:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14392:12:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4707,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4687,
                              "src": "14406:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4708,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4691,
                              "src": "14412:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4709,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4693,
                              "src": "14421:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4702,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4689,
                                  "src": "14371:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 4701,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6692,
                                "src": "14355:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$6692_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 4703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14355:19:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$6692",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 4704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14375:16:11",
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6691,
                            "src": "14355:36:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 4710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14355:71:11",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 4739,
                        "nodeType": "TryStatement",
                        "src": "14351:573:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4685,
              "nodeType": "StructuredDocumentation",
              "src": "13605:541:11",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 4746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "14160:22:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4687,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14200:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "14192:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14192:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4689,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14222:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "14214:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14214:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4691,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14242:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "14234:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14234:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4693,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14272:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "14259:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4692,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14259:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14182:100:11"
            },
            "returnParameters": {
              "id": 4697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4746,
                  "src": "14300:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4695,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14300:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14299:6:11"
            },
            "scope": 4806,
            "src": "14151:831:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 4791,
              "nodeType": "Block",
              "src": "15856:238:11",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4758,
                      "name": "batchSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4755,
                      "src": "15870:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 4759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15882:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15870:13:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4790,
                  "nodeType": "IfStatement",
                  "src": "15866:222:11",
                  "trueBody": {
                    "id": 4789,
                    "nodeType": "Block",
                    "src": "15885:203:11",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4761,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4749,
                            "src": "15903:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15919:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15911:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4762,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15911:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15911:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15903:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4774,
                        "nodeType": "IfStatement",
                        "src": "15899:85:11",
                        "trueBody": {
                          "id": 4773,
                          "nodeType": "Block",
                          "src": "15923:61:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 4771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4767,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3897,
                                    "src": "15941:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 4769,
                                  "indexExpression": {
                                    "id": 4768,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4749,
                                    "src": "15951:4:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15941:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 4770,
                                  "name": "batchSize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4755,
                                  "src": "15960:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15941:28:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4772,
                              "nodeType": "ExpressionStatement",
                              "src": "15941:28:11"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4775,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4751,
                            "src": "16001:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16015:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16007:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4776,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16007:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16007:10:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16001:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4788,
                        "nodeType": "IfStatement",
                        "src": "15997:81:11",
                        "trueBody": {
                          "id": 4787,
                          "nodeType": "Block",
                          "src": "16019:59:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 4785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4781,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3897,
                                    "src": "16037:9:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 4783,
                                  "indexExpression": {
                                    "id": 4782,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4751,
                                    "src": "16047:2:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16037:13:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 4784,
                                  "name": "batchSize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4755,
                                  "src": "16054:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16037:26:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4786,
                              "nodeType": "ExpressionStatement",
                              "src": "16037:26:11"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4747,
              "nodeType": "StructuredDocumentation",
              "src": "14988:705:11",
              "text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4792,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "15707:20:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4749,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15745:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "15737:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15737:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4751,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15767:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "15759:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15759:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "15779:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15779:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4755,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "15823:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "15815:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15815:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15727:111:11"
            },
            "returnParameters": {
              "id": 4757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15856:0:11"
            },
            "scope": 4806,
            "src": "15698:396:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4804,
              "nodeType": "Block",
              "src": "16951:2:11",
              "statements": []
            },
            "documentation": {
              "id": 4793,
              "nodeType": "StructuredDocumentation",
              "src": "16100:695:11",
              "text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "16809:19:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4795,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16846:4:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "16838:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16838:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4797,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16868:2:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "16860:10:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16860:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4799,
                  "mutability": "mutable",
                  "name": "firstTokenId",
                  "nameLocation": "16888:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "16880:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16880:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4801,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "16918:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 4805,
                  "src": "16910:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16910:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16828:105:11"
            },
            "returnParameters": {
              "id": 4803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16951:0:11"
            },
            "scope": 4806,
            "src": "16800:153:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4807,
        "src": "628:16327:11",
        "usedErrors": [],
        "usedEvents": [
          1950,
          1959,
          1968
        ]
      }
    ],
    "src": "107:16849:11"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161147a38038061147a83398101604081905261002f91610109565b600061003b83826101fb565b50600161004882826101fb565b5050506102b9565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007757600080fd5b81516001600160401b0381111561009057610090610050565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100be576100be610050565b6040528181528382016020018510156100d657600080fd5b60005b828110156100f5576020818601810151838301820152016100d9565b506000918101602001919091529392505050565b6000806040838503121561011c57600080fd5b82516001600160401b0381111561013257600080fd5b61013e85828601610066565b602085015190935090506001600160401b0381111561015c57600080fd5b61016885828601610066565b9150509250929050565b600181811c9082168061018657607f821691505b6020821081036101a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101f657806000526020600020601f840160051c810160208510156101d35750805b601f840160051c820191505b818110156101f357600081556001016101df565b50505b505050565b81516001600160401b0381111561021457610214610050565b610228816102228454610172565b846101ac565b6020601f82116001811461025c57600083156102445750848201515b600019600385901b1c1916600184901b1784556101f3565b600084815260208120601f198516915b8281101561028c578785015182556020948501946001909201910161026c565b50848210156102aa5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6111b2806102c86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610cf9565b6101ff565b60405190151581526020015b60405180910390f35b610104610251565b6040516100f39190610d66565b61012461011f366004610d79565b6102e3565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dae565b61030a565b005b61014f61015f366004610dd8565b610424565b61014f610172366004610dd8565b610455565b610124610185366004610d79565b610470565b61019d610198366004610e15565b6104d0565b6040519081526020016100f3565b610104610556565b61014f6101c1366004610e30565b610565565b61014f6101d4366004610e82565b610574565b6101046101e7366004610d79565b6105ac565b6100e76101fa366004610f66565b610620565b60006001600160e01b031982166380ac58cd60e01b148061023057506001600160e01b03198216635b5e139f60e01b145b8061024b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461026090610f99565b80601f016020809104026020016040519081016040528092919081815260200182805461028c90610f99565b80156102d95780601f106102ae576101008083540402835291602001916102d9565b820191906000526020600020905b8154815290600101906020018083116102bc57829003601f168201915b5050505050905090565b60006102ee8261064e565b506000908152600460205260409020546001600160a01b031690565b600061031582610470565b9050806001600160a01b0316836001600160a01b0316036103875760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103a357506103a38133610620565b6104155760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161037e565b61041f83836106b0565b505050565b61042e338261071e565b61044a5760405162461bcd60e51b815260040161037e90610fd3565b61041f83838361077d565b61041f83838360405180602001604052806000815250610574565b6000818152600260205260408120546001600160a01b03168061024b5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b60006001600160a01b03821661053a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161037e565b506001600160a01b031660009081526003602052604090205490565b60606001805461026090610f99565b6105703383836108ee565b5050565b61057e338361071e565b61059a5760405162461bcd60e51b815260040161037e90610fd3565b6105a6848484846109bc565b50505050565b60606105b78261064e565b60006105ce60408051602081019091526000815290565b905060008151116105ee5760405180602001604052806000815250610619565b806105f8846109ef565b604051602001610609929190611020565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b03166106ad5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161037e565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e582610470565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072a83610470565b9050806001600160a01b0316846001600160a01b0316148061075157506107518185610620565b806107755750836001600160a01b031661076a846102e3565b6001600160a01b0316145b949350505050565b826001600160a01b031661079082610470565b6001600160a01b0316146107b65760405162461bcd60e51b815260040161037e9061104f565b6001600160a01b0382166108185760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161037e565b6108258383836001610a82565b826001600160a01b031661083882610470565b6001600160a01b03161461085e5760405162461bcd60e51b815260040161037e9061104f565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361094f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161037e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109c784848461077d565b6109d384848484610b0a565b6105a65760405162461bcd60e51b815260040161037e90611094565b606060006109fc83610c0b565b600101905060008167ffffffffffffffff811115610a1c57610a1c610e6c565b6040519080825280601f01601f191660200182016040528015610a46576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a5057509392505050565b60018111156105a6576001600160a01b03841615610ac8576001600160a01b03841660009081526003602052604081208054839290610ac29084906110fc565b90915550505b6001600160a01b038316156105a6576001600160a01b03831660009081526003602052604081208054839290610aff90849061110f565b909155505050505050565b60006001600160a01b0384163b15610c0057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b4e903390899088908890600401611122565b6020604051808303816000875af1925050508015610b89575060408051601f3d908101601f19168201909252610b869181019061115f565b60015b610be6573d808015610bb7576040519150601f19603f3d011682016040523d82523d6000602084013e610bbc565b606091505b508051600003610bde5760405162461bcd60e51b815260040161037e90611094565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610775565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c4a5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c76576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c9457662386f26fc10000830492506010015b6305f5e1008310610cac576305f5e100830492506008015b6127108310610cc057612710830492506004015b60648310610cd2576064830492506002015b600a831061024b5760010192915050565b6001600160e01b0319811681146106ad57600080fd5b600060208284031215610d0b57600080fd5b813561061981610ce3565b60005b83811015610d31578181015183820152602001610d19565b50506000910152565b60008151808452610d52816020860160208601610d16565b601f01601f19169290920160200192915050565b6020815260006106196020830184610d3a565b600060208284031215610d8b57600080fd5b5035919050565b80356001600160a01b0381168114610da957600080fd5b919050565b60008060408385031215610dc157600080fd5b610dca83610d92565b946020939093013593505050565b600080600060608486031215610ded57600080fd5b610df684610d92565b9250610e0460208501610d92565b929592945050506040919091013590565b600060208284031215610e2757600080fd5b61061982610d92565b60008060408385031215610e4357600080fd5b610e4c83610d92565b915060208301358015158114610e6157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610e9857600080fd5b610ea185610d92565b9350610eaf60208601610d92565b925060408501359150606085013567ffffffffffffffff811115610ed257600080fd5b8501601f81018713610ee357600080fd5b803567ffffffffffffffff811115610efd57610efd610e6c565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610f2c57610f2c610e6c565b604052818152828201602001891015610f4457600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215610f7957600080fd5b610f8283610d92565b9150610f9060208401610d92565b90509250929050565b600181811c90821680610fad57607f821691505b602082108103610fcd57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611032818460208801610d16565b835190830190611046818360208801610d16565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561024b5761024b6110e6565b8082018082111561024b5761024b6110e6565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061115590830184610d3a565b9695505050505050565b60006020828403121561117157600080fd5b815161061981610ce356fea264697066735822122079603b8bddf300f2b42027efd55f72ece5a5f28194a6ee344d6a5fcc4c573ae964736f6c634300081b0033",
  "bytecodeSha1": "5d96c6d179157d349b25355938284782b7cb25b3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.27+commit.40a35a09"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "11": {
        "ERC721._beforeTokenTransfer": {
          "77": [
            15870,
            15883,
            false
          ],
          "78": [
            15903,
            15921,
            false
          ],
          "79": [
            16001,
            16017,
            false
          ]
        },
        "ERC721._checkOnERC721Received": {
          "80": [
            14593,
            14611,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "76": [
            6620,
            6667,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "75": [
            13216,
            13233,
            true
          ]
        },
        "ERC721._transfer": {
          "72": [
            11550,
            11581,
            true
          ],
          "73": [
            11641,
            11657,
            true
          ],
          "74": [
            11851,
            11882,
            true
          ]
        },
        "ERC721.approve": {
          "65": [
            3605,
            3616,
            true
          ],
          "66": [
            3686,
            3707,
            true
          ],
          "67": [
            3711,
            3748,
            true
          ]
        },
        "ERC721.balanceOf": {
          "69": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "70": [
            5417,
            5458,
            true
          ]
        },
        "ERC721.tokenURI": {
          "71": [
            2984,
            3009,
            true
          ]
        },
        "ERC721.transferFrom": {
          "68": [
            4801,
            4842,
            true
          ]
        }
      },
      "12": {},
      "13": {},
      "15": {},
      "16": {},
      "17": {},
      "19": {},
      "20": {},
      "21": {},
      "22": {
        "Math.log10": {
          "81": [
            10017,
            10032,
            false
          ],
          "82": [
            10129,
            10144,
            false
          ],
          "83": [
            10241,
            10256,
            false
          ],
          "84": [
            10353,
            10367,
            false
          ],
          "85": [
            10462,
            10476,
            false
          ],
          "86": [
            10571,
            10585,
            false
          ],
          "87": [
            10680,
            10694,
            false
          ]
        }
      }
    },
    "statements": {
      "11": {
        "ERC721._approve": {
          "25": [
            12842,
            12871
          ],
          "26": [
            12881,
            12932
          ]
        },
        "ERC721._baseURI": {
          "21": [
            3395,
            3404
          ]
        },
        "ERC721._beforeTokenTransfer": {
          "45": [
            15941,
            15969
          ],
          "46": [
            16037,
            16063
          ]
        },
        "ERC721._checkOnERC721Received": {
          "48": [
            14635,
            14695
          ],
          "49": [
            14469,
            14527
          ],
          "50": [
            14954,
            14965
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "27": [
            7698,
            7794
          ]
        },
        "ERC721._ownerOf": {
          "12": [
            6923,
            6946
          ]
        },
        "ERC721._requireMinted": {
          "24": [
            13539,
            13592
          ]
        },
        "ERC721._safeTransfer": {
          "40": [
            6574,
            6602
          ],
          "41": [
            6612,
            6722
          ]
        },
        "ERC721._setApprovalForAll": {
          "37": [
            13208,
            13263
          ],
          "38": [
            13273,
            13319
          ],
          "39": [
            13329,
            13375
          ]
        },
        "ERC721._transfer": {
          "28": [
            11542,
            11623
          ],
          "29": [
            11633,
            11698
          ],
          "30": [
            11709,
            11751
          ],
          "31": [
            11843,
            11924
          ],
          "32": [
            11986,
            12017
          ],
          "33": [
            12461,
            12481
          ],
          "34": [
            12495,
            12513
          ],
          "35": [
            12533,
            12554
          ],
          "36": [
            12565,
            12597
          ]
        },
        "ERC721.approve": {
          "5": [
            3597,
            3654
          ],
          "7": [
            3665,
            3835
          ],
          "8": [
            3846,
            3867
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            2020,
            2093
          ],
          "15": [
            2103,
            2126
          ]
        },
        "ERC721.getApproved": {
          "3": [
            4030,
            4053
          ],
          "4": [
            4064,
            4095
          ]
        },
        "ERC721.isApprovedForAll": {
          "23": [
            4501,
            4543
          ]
        },
        "ERC721.name": {
          "2": [
            2550,
            2562
          ]
        },
        "ERC721.ownerOf": {
          "13": [
            2324,
            2380
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            5137,
            5176
          ],
          "18": [
            5409,
            5508
          ],
          "19": [
            5518,
            5556
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            4263,
            4315
          ]
        },
        "ERC721.supportsInterface": {
          "0": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "16": [
            2714,
            2728
          ]
        },
        "ERC721.tokenURI": {
          "20": [
            2899,
            2922
          ],
          "22": [
            2977,
            3070
          ]
        },
        "ERC721.transferFrom": {
          "9": [
            4793,
            4892
          ],
          "10": [
            4903,
            4931
          ]
        }
      },
      "12": {},
      "13": {},
      "15": {},
      "16": {
        "Address.isContract": {
          "47": [
            1458,
            1488
          ]
        }
      },
      "17": {
        "Context._msgSender": {
          "6": [
            712,
            729
          ]
        }
      },
      "19": {
        "Strings.toString": {
          "42": [
            819,
            824
          ],
          "43": [
            1003,
            1014
          ],
          "44": [
            1081,
            1094
          ]
        }
      },
      "20": {
        "ERC165.supportsInterface": {
          "1": [
            930,
            977
          ]
        }
      },
      "21": {},
      "22": {
        "Math.log10": {
          "51": [
            10052,
            10067
          ],
          "52": [
            10085,
            10097
          ],
          "53": [
            10164,
            10179
          ],
          "54": [
            10197,
            10209
          ],
          "55": [
            10276,
            10291
          ],
          "56": [
            10309,
            10321
          ],
          "57": [
            10387,
            10401
          ],
          "58": [
            10419,
            10430
          ],
          "59": [
            10496,
            10510
          ],
          "60": [
            10528,
            10539
          ],
          "61": [
            10605,
            10619
          ],
          "62": [
            10637,
            10648
          ],
          "63": [
            10714,
            10725
          ],
          "64": [
            10759,
            10772
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.1/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "628:16327:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:28;;558:22;540:41;;528:2;513:18;1570:300:11;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1743:32:28;;;1725:51;;1713:2;1698:18;3935:167:11;1579:203:28;3468:406:11;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2986:25:28;;;2974:2;2959:18;1929:204:11;2840:177:28;2633:102:11;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2801:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:11;;-1:-1:-1;;;1707:40:11;;:104;;-1:-1:-1;;;;;;;1763:48:11;;-1:-1:-1;;;1763:48:11;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:20;;;1827:36:11;1688:175;1570:300;-1:-1:-1;;1570:300:11:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:11;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:11;:2;-1:-1:-1;;;;;3605:11:11;;3597:57;;;;-1:-1:-1;;;3597:57:11;;5570:2:28;3597:57:11;;;5552:21:28;5609:2;5589:18;;;5582:30;5648:34;5628:18;;;5621:62;-1:-1:-1;;;5699:18:28;;;5692:31;5740:19;;3597:57:11;;;;;;;;;719:10:17;-1:-1:-1;;;;;3686:21:11;;;;:62;;-1:-1:-1;3711:37:11;3728:5;719:10:17;4388:162:11;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:11;;5972:2:28;3665:170:11;;;5954:21:28;6011:2;5991:18;;;5984:30;6050:34;6030:18;;;6023:62;6121:31;6101:18;;;6094:59;6170:19;;3665:170:11;5770:425:28;3665:170:11;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:17;4834:7:11;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:11;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:11;;2324:56;;;;-1:-1:-1;;;2324:56:11;;6816:2:28;2324:56:11;;;6798:21:28;6855:2;6835:18;;;6828:30;-1:-1:-1;;;6874:18:28;;;6867:54;6938:18;;2324:56:11;6614:348:28;1929:204:11;2001:7;-1:-1:-1;;;;;2028:19:11;;2020:73;;;;-1:-1:-1;;;2020:73:11;;7169:2:28;2020:73:11;;;7151:21:28;7208:2;7188:18;;;7181:30;7247:34;7227:18;;;7220:62;-1:-1:-1;;;7298:18:28;;;7291:39;7347:19;;2020:73:11;6967:405:28;2020:73:11;-1:-1:-1;;;;;;2110:16:11;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:17;4296:8:11;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:17;5450:7:11;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:11;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:11;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:11:o;4388:162::-;-1:-1:-1;;;;;4508:25:11;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:11;13539:53;;;;-1:-1:-1;;;13539:53:11;;6816:2:28;13539:53:11;;;6798:21:28;6855:2;6835:18;;;6828:30;-1:-1:-1;;;6874:18:28;;;6867:54;6938:18;;13539:53:11;6614:348:28;13539:53:11;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:11;-1:-1:-1;;;;;12842:29:11;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:11;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:11;:7;-1:-1:-1;;;;;7706:16:11;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:11;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:11;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:11:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:11;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:11;;11542:81;;;;-1:-1:-1;;;11542:81:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:11;;11633:65;;;;-1:-1:-1;;;11633:65:11;;8486:2:28;11633:65:11;;;8468:21:28;8525:2;8505:18;;;8498:30;8564:34;8544:18;;;8537:62;-1:-1:-1;;;8615:18:28;;;8608:34;8659:19;;11633:65:11;8284:400:28;11633:65:11;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:11;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:11;;11843:81;;;;-1:-1:-1;;;11843:81:11;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:11;;;;;;-1:-1:-1;;;;;12461:15:11;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:11;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:11;:5;-1:-1:-1;;;;;13216:17:11;;13208:55;;;;-1:-1:-1;;;13208:55:11;;8891:2:28;13208:55:11;;;8873:21:28;8930:2;8910:18;;;8903:30;8969:27;8949:18;;;8942:55;9014:18;;13208:55:11;8689:349:28;13208:55:11;-1:-1:-1;;;;;13273:25:11;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:11;;;;;;;;;;13334:41;;540::28;;;13334::11;;513:18:28;13334:41:11;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:11;;;;;;;:::i;415:696:19:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:19;-1:-1:-1;572:41:19;-1:-1:-1;733:28:19;;;749:2;733:28;788:280;-1:-1:-1;;819:5:19;-1:-1:-1;;;953:2:19;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:19;788:280;1032:21;-1:-1:-1;1088:6:19;415:696;-1:-1:-1;;;415:696:19:o;15698:396:11:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:11;;;15899:85;;-1:-1:-1;;;;;15941:15:11;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:11;-1:-1:-1;;;;;16001:16:11;;;15997:81;;-1:-1:-1;;;;;16037:13:11;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:11;;;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:11;;1465:19:16;:23;14316:660:11;;14355:71;;-1:-1:-1;;;14355:71:11;;-1:-1:-1;;;;;14355:36:11;;;;;:71;;719:10:17;;14406:4:11;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:11;;;;;;;;-1:-1:-1;;14355:71:11;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:11;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:11;-1:-1:-1;;;14476:51:11;;-1:-1:-1;14469:58:11;;14316:660;-1:-1:-1;14961:4:11;14151:831;;;;;;:::o;9889:890:22:-;9942:7;;-1:-1:-1;;;10017:15:22;;10013:99;;-1:-1:-1;;;10052:15:22;;;-1:-1:-1;10095:2:22;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:22;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:22;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:22;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:22;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:22;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:22:o;14:131:28:-;-1:-1:-1;;;;;;88:32:28;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:28;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:28;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:28:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:226::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1521:23:28;;1348:226;-1:-1:-1;1348:226:28:o;1787:173::-;1855:20;;-1:-1:-1;;;;;1904:31:28;;1894:42;;1884:70;;1950:1;1947;1940:12;1884:70;1787:173;;;:::o;1965:300::-;2033:6;2041;2094:2;2082:9;2073:7;2069:23;2065:32;2062:52;;;2110:1;2107;2100:12;2062:52;2133:29;2152:9;2133:29;:::i;:::-;2123:39;2231:2;2216:18;;;;2203:32;;-1:-1:-1;;;1965:300:28:o;2270:374::-;2347:6;2355;2363;2416:2;2404:9;2395:7;2391:23;2387:32;2384:52;;;2432:1;2429;2422:12;2384:52;2455:29;2474:9;2455:29;:::i;:::-;2445:39;;2503:38;2537:2;2526:9;2522:18;2503:38;:::i;:::-;2270:374;;2493:48;;-1:-1:-1;;;2610:2:28;2595:18;;;;2582:32;;2270:374::o;2649:186::-;2708:6;2761:2;2749:9;2740:7;2736:23;2732:32;2729:52;;;2777:1;2774;2767:12;2729:52;2800:29;2819:9;2800:29;:::i;3022:347::-;3087:6;3095;3148:2;3136:9;3127:7;3123:23;3119:32;3116:52;;;3164:1;3161;3154:12;3116:52;3187:29;3206:9;3187:29;:::i;:::-;3177:39;;3266:2;3255:9;3251:18;3238:32;3313:5;3306:13;3299:21;3292:5;3289:32;3279:60;;3335:1;3332;3325:12;3279:60;3358:5;3348:15;;;3022:347;;;;;:::o;3374:127::-;3435:10;3430:3;3426:20;3423:1;3416:31;3466:4;3463:1;3456:15;3490:4;3487:1;3480:15;3506:1207;3601:6;3609;3617;3625;3678:3;3666:9;3657:7;3653:23;3649:33;3646:53;;;3695:1;3692;3685:12;3646:53;3718:29;3737:9;3718:29;:::i;:::-;3708:39;;3766:38;3800:2;3789:9;3785:18;3766:38;:::i;:::-;3756:48;-1:-1:-1;3873:2:28;3858:18;;3845:32;;-1:-1:-1;3952:2:28;3937:18;;3924:32;3979:18;3968:30;;3965:50;;;4011:1;4008;4001:12;3965:50;4034:22;;4087:4;4079:13;;4075:27;-1:-1:-1;4065:55:28;;4116:1;4113;4106:12;4065:55;4156:2;4143:16;4182:18;4174:6;4171:30;4168:56;;;4204:18;;:::i;:::-;4253:2;4247:9;4345:2;4307:17;;-1:-1:-1;;4303:31:28;;;4336:2;4299:40;4295:54;4283:67;;4380:18;4365:34;;4401:22;;;4362:62;4359:88;;;4427:18;;:::i;:::-;4463:2;4456:22;4487;;;4528:15;;;4545:2;4524:24;4521:37;-1:-1:-1;4518:57:28;;;4571:1;4568;4561:12;4518:57;4627:6;4622:2;4618;4614:11;4609:2;4601:6;4597:15;4584:50;4680:1;4675:2;4666:6;4658;4654:19;4650:28;4643:39;4701:6;4691:16;;;;;3506:1207;;;;;;;:::o;4718:260::-;4786:6;4794;4847:2;4835:9;4826:7;4822:23;4818:32;4815:52;;;4863:1;4860;4853:12;4815:52;4886:29;4905:9;4886:29;:::i;:::-;4876:39;;4934:38;4968:2;4957:9;4953:18;4934:38;:::i;:::-;4924:48;;4718:260;;;;;:::o;4983:380::-;5062:1;5058:12;;;;5105;;;5126:61;;5180:4;5172:6;5168:17;5158:27;;5126:61;5233:2;5225:6;5222:14;5202:18;5199:38;5196:161;;5279:10;5274:3;5270:20;5267:1;5260:31;5314:4;5311:1;5304:15;5342:4;5339:1;5332:15;5196:161;;4983:380;;;:::o;6200:409::-;6402:2;6384:21;;;6441:2;6421:18;;;6414:30;6480:34;6475:2;6460:18;;6453:62;-1:-1:-1;;;6546:2:28;6531:18;;6524:43;6599:3;6584:19;;6200:409::o;7377:496::-;7556:3;7594:6;7588:13;7610:66;7669:6;7664:3;7657:4;7649:6;7645:17;7610:66;:::i;:::-;7739:13;;7698:16;;;;7761:70;7739:13;7698:16;7808:4;7796:17;;7761:70;:::i;:::-;7847:20;;7377:496;-1:-1:-1;;;;7377:496:28:o;7878:401::-;8080:2;8062:21;;;8119:2;8099:18;;;8092:30;8158:34;8153:2;8138:18;;8131:62;-1:-1:-1;;;8224:2:28;8209:18;;8202:35;8269:3;8254:19;;7878:401::o;9043:414::-;9245:2;9227:21;;;9284:2;9264:18;;;9257:30;9323:34;9318:2;9303:18;;9296:62;-1:-1:-1;;;9389:2:28;9374:18;;9367:48;9447:3;9432:19;;9043:414::o;9594:127::-;9655:10;9650:3;9646:20;9643:1;9636:31;9686:4;9683:1;9676:15;9710:4;9707:1;9700:15;9726:128;9793:9;;;9814:11;;;9811:37;;;9828:18;;:::i;9859:125::-;9924:9;;;9945:10;;;9942:36;;;9958:18;;:::i;9989:485::-;-1:-1:-1;;;;;10220:32:28;;;10202:51;;10289:32;;10284:2;10269:18;;10262:60;10353:2;10338:18;;10331:34;;;10401:3;10396:2;10381:18;;10374:31;;;-1:-1:-1;;10422:46:28;;10448:19;;10440:6;10422:46;:::i;:::-;10414:54;9989:485;-1:-1:-1;;;;;;9989:485:28:o;10479:249::-;10548:6;10601:2;10589:9;10580:7;10576:23;10572:32;10569:52;;;10617:1;10614;10607:12;10569:52;10649:9;10643:16;10668:30;10692:5;10668:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    16955
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDAE JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE15 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x556 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE30 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE82 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x5AC JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF66 JUMP JUMPDEST PUSH2 0x620 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x230 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x24B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28C SWAP1 PUSH2 0xF99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE DUP3 PUSH2 0x64E JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315 DUP3 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3A3 JUMPI POP PUSH2 0x3A3 DUP2 CALLER PUSH2 0x620 JUMP JUMPDEST PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x42E CALLER DUP3 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x44A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x41F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x574 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x260 SWAP1 PUSH2 0xF99 JUMP JUMPDEST PUSH2 0x570 CALLER DUP4 DUP4 PUSH2 0x8EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x57E CALLER DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0xFD3 JUMP JUMPDEST PUSH2 0x5A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0x9BC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5B7 DUP3 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5CE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x619 JUMP JUMPDEST DUP1 PUSH2 0x5F8 DUP5 PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x609 SWAP3 SWAP2 SWAP1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E5 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x72A DUP4 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x751 JUMPI POP PUSH2 0x751 DUP2 DUP6 PUSH2 0x620 JUMP JUMPDEST DUP1 PUSH2 0x775 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x76A DUP5 PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x790 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x37E JUMP JUMPDEST PUSH2 0x825 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA82 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x838 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x85E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x104F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x37E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9C7 DUP5 DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x9D3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB0A JUMP JUMPDEST PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1094 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9FC DUP4 PUSH2 0xC0B JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA1C JUMPI PUSH2 0xA1C PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA50 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAC2 SWAP1 DUP5 SWAP1 PUSH2 0x10FC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xAFF SWAP1 DUP5 SWAP1 PUSH2 0x110F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB4E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB89 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB86 SWAP2 DUP2 ADD SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xBE6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP1 PUSH2 0x1094 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x775 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC4A JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC76 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC94 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCAC JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCC0 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCD2 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x24B JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD31 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD19 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD52 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x619 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCA DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDF6 DUP5 PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH2 0xE04 PUSH1 0x20 DUP6 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 DUP3 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4C DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEA1 DUP6 PUSH2 0xD92 JUMP JUMPDEST SWAP4 POP PUSH2 0xEAF PUSH1 0x20 DUP7 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xEE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFD JUMPI PUSH2 0xEFD PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2C PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0xF44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF82 DUP4 PUSH2 0xD92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF90 PUSH1 0x20 DUP5 ADD PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFAD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFCD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1032 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1046 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD16 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10E6 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x24B JUMPI PUSH2 0x24B PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1155 SWAP1 DUP4 ADD DUP5 PUSH2 0xD3A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x619 DUP2 PUSH2 0xCE3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x603B8BDDF300F2B42027EFD55F72ECE5A5F28194A6EE344D6A5F 0xCC 0x4C JUMPI GASPRICE 0xE9 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "11"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "POP",
      "path": "11"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "LT",
      "path": "11"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "SHR",
      "path": "11"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "GT",
      "path": "11"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "GT",
      "path": "11"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "11"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "11"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "11"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "11"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "11"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xCF9"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "11"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FF"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "11"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "11"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "11"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "11"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x251"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD66"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD79"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "11"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E3"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "11"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDAE"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "11"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x30A"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "11"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "STOP",
      "path": "11"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDD8"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x424"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMP",
      "path": "11"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xDD8"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMP",
      "path": "11"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x455"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMP",
      "path": "11"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD79"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMP",
      "path": "11"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x470"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMP",
      "path": "11"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE15"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "11"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4D0"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "11"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x556"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMP",
      "path": "11"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE30"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "11"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x565"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "11"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE82"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMP",
      "path": "11"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x574"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMP",
      "path": "11"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD79"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5AC"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF66"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "11"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "507": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x620"
    },
    "510": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "11"
    },
    "511": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "512": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "SUB"
    },
    "522": {
      "op": "NOT"
    },
    "523": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 0
    },
    "524": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "11"
    },
    "525": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "11"
    },
    "534": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "11"
    },
    "535": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x230"
    },
    "538": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "539": {
      "op": "POP"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "546": {
      "op": "SHL"
    },
    "547": {
      "op": "SUB"
    },
    "548": {
      "op": "NOT"
    },
    "549": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "11"
    },
    "550": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "11"
    },
    "551": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "556": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "558": {
      "op": "SHL"
    },
    "559": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "11"
    },
    "560": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "561": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "11"
    },
    "562": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x24B"
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "574": {
      "op": "SHL"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "579": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "581": {
      "op": "SHL"
    },
    "582": {
      "op": "SUB"
    },
    "583": {
      "op": "NOT"
    },
    "584": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "20",
      "statement": 1
    },
    "585": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "20"
    },
    "586": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "20"
    },
    "587": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "588": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "589": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "11"
    },
    "593": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "594": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2538
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.name",
      "offset": [
        2557,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 2,
      "value": "0x0"
    },
    "598": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "599": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "600": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "603": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "604": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF99"
    },
    "607": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "11"
    },
    "608": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "609": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "610": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "612": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "613": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "615": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "616": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "617": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DIV",
      "path": "11"
    },
    "618": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MUL",
      "path": "11"
    },
    "619": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "621": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "622": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "625": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "626": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "11"
    },
    "627": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "628": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "630": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "631": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "632": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "633": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "11"
    },
    "636": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "11"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "638": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "11"
    },
    "642": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "643": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x28C"
    },
    "647": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "648": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF99"
    },
    "651": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "11"
    },
    "652": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "655": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "LT",
      "path": "11"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2AE"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "670": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "11"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DIV",
      "path": "11"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MUL",
      "path": "11"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "11"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "680": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2D9"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "11"
    },
    "686": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "687": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "11"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "690": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "691": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "698": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "11"
    },
    "702": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "11"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "705": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "706": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "709": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "710": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "11"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "11"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "GT",
      "path": "11"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2BC"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "720": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "11"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SUB",
      "path": "11"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "725": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "AND",
      "path": "11"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "11"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "11"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "11"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "11"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "11"
    },
    "733": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "11"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "11"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "736": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "11"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "738": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "11"
    },
    "739": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "740": {
      "fn": "ERC721.getApproved",
      "offset": [
        4011,
        4018
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "742": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 3,
      "value": "0x2EE"
    },
    "745": {
      "fn": "ERC721.getApproved",
      "offset": [
        4045,
        4052
      ],
      "op": "DUP3",
      "path": "11"
    },
    "746": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x64E"
    },
    "749": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMP",
      "path": "11"
    },
    "750": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "751": {
      "op": "POP"
    },
    "752": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 4,
      "value": "0x0"
    },
    "754": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "755": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "DUP2",
      "path": "11"
    },
    "756": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "757": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4086
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "759": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "761": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "762": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "764": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "765": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "766": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "773": {
      "op": "SHL"
    },
    "774": {
      "op": "SUB"
    },
    "775": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "AND",
      "path": "11"
    },
    "776": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "777": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "11"
    },
    "778": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "779": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3561
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "781": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3587
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x315"
    },
    "784": {
      "fn": "ERC721.approve",
      "offset": [
        3579,
        3586
      ],
      "op": "DUP3",
      "path": "11"
    },
    "785": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3578
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x470"
    },
    "788": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3564,
        3587
      ],
      "op": "JUMP",
      "path": "11"
    },
    "789": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3587
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "790": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3587
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "791": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3587
      ],
      "op": "POP",
      "path": "11"
    },
    "792": {
      "fn": "ERC721.approve",
      "offset": [
        3611,
        3616
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 5
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "SUB"
    },
    "801": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "AND",
      "path": "11"
    },
    "802": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3607
      ],
      "op": "DUP4",
      "path": "11"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "809": {
      "op": "SHL"
    },
    "810": {
      "op": "SUB"
    },
    "811": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "AND",
      "path": "11"
    },
    "812": {
      "branch": 65,
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "SUB",
      "path": "11"
    },
    "813": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x387"
    },
    "816": {
      "branch": 65,
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "817": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "819": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "820": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "824": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "826": {
      "op": "SHL"
    },
    "827": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP2",
      "path": "11"
    },
    "828": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "831": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "833": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP3",
      "path": "11"
    },
    "834": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "ADD",
      "path": "11"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "838": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "840": {
      "op": "DUP3"
    },
    "841": {
      "op": "ADD"
    },
    "842": {
      "op": "MSTORE"
    },
    "843": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "878": {
      "op": "DUP3"
    },
    "879": {
      "op": "ADD"
    },
    "880": {
      "op": "MSTORE"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "883": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "885": {
      "op": "SHL"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "888": {
      "op": "DUP3"
    },
    "889": {
      "op": "ADD"
    },
    "890": {
      "op": "MSTORE"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "895": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "897": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "898": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP1",
      "path": "11"
    },
    "899": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "900": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SUB",
      "path": "11"
    },
    "901": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "902": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "11"
    },
    "903": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "904": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "17",
      "statement": 6
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "op": "SUB"
    },
    "913": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 7
    },
    "914": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "AND",
      "path": "11"
    },
    "915": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "EQ",
      "path": "11"
    },
    "916": {
      "branch": 66,
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "DUP1",
      "path": "11"
    },
    "917": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3748
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A3"
    },
    "920": {
      "branch": 66,
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3748
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC721.approve",
      "offset": [
        3711,
        3748
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3A3"
    },
    "925": {
      "fn": "ERC721.approve",
      "offset": [
        3728,
        3733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "17"
    },
    "927": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x620"
    },
    "930": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "11"
    },
    "931": {
      "branch": 67,
      "fn": "ERC721.approve",
      "offset": [
        3711,
        3748
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "932": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x415"
    },
    "935": {
      "branch": 67,
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "936": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "945": {
      "op": "SHL"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "DUP2",
      "path": "11"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "950": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "952": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "DUP3",
      "path": "11"
    },
    "953": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "ADD",
      "path": "11"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "959": {
      "op": "DUP3"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1040": {
      "op": "ADD"
    },
    "1041": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1044": {
      "op": "JUMP"
    },
    "1045": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1046": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 8,
      "value": "0x41F"
    },
    "1049": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3857
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        3859,
        3866
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3854
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6B0"
    },
    "1054": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1056": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3874
      ],
      "op": "POP",
      "path": "11"
    },
    "1057": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "11"
    },
    "1058": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "11"
    },
    "1059": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1060": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1061": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 9,
      "value": "0x42E"
    },
    "1064": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1065": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1066": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4819
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x71E"
    },
    "1069": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1070": {
      "branch": 68,
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1071": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44A"
    },
    "1074": {
      "branch": 68,
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1075": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1077": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1078": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1084": {
      "op": "SHL"
    },
    "1085": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1086": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1087": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1089": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "ADD",
      "path": "11"
    },
    "1090": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1093": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1094": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFD3"
    },
    "1097": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        4892
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1098": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1099": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4903,
        4931
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 10,
      "value": "0x41F"
    },
    "1102": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4913,
        4917
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1103": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4921
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1104": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1105": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4903,
        4912
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x77D"
    },
    "1108": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4903,
        4931
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1109": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1110": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 11,
      "value": "0x41F"
    },
    "1113": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5154,
        5158
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1114": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5160,
        5162
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1115": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5164,
        5171
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1116": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1118": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1119": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1120": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1122": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "ADD",
      "path": "11"
    },
    "1123": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1125": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1126": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1127": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1129": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1130": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1131": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "POP",
      "path": "11"
    },
    "1132": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5153
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x574"
    },
    "1135": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5137,
        5176
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1136": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1137": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2262,
        2269
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1139": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 12
    },
    "1140": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1141": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1142": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6937
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1144": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1146": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1147": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1149": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1150": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1151": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "AND",
      "path": "11"
    },
    "1161": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1162": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 13,
      "value": "0x24B"
    },
    "1165": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1166": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1168": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1169": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1177": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1180": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1182": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1183": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "ADD",
      "path": "11"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1189": {
      "op": "DUP3"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "MSTORE"
    },
    "1192": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1231": {
      "op": "JUMP"
    },
    "1232": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1233": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1241": {
      "op": "SHL"
    },
    "1242": {
      "op": "SUB"
    },
    "1243": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 14
    },
    "1244": {
      "branch": 69,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "11"
    },
    "1245": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x53A"
    },
    "1248": {
      "branch": 69,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1249": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1251": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1252": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1258": {
      "op": "SHL"
    },
    "1259": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1260": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1263": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1265": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1266": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "ADD",
      "path": "11"
    },
    "1267": {
      "op": "MSTORE"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1272": {
      "op": "DUP3"
    },
    "1273": {
      "op": "ADD"
    },
    "1274": {
      "op": "MSTORE"
    },
    "1275": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1325": {
      "op": "SHL"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1328": {
      "op": "DUP3"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1333": {
      "op": "ADD"
    },
    "1334": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1337": {
      "op": "JUMP"
    },
    "1338": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1346": {
      "op": "SHL"
    },
    "1347": {
      "op": "SUB"
    },
    "1348": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "AND",
      "path": "11",
      "statement": 15
    },
    "1349": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1351": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1352": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1353": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1354": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2119
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "1356": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1358": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1359": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1361": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1362": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1363": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1364": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1365": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1366": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1367": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2702
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1369": {
      "fn": "ERC721.symbol",
      "offset": [
        2721,
        2728
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 16,
      "value": "0x1"
    },
    "1371": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1372": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1373": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x260"
    },
    "1376": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1377": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xF99"
    },
    "1380": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2714,
        2728
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1381": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1382": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 17,
      "value": "0x570"
    },
    "1385": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1386": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4296,
        4304
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1387": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4306,
        4314
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1388": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4281
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x8EE"
    },
    "1391": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1392": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1393": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "11"
    },
    "1394": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "11"
    },
    "1395": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1396": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1397": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5417,
        5458
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 18,
      "value": "0x57E"
    },
    "1400": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "17"
    },
    "1401": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5450,
        5457
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1402": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5417,
        5435
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x71E"
    },
    "1405": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5417,
        5458
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1406": {
      "branch": 70,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5417,
        5458
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1407": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x59A"
    },
    "1410": {
      "branch": 70,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1411": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1413": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1414": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1420": {
      "op": "SHL"
    },
    "1421": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1422": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1423": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1425": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "ADD",
      "path": "11"
    },
    "1426": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1429": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1430": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xFD3"
    },
    "1433": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5409,
        5508
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1434": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1435": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5518,
        5556
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 19,
      "value": "0x5A6"
    },
    "1438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5532,
        5536
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1439": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5538,
        5540
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1440": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5542,
        5549
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1441": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5551,
        5555
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5518,
        5531
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9BC"
    },
    "1445": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5518,
        5556
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1446": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5518,
        5556
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1447": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "11"
    },
    "1448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "11"
    },
    "1449": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "11"
    },
    "1450": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "11"
    },
    "1451": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1452": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1453": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2887
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1455": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2922
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 20,
      "value": "0x5B7"
    },
    "1458": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2914,
        2921
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1459": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2913
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x64E"
    },
    "1462": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2899,
        2922
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1463": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2922
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1464": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2954
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1466": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2957,
        2967
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5CE"
    },
    "1469": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 21,
      "value": "0x40"
    },
    "1471": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1472": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1473": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1475": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1476": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "ADD",
      "path": "11"
    },
    "1477": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1478": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1479": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1482": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1483": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1484": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1485": {
      "fn": "ERC721._baseURI",
      "offset": [
        3319,
        3411
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1486": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2957,
        2967
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2967
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2967
      ],
      "op": "POP",
      "path": "11"
    },
    "1489": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3008,
        3009
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 22,
      "value": "0x0"
    },
    "1491": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2990,
        2997
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1492": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3005
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1493": {
      "branch": 71,
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3009
      ],
      "op": "GT",
      "path": "11"
    },
    "1494": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5EE"
    },
    "1497": {
      "branch": 71,
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1498": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1500": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1501": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1502": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1504": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "ADD",
      "path": "11"
    },
    "1505": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1507": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1508": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1509": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1511": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1512": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1513": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "POP",
      "path": "11"
    },
    "1514": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x619"
    },
    "1517": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1518": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1519": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3036,
        3043
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1520": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3063
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3052
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1524": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x9EF"
    },
    "1527": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3045,
        3063
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1528": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3063
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1529": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1531": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1532": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "ADD",
      "path": "11"
    },
    "1535": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x609"
    },
    "1538": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1539": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1540": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1541": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1020"
    },
    "1544": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3019,
        3064
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1545": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1546": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1548": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1549": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1551": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1552": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1553": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SUB",
      "path": "11"
    },
    "1554": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SUB",
      "path": "11"
    },
    "1555": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1556": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1557": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1558": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1561": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1562": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2977,
        3070
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1563": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1568": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "op": "SUB"
    },
    "1577": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 23
    },
    "1578": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1579": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "11"
    },
    "1580": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1582": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1583": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1584": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1585": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "1587": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1589": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1590": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1591": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1592": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1594": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1595": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1596": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1597": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1598": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1599": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1600": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "11"
    },
    "1601": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1602": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1603": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1604": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1605": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1606": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1607": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1608": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1609": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "1611": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "11"
    },
    "1612": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1613": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1614": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13466,
        13599
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1615": {
      "fn": "ERC721._exists",
      "offset": [
        7321,
        7325
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1617": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1618": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1619": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1620": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6937
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1622": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1624": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1625": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1627": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1628": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1629": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "SUB"
    },
    "1638": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "AND",
      "path": "11"
    },
    "1639": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 24,
      "value": "0x6AD"
    },
    "1642": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1643": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1645": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1654": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1659": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1660": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "ADD",
      "path": "11"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1696": {
      "op": "SHL"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1699": {
      "op": "DUP3"
    },
    "1700": {
      "op": "ADD"
    },
    "1701": {
      "op": "MSTORE"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1704": {
      "op": "ADD"
    },
    "1705": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1708": {
      "op": "JUMP"
    },
    "1709": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1710": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13466,
        13599
      ],
      "op": "POP",
      "path": "11"
    },
    "1711": {
      "fn": "ERC721._requireMinted",
      "jump": "o",
      "offset": [
        13466,
        13599
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1712": {
      "fn": "ERC721._approve",
      "offset": [
        12768,
        12939
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1713": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 25,
      "value": "0x0"
    },
    "1715": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1716": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1717": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1718": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12857
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1720": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1722": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1723": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1725": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1726": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1727": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1728": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "op": "SUB"
    },
    "1737": {
      "op": "NOT"
    },
    "1738": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "AND",
      "path": "11"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1745": {
      "op": "SHL"
    },
    "1746": {
      "op": "SUB"
    },
    "1747": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1748": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "AND",
      "path": "11"
    },
    "1749": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1750": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1751": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "OR",
      "path": "11"
    },
    "1752": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1753": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1754": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "1755": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1756": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1757": {
      "fn": "ERC721._approve",
      "offset": [
        12895,
        12918
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 26,
      "value": "0x6E5"
    },
    "1760": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1761": {
      "fn": "ERC721._approve",
      "offset": [
        12895,
        12909
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x470"
    },
    "1764": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        12895,
        12918
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1765": {
      "fn": "ERC721._approve",
      "offset": [
        12895,
        12918
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "AND",
      "path": "11"
    },
    "1775": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1808": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1810": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1811": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1813": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1814": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1815": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1816": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "SUB",
      "path": "11"
    },
    "1817": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1818": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "LOG4",
      "path": "11"
    },
    "1819": {
      "fn": "ERC721._approve",
      "offset": [
        12768,
        12939
      ],
      "op": "POP",
      "path": "11"
    },
    "1820": {
      "fn": "ERC721._approve",
      "offset": [
        12768,
        12939
      ],
      "op": "POP",
      "path": "11"
    },
    "1821": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        12768,
        12939
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1822": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7540,
        7801
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1823": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7633,
        7637
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1825": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7662
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1826": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7688
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x72A"
    },
    "1829": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7680,
        7687
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1830": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7679
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x470"
    },
    "1833": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7665,
        7688
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1834": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7688
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1835": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7688
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1836": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7688
      ],
      "op": "POP",
      "path": "11"
    },
    "1837": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7717,
        7722
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 27
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1844": {
      "op": "SHL"
    },
    "1845": {
      "op": "SUB"
    },
    "1846": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7722
      ],
      "op": "AND",
      "path": "11"
    },
    "1847": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7713
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7722
      ],
      "op": "AND",
      "path": "11"
    },
    "1857": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7722
      ],
      "op": "EQ",
      "path": "11"
    },
    "1858": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1859": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x751"
    },
    "1862": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1863": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "POP",
      "path": "11"
    },
    "1864": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7726,
        7758
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x751"
    },
    "1867": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7743,
        7748
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1868": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7750,
        7757
      ],
      "op": "DUP6",
      "path": "11"
    },
    "1869": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7726,
        7742
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x620"
    },
    "1872": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7726,
        7758
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1873": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7726,
        7758
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1874": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1875": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x775"
    },
    "1878": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1879": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "POP",
      "path": "11"
    },
    "1880": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7793
      ],
      "op": "AND",
      "path": "11"
    },
    "1890": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7782
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x76A"
    },
    "1893": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7781
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1894": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7773
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x2E3"
    },
    "1897": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7762,
        7782
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1898": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7782
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7793
      ],
      "op": "AND",
      "path": "11"
    },
    "1908": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7793
      ],
      "op": "EQ",
      "path": "11"
    },
    "1909": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1910": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7698,
        7794
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1911": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7540,
        7801
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1912": {
      "op": "POP"
    },
    "1913": {
      "op": "POP"
    },
    "1914": {
      "op": "POP"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7540,
        7801
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1917": {
      "fn": "ERC721._transfer",
      "offset": [
        11423,
        12656
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1918": {
      "fn": "ERC721._transfer",
      "offset": [
        11577,
        11581
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 28
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "op": "SUB"
    },
    "1927": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11581
      ],
      "op": "AND",
      "path": "11"
    },
    "1928": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11573
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x790"
    },
    "1931": {
      "fn": "ERC721._transfer",
      "offset": [
        11565,
        11572
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1932": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11564
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x470"
    },
    "1935": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11550,
        11573
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1936": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11573
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1943": {
      "op": "SHL"
    },
    "1944": {
      "op": "SUB"
    },
    "1945": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11581
      ],
      "op": "AND",
      "path": "11"
    },
    "1946": {
      "branch": 72,
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11581
      ],
      "op": "EQ",
      "path": "11"
    },
    "1947": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7B6"
    },
    "1950": {
      "branch": 72,
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1951": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1953": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1954": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1960": {
      "op": "SHL"
    },
    "1961": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1962": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1963": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "1965": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "ADD",
      "path": "11"
    },
    "1966": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "1969": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1970": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104F"
    },
    "1973": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11542,
        11623
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1974": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "op": "SUB"
    },
    "1983": {
      "fn": "ERC721._transfer",
      "offset": [
        11641,
        11657
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 29
    },
    "1984": {
      "branch": 73,
      "fn": "ERC721._transfer",
      "offset": [
        11641,
        11657
      ],
      "op": "AND",
      "path": "11"
    },
    "1985": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x818"
    },
    "1988": {
      "branch": 73,
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1989": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1991": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1992": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1998": {
      "op": "SHL"
    },
    "1999": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2000": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2003": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2005": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2006": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "ADD",
      "path": "11"
    },
    "2007": {
      "op": "MSTORE"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2010": {
      "op": "DUP1"
    },
    "2011": {
      "op": "DUP3"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2049": {
      "op": "DUP3"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "MSTORE"
    },
    "2052": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2059": {
      "op": "SHL"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2062": {
      "op": "DUP3"
    },
    "2063": {
      "op": "ADD"
    },
    "2064": {
      "op": "MSTORE"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "2071": {
      "op": "JUMP"
    },
    "2072": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2073": {
      "fn": "ERC721._transfer",
      "offset": [
        11709,
        11751
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 30,
      "value": "0x825"
    },
    "2076": {
      "fn": "ERC721._transfer",
      "offset": [
        11730,
        11734
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2077": {
      "fn": "ERC721._transfer",
      "offset": [
        11736,
        11738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2078": {
      "fn": "ERC721._transfer",
      "offset": [
        11740,
        11747
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2079": {
      "fn": "ERC721._transfer",
      "offset": [
        11749,
        11750
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2081": {
      "fn": "ERC721._transfer",
      "offset": [
        11709,
        11729
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xA82"
    },
    "2084": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11709,
        11751
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2085": {
      "fn": "ERC721._transfer",
      "offset": [
        11709,
        11751
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2086": {
      "fn": "ERC721._transfer",
      "offset": [
        11878,
        11882
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 31
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2093": {
      "op": "SHL"
    },
    "2094": {
      "op": "SUB"
    },
    "2095": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11882
      ],
      "op": "AND",
      "path": "11"
    },
    "2096": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11874
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x838"
    },
    "2099": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11873
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2100": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11865
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x470"
    },
    "2103": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11851,
        11874
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2104": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11874
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11882
      ],
      "op": "AND",
      "path": "11"
    },
    "2114": {
      "branch": 74,
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11882
      ],
      "op": "EQ",
      "path": "11"
    },
    "2115": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x85E"
    },
    "2118": {
      "branch": 74,
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2119": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2121": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2122": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2128": {
      "op": "SHL"
    },
    "2129": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2130": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2131": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2133": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "ADD",
      "path": "11"
    },
    "2134": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "2137": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2138": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x104F"
    },
    "2141": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11843,
        11924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2142": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2143": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 32,
      "value": "0x0"
    },
    "2145": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2146": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2147": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2148": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12008
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2150": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2152": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2153": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2154": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2155": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2157": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2158": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2159": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2160": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2161": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2168": {
      "op": "SHL"
    },
    "2169": {
      "op": "SUB"
    },
    "2170": {
      "op": "NOT"
    },
    "2171": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2172": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2173": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "AND",
      "path": "11"
    },
    "2174": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2175": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2176": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2183": {
      "op": "SHL"
    },
    "2184": {
      "op": "SUB"
    },
    "2185": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP8",
      "path": "11",
      "statement": 33
    },
    "2186": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2187": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "AND",
      "path": "11"
    },
    "2188": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2189": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2190": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2191": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12470
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2193": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2194": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2195": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2196": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2197": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2198": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2199": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2202": {
      "op": "NOT"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "ADD",
      "path": "11"
    },
    "2204": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2205": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2206": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 34
    },
    "2207": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2208": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "AND",
      "path": "11"
    },
    "2209": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2210": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2211": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2212": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2213": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2214": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2215": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2219": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "ADD",
      "path": "11"
    },
    "2220": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2221": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2222": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 35
    },
    "2223": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2224": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2225": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12540
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2229": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2237": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "AND",
      "path": "11"
    },
    "2238": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2239": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "OR",
      "path": "11"
    },
    "2240": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2241": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2242": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2243": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 36
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2245": {
      "fn": "ERC721._transfer",
      "offset": [
        12009,
        12016
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        12009,
        12016
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2280": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2281": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "LOG4",
      "path": "11"
    },
    "2282": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3874
      ],
      "op": "POP",
      "path": "11"
    },
    "2283": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "11"
    },
    "2284": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "11"
    },
    "2285": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2286": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2287": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13225,
        13233
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 37
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2294": {
      "op": "SHL"
    },
    "2295": {
      "op": "SUB"
    },
    "2296": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13233
      ],
      "op": "AND",
      "path": "11"
    },
    "2297": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13221
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2304": {
      "op": "SHL"
    },
    "2305": {
      "op": "SUB"
    },
    "2306": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13233
      ],
      "op": "AND",
      "path": "11"
    },
    "2307": {
      "branch": 75,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13233
      ],
      "op": "SUB",
      "path": "11"
    },
    "2308": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x94F"
    },
    "2311": {
      "branch": 75,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2312": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2314": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2315": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2323": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2326": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2328": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2329": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "ADD",
      "path": "11"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2335": {
      "op": "DUP3"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "ADD"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "2382": {
      "op": "JUMP"
    },
    "2383": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2390": {
      "op": "SHL"
    },
    "2391": {
      "op": "SUB"
    },
    "2392": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 38
    },
    "2393": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2394": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "AND",
      "path": "11"
    },
    "2395": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2397": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2398": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2399": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2400": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13291
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x5"
    },
    "2402": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2404": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2405": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2406": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2407": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2409": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2410": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2411": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2412": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2413": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2414": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "AND",
      "path": "11"
    },
    "2415": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2416": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2417": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2418": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "2419": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2420": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2421": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2422": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2423": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2424": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2425": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2426": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2429": {
      "op": "NOT"
    },
    "2430": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "AND",
      "path": "11"
    },
    "2431": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2432": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2433": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2434": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2435": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2436": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "OR",
      "path": "11"
    },
    "2437": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2438": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2439": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2440": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP2",
      "path": "11",
      "statement": 39
    },
    "2441": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2442": {
      "op": "SWAP2"
    },
    "2443": {
      "op": "DUP3"
    },
    "2444": {
      "op": "MSTORE"
    },
    "2445": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2478": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2479": {
      "op": "ADD"
    },
    "2480": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2482": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2483": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2484": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2485": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SUB",
      "path": "11"
    },
    "2486": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2487": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "LOG3",
      "path": "11"
    },
    "2488": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "POP",
      "path": "11"
    },
    "2489": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "POP",
      "path": "11"
    },
    "2490": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "POP",
      "path": "11"
    },
    "2491": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        13075,
        13382
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2492": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6424,
        6729
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2493": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6602
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 40,
      "value": "0x9C7"
    },
    "2496": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6584,
        6588
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2497": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6590,
        6592
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2498": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6594,
        6601
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2499": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6583
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x77D"
    },
    "2502": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6574,
        6602
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2503": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6602
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2504": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6667
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 41,
      "value": "0x9D3"
    },
    "2507": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6643,
        6647
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2508": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6649,
        6651
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2509": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6653,
        6660
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2510": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6662,
        6666
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2511": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6642
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB0A"
    },
    "2514": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6620,
        6667
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2515": {
      "branch": 76,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6667
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2516": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A6"
    },
    "2519": {
      "branch": 76,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2520": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2522": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2523": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2529": {
      "op": "SHL"
    },
    "2530": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2531": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2532": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2534": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "ADD",
      "path": "11"
    },
    "2535": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "2538": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2539": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1094"
    },
    "2542": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6612,
        6722
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2543": {
      "fn": "Strings.toString",
      "offset": [
        415,
        1111
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2544": {
      "fn": "Strings.toString",
      "offset": [
        471,
        484
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "2546": {
      "fn": "Strings.toString",
      "offset": [
        520,
        534
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2548": {
      "fn": "Strings.toString",
      "offset": [
        537,
        554
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x9FC"
    },
    "2551": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2552": {
      "fn": "Strings.toString",
      "offset": [
        537,
        547
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC0B"
    },
    "2555": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        537,
        554
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2556": {
      "fn": "Strings.toString",
      "offset": [
        537,
        554
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2557": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2559": {
      "fn": "Strings.toString",
      "offset": [
        537,
        558
      ],
      "op": "ADD",
      "path": "19"
    },
    "2560": {
      "fn": "Strings.toString",
      "offset": [
        520,
        558
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2561": {
      "fn": "Strings.toString",
      "offset": [
        520,
        558
      ],
      "op": "POP",
      "path": "19"
    },
    "2562": {
      "fn": "Strings.toString",
      "offset": [
        572,
        592
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2564": {
      "fn": "Strings.toString",
      "offset": [
        606,
        612
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2565": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH8",
      "path": "19",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2574": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2575": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "GT",
      "path": "19"
    },
    "2576": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2577": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA1C"
    },
    "2580": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2581": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA1C"
    },
    "2584": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE6C"
    },
    "2587": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        595,
        613
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2588": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2589": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2591": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2592": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2593": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2594": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2595": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2596": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2597": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "2599": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "2600": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1F"
    },
    "2602": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "NOT",
      "path": "19"
    },
    "2603": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "AND",
      "path": "19"
    },
    "2604": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2606": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "2607": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2608": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "2609": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2611": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2612": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2613": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2614": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA46"
    },
    "2617": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2618": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2620": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2621": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "2622": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2623": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2624": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "2625": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2626": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "CALLDATACOPY",
      "path": "19"
    },
    "2627": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "19"
    },
    "2628": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2629": {
      "op": "POP"
    },
    "2630": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2631": {
      "op": "POP"
    },
    "2632": {
      "fn": "Strings.toString",
      "offset": [
        572,
        613
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2633": {
      "op": "POP"
    },
    "2634": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2635": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2636": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "ADD",
      "path": "19"
    },
    "2637": {
      "fn": "Strings.toString",
      "offset": [
        749,
        751
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2639": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "ADD",
      "path": "19"
    },
    "2640": {
      "fn": "Strings.toString",
      "offset": [
        788,
        1068
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2643": {
      "op": "NOT"
    },
    "2644": {
      "fn": "Strings.toString",
      "offset": [
        819,
        824
      ],
      "op": "ADD",
      "path": "19",
      "statement": 42
    },
    "2645": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2664": {
      "op": "SHL"
    },
    "2665": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "2667": {
      "fn": "Strings.toString",
      "offset": [
        942,
        956
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2668": {
      "fn": "Strings.toString",
      "offset": [
        942,
        956
      ],
      "op": "MOD",
      "path": "19"
    },
    "2669": {
      "fn": "Strings.toString",
      "offset": [
        937,
        967
      ],
      "op": "BYTE",
      "path": "19"
    },
    "2670": {
      "fn": "Strings.toString",
      "offset": [
        819,
        824
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2671": {
      "fn": "Strings.toString",
      "offset": [
        924,
        968
      ],
      "op": "MSTORE8",
      "path": "19"
    },
    "2672": {
      "fn": "Strings.toString",
      "offset": [
        1012,
        1014
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 43,
      "value": "0xA"
    },
    "2674": {
      "fn": "Strings.toString",
      "offset": [
        1003,
        1014
      ],
      "op": "DUP6",
      "path": "19"
    },
    "2675": {
      "fn": "Strings.toString",
      "offset": [
        1003,
        1014
      ],
      "op": "DIV",
      "path": "19"
    },
    "2676": {
      "fn": "Strings.toString",
      "offset": [
        1003,
        1014
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "2677": {
      "op": "POP"
    },
    "2678": {
      "fn": "Strings.toString",
      "offset": [
        1032,
        1053
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2679": {
      "fn": "Strings.toString",
      "offset": [
        788,
        1068
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA50"
    },
    "2682": {
      "fn": "Strings.toString",
      "offset": [
        1032,
        1053
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2683": {
      "op": "POP"
    },
    "2684": {
      "fn": "Strings.toString",
      "offset": [
        1088,
        1094
      ],
      "op": "SWAP4",
      "path": "19",
      "statement": 44
    },
    "2685": {
      "fn": "Strings.toString",
      "offset": [
        415,
        1111
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "op": "POP"
    },
    "2688": {
      "op": "POP"
    },
    "2689": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        415,
        1111
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2690": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2691": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15882,
        15883
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2693": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15870,
        15879
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2694": {
      "branch": 77,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15870,
        15883
      ],
      "op": "GT",
      "path": "11"
    },
    "2695": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15866,
        16088
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2696": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15866,
        16088
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A6"
    },
    "2699": {
      "branch": 77,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15866,
        16088
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "op": "SUB"
    },
    "2708": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15903,
        15921
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2709": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15903,
        15921
      ],
      "op": "AND",
      "path": "11"
    },
    "2710": {
      "branch": 78,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15903,
        15921
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2711": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15899,
        15984
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAC8"
    },
    "2714": {
      "branch": 78,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15899,
        15984
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2721": {
      "op": "SHL"
    },
    "2722": {
      "op": "SUB"
    },
    "2723": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 45
    },
    "2724": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "AND",
      "path": "11"
    },
    "2725": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2727": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2728": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2729": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2730": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15950
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2732": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2734": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2735": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2737": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2738": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2739": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2740": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2741": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2742": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2743": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2744": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAC2"
    },
    "2747": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2748": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2749": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2750": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x10FC"
    },
    "2753": {
      "fn": "ERC721._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        15941,
        15969
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2754": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2755": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2756": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2757": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2758": {
      "op": "POP"
    },
    "2759": {
      "op": "POP"
    },
    "2760": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15899,
        15984
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "op": "SUB"
    },
    "2769": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16001,
        16017
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2770": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16001,
        16017
      ],
      "op": "AND",
      "path": "11"
    },
    "2771": {
      "branch": 79,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16001,
        16017
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2772": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15997,
        16078
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5A6"
    },
    "2775": {
      "branch": 79,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15997,
        16078
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "SUB"
    },
    "2784": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 46
    },
    "2785": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "AND",
      "path": "11"
    },
    "2786": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2788": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2789": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2790": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2791": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16046
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3"
    },
    "2793": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2795": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2796": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2798": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2799": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "2800": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2801": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2802": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2803": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2804": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2805": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xAFF"
    },
    "2808": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2809": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2810": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2811": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x110F"
    },
    "2814": {
      "fn": "ERC721._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        16037,
        16063
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2815": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2816": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2817": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2818": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2819": {
      "op": "POP"
    },
    "2820": {
      "op": "POP"
    },
    "2821": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "11"
    },
    "2822": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "11"
    },
    "2823": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "11"
    },
    "2824": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "11"
    },
    "2825": {
      "fn": "ERC721._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        15698,
        16094
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14300,
        14304
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "op": "SUB"
    },
    "2837": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14320,
        14333
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14320,
        14333
      ],
      "op": "AND",
      "path": "11"
    },
    "2839": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "16",
      "statement": 47
    },
    "2840": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14316,
        14976
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xC00"
    },
    "2844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14316,
        14976
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2848": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2855": {
      "op": "SHL"
    },
    "2856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2864": {
      "op": "SHL"
    },
    "2865": {
      "op": "SUB"
    },
    "2866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "DUP6",
      "path": "11"
    },
    "2867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "AND",
      "path": "11"
    },
    "2868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x150B7A02"
    },
    "2874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB4E"
    },
    "2878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2879": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "17"
    },
    "2880": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "2881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14406,
        14410
      ],
      "op": "DUP10",
      "path": "11"
    },
    "2882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14406,
        14410
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14412,
        14419
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14412,
        14419
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14421,
        14425
      ],
      "op": "DUP9",
      "path": "11"
    },
    "2886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14421,
        14425
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "2889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "11"
    },
    "2890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1122"
    },
    "2893": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP4",
      "path": "11"
    },
    "2902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SUB",
      "path": "11"
    },
    "2903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "GAS",
      "path": "11"
    },
    "2908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "CALL",
      "path": "11"
    },
    "2909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "POP",
      "path": "11"
    },
    "2911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "POP",
      "path": "11"
    },
    "2912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "POP",
      "path": "11"
    },
    "2913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB89"
    },
    "2918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "11"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2932": {
      "op": "NOT"
    },
    "2933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "AND",
      "path": "11"
    },
    "2934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "11"
    },
    "2936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xB86"
    },
    "2942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "11"
    },
    "2945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x115F"
    },
    "2949": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "2953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBE6"
    },
    "2957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "2962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBB7"
    },
    "2965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "2966": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "POP",
      "path": "11"
    },
    "2971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "2973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "NOT",
      "path": "11"
    },
    "2974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x3F"
    },
    "2976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ADD",
      "path": "11"
    },
    "2978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "AND",
      "path": "11"
    },
    "2979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ADD",
      "path": "11"
    },
    "2981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "2983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP3",
      "path": "11"
    },
    "2986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "2987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "2988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP5",
      "path": "11"
    },
    "2993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ADD",
      "path": "11"
    },
    "2994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "2995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBBC"
    },
    "2998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "POP",
      "path": "11"
    },
    "3004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "POP",
      "path": "11"
    },
    "3006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14593,
        14599
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14593,
        14606
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14610,
        14611
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "3010": {
      "branch": 80,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14593,
        14611
      ],
      "op": "SUB",
      "path": "11"
    },
    "3011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14589,
        14910
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xBDE"
    },
    "3014": {
      "branch": 80,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14589,
        14910
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 48,
      "value": "0x40"
    },
    "3017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3018": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "3029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "ADD",
      "path": "11"
    },
    "3030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x37E"
    },
    "3033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1094"
    },
    "3037": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14635,
        14695
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14589,
        14910
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14862,
        14868
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14856,
        14869
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14847,
        14853
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14843,
        14845
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14839,
        14854
      ],
      "op": "ADD",
      "path": "11"
    },
    "3045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14832,
        14870
      ],
      "op": "REVERT",
      "path": "11"
    },
    "3046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3053": {
      "op": "SHL"
    },
    "3054": {
      "op": "SUB"
    },
    "3055": {
      "op": "NOT"
    },
    "3056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14476,
        14527
      ],
      "op": "AND",
      "path": "11",
      "statement": 49
    },
    "3057": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14476,
        14527
      ],
      "op": "EQ",
      "path": "11"
    },
    "3066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14476,
        14527
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3067": {
      "op": "POP"
    },
    "3068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14469,
        14527
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x775"
    },
    "3071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14469,
        14527
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14316,
        14976
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3073": {
      "op": "POP"
    },
    "3074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14961,
        14965
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 50,
      "value": "0x1"
    },
    "3076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "11"
    },
    "3079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "11"
    },
    "3080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "11"
    },
    "3081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "11"
    },
    "3082": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        14151,
        14982
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3083": {
      "fn": "Math.log10",
      "offset": [
        9889,
        10779
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3084": {
      "fn": "Math.log10",
      "offset": [
        9942,
        9949
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3086": {
      "fn": "Math.log10",
      "offset": [
        9942,
        9949
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3087": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3109": {
      "op": "SHL"
    },
    "3110": {
      "fn": "Math.log10",
      "offset": [
        10017,
        10032
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3111": {
      "branch": 81,
      "fn": "Math.log10",
      "offset": [
        10017,
        10032
      ],
      "op": "LT",
      "path": "22"
    },
    "3112": {
      "fn": "Math.log10",
      "offset": [
        10013,
        10112
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC4A"
    },
    "3115": {
      "branch": 81,
      "fn": "Math.log10",
      "offset": [
        10013,
        10112
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3116": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "fn": "Math.log10",
      "offset": [
        10052,
        10067
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 51
    },
    "3140": {
      "fn": "Math.log10",
      "offset": [
        10052,
        10067
      ],
      "op": "DIV",
      "path": "22"
    },
    "3141": {
      "fn": "Math.log10",
      "offset": [
        10052,
        10067
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3142": {
      "op": "POP"
    },
    "3143": {
      "fn": "Math.log10",
      "offset": [
        10095,
        10097
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 52,
      "value": "0x40"
    },
    "3145": {
      "fn": "Math.log10",
      "offset": [
        10085,
        10097
      ],
      "op": "ADD",
      "path": "22"
    },
    "3146": {
      "fn": "Math.log10",
      "offset": [
        10013,
        10112
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3147": {
      "fn": "Math.log10",
      "offset": [
        10138,
        10144
      ],
      "op": "PUSH14",
      "path": "22",
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "3162": {
      "fn": "Math.log10",
      "offset": [
        10129,
        10134
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3163": {
      "branch": 82,
      "fn": "Math.log10",
      "offset": [
        10129,
        10144
      ],
      "op": "LT",
      "path": "22"
    },
    "3164": {
      "fn": "Math.log10",
      "offset": [
        10125,
        10224
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC76"
    },
    "3167": {
      "branch": 82,
      "fn": "Math.log10",
      "offset": [
        10125,
        10224
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3168": {
      "fn": "Math.log10",
      "offset": [
        10173,
        10179
      ],
      "op": "PUSH14",
      "path": "22",
      "statement": 53,
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "3183": {
      "fn": "Math.log10",
      "offset": [
        10164,
        10179
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3184": {
      "fn": "Math.log10",
      "offset": [
        10164,
        10179
      ],
      "op": "DIV",
      "path": "22"
    },
    "3185": {
      "fn": "Math.log10",
      "offset": [
        10164,
        10179
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3186": {
      "op": "POP"
    },
    "3187": {
      "fn": "Math.log10",
      "offset": [
        10207,
        10209
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 54,
      "value": "0x20"
    },
    "3189": {
      "fn": "Math.log10",
      "offset": [
        10197,
        10209
      ],
      "op": "ADD",
      "path": "22"
    },
    "3190": {
      "fn": "Math.log10",
      "offset": [
        10125,
        10224
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3191": {
      "fn": "Math.log10",
      "offset": [
        10250,
        10256
      ],
      "op": "PUSH7",
      "path": "22",
      "value": "0x2386F26FC10000"
    },
    "3199": {
      "fn": "Math.log10",
      "offset": [
        10241,
        10246
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3200": {
      "branch": 83,
      "fn": "Math.log10",
      "offset": [
        10241,
        10256
      ],
      "op": "LT",
      "path": "22"
    },
    "3201": {
      "fn": "Math.log10",
      "offset": [
        10237,
        10336
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC94"
    },
    "3204": {
      "branch": 83,
      "fn": "Math.log10",
      "offset": [
        10237,
        10336
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3205": {
      "fn": "Math.log10",
      "offset": [
        10285,
        10291
      ],
      "op": "PUSH7",
      "path": "22",
      "statement": 55,
      "value": "0x2386F26FC10000"
    },
    "3213": {
      "fn": "Math.log10",
      "offset": [
        10276,
        10291
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3214": {
      "fn": "Math.log10",
      "offset": [
        10276,
        10291
      ],
      "op": "DIV",
      "path": "22"
    },
    "3215": {
      "fn": "Math.log10",
      "offset": [
        10276,
        10291
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3216": {
      "op": "POP"
    },
    "3217": {
      "fn": "Math.log10",
      "offset": [
        10319,
        10321
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 56,
      "value": "0x10"
    },
    "3219": {
      "fn": "Math.log10",
      "offset": [
        10309,
        10321
      ],
      "op": "ADD",
      "path": "22"
    },
    "3220": {
      "fn": "Math.log10",
      "offset": [
        10237,
        10336
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3221": {
      "fn": "Math.log10",
      "offset": [
        10362,
        10367
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x5F5E100"
    },
    "3226": {
      "fn": "Math.log10",
      "offset": [
        10353,
        10358
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3227": {
      "branch": 84,
      "fn": "Math.log10",
      "offset": [
        10353,
        10367
      ],
      "op": "LT",
      "path": "22"
    },
    "3228": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10445
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCAC"
    },
    "3231": {
      "branch": 84,
      "fn": "Math.log10",
      "offset": [
        10349,
        10445
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3232": {
      "fn": "Math.log10",
      "offset": [
        10396,
        10401
      ],
      "op": "PUSH4",
      "path": "22",
      "statement": 57,
      "value": "0x5F5E100"
    },
    "3237": {
      "fn": "Math.log10",
      "offset": [
        10387,
        10401
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3238": {
      "fn": "Math.log10",
      "offset": [
        10387,
        10401
      ],
      "op": "DIV",
      "path": "22"
    },
    "3239": {
      "fn": "Math.log10",
      "offset": [
        10387,
        10401
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3240": {
      "op": "POP"
    },
    "3241": {
      "fn": "Math.log10",
      "offset": [
        10429,
        10430
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 58,
      "value": "0x8"
    },
    "3243": {
      "fn": "Math.log10",
      "offset": [
        10419,
        10430
      ],
      "op": "ADD",
      "path": "22"
    },
    "3244": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10445
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3245": {
      "fn": "Math.log10",
      "offset": [
        10471,
        10476
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2710"
    },
    "3248": {
      "fn": "Math.log10",
      "offset": [
        10462,
        10467
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3249": {
      "branch": 85,
      "fn": "Math.log10",
      "offset": [
        10462,
        10476
      ],
      "op": "LT",
      "path": "22"
    },
    "3250": {
      "fn": "Math.log10",
      "offset": [
        10458,
        10554
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCC0"
    },
    "3253": {
      "branch": 85,
      "fn": "Math.log10",
      "offset": [
        10458,
        10554
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3254": {
      "fn": "Math.log10",
      "offset": [
        10505,
        10510
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 59,
      "value": "0x2710"
    },
    "3257": {
      "fn": "Math.log10",
      "offset": [
        10496,
        10510
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3258": {
      "fn": "Math.log10",
      "offset": [
        10496,
        10510
      ],
      "op": "DIV",
      "path": "22"
    },
    "3259": {
      "fn": "Math.log10",
      "offset": [
        10496,
        10510
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3260": {
      "op": "POP"
    },
    "3261": {
      "fn": "Math.log10",
      "offset": [
        10538,
        10539
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 60,
      "value": "0x4"
    },
    "3263": {
      "fn": "Math.log10",
      "offset": [
        10528,
        10539
      ],
      "op": "ADD",
      "path": "22"
    },
    "3264": {
      "fn": "Math.log10",
      "offset": [
        10458,
        10554
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3265": {
      "fn": "Math.log10",
      "offset": [
        10580,
        10585
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x64"
    },
    "3267": {
      "fn": "Math.log10",
      "offset": [
        10571,
        10576
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3268": {
      "branch": 86,
      "fn": "Math.log10",
      "offset": [
        10571,
        10585
      ],
      "op": "LT",
      "path": "22"
    },
    "3269": {
      "fn": "Math.log10",
      "offset": [
        10567,
        10663
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCD2"
    },
    "3272": {
      "branch": 86,
      "fn": "Math.log10",
      "offset": [
        10567,
        10663
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3273": {
      "fn": "Math.log10",
      "offset": [
        10614,
        10619
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 61,
      "value": "0x64"
    },
    "3275": {
      "fn": "Math.log10",
      "offset": [
        10605,
        10619
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3276": {
      "fn": "Math.log10",
      "offset": [
        10605,
        10619
      ],
      "op": "DIV",
      "path": "22"
    },
    "3277": {
      "fn": "Math.log10",
      "offset": [
        10605,
        10619
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3278": {
      "op": "POP"
    },
    "3279": {
      "fn": "Math.log10",
      "offset": [
        10647,
        10648
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 62,
      "value": "0x2"
    },
    "3281": {
      "fn": "Math.log10",
      "offset": [
        10637,
        10648
      ],
      "op": "ADD",
      "path": "22"
    },
    "3282": {
      "fn": "Math.log10",
      "offset": [
        10567,
        10663
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3283": {
      "fn": "Math.log10",
      "offset": [
        10689,
        10694
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xA"
    },
    "3285": {
      "fn": "Math.log10",
      "offset": [
        10680,
        10685
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3286": {
      "branch": 87,
      "fn": "Math.log10",
      "offset": [
        10680,
        10694
      ],
      "op": "LT",
      "path": "22"
    },
    "3287": {
      "fn": "Math.log10",
      "offset": [
        10676,
        10740
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24B"
    },
    "3290": {
      "branch": 87,
      "fn": "Math.log10",
      "offset": [
        10676,
        10740
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3291": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10725
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 63,
      "value": "0x1"
    },
    "3293": {
      "fn": "Math.log10",
      "offset": [
        10714,
        10725
      ],
      "op": "ADD",
      "path": "22"
    },
    "3294": {
      "fn": "Math.log10",
      "offset": [
        10766,
        10772
      ],
      "op": "SWAP3",
      "path": "22",
      "statement": 64
    },
    "3295": {
      "fn": "Math.log10",
      "offset": [
        9889,
        10779
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "op": "POP"
    },
    "3298": {
      "fn": "Math.log10",
      "jump": "o",
      "offset": [
        9889,
        10779
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3299": {
      "op": "JUMPDEST"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "op": "NOT"
    },
    "3309": {
      "op": "DUP2"
    },
    "3310": {
      "op": "AND"
    },
    "3311": {
      "op": "DUP2"
    },
    "3312": {
      "op": "EQ"
    },
    "3313": {
      "op": "PUSH2",
      "value": "0x6AD"
    },
    "3316": {
      "op": "JUMPI"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3319": {
      "op": "DUP1"
    },
    "3320": {
      "op": "REVERT"
    },
    "3321": {
      "op": "JUMPDEST"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3326": {
      "op": "DUP3"
    },
    "3327": {
      "op": "DUP5"
    },
    "3328": {
      "op": "SUB"
    },
    "3329": {
      "op": "SLT"
    },
    "3330": {
      "op": "ISZERO"
    },
    "3331": {
      "op": "PUSH2",
      "value": "0xD0B"
    },
    "3334": {
      "op": "JUMPI"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3337": {
      "op": "DUP1"
    },
    "3338": {
      "op": "REVERT"
    },
    "3339": {
      "op": "JUMPDEST"
    },
    "3340": {
      "op": "DUP2"
    },
    "3341": {
      "op": "CALLDATALOAD"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "3345": {
      "op": "DUP2"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xCE3"
    },
    "3349": {
      "jump": "i",
      "op": "JUMP"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3353": {
      "op": "JUMPDEST"
    },
    "3354": {
      "op": "DUP4"
    },
    "3355": {
      "op": "DUP2"
    },
    "3356": {
      "op": "LT"
    },
    "3357": {
      "op": "ISZERO"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3361": {
      "op": "JUMPI"
    },
    "3362": {
      "op": "DUP2"
    },
    "3363": {
      "op": "DUP2"
    },
    "3364": {
      "op": "ADD"
    },
    "3365": {
      "op": "MLOAD"
    },
    "3366": {
      "op": "DUP4"
    },
    "3367": {
      "op": "DUP3"
    },
    "3368": {
      "op": "ADD"
    },
    "3369": {
      "op": "MSTORE"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3372": {
      "op": "ADD"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3376": {
      "op": "JUMP"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "POP"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3382": {
      "op": "SWAP2"
    },
    "3383": {
      "op": "ADD"
    },
    "3384": {
      "op": "MSTORE"
    },
    "3385": {
      "jump": "o",
      "op": "JUMP"
    },
    "3386": {
      "op": "JUMPDEST"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3389": {
      "op": "DUP2"
    },
    "3390": {
      "op": "MLOAD"
    },
    "3391": {
      "op": "DUP1"
    },
    "3392": {
      "op": "DUP5"
    },
    "3393": {
      "op": "MSTORE"
    },
    "3394": {
      "op": "PUSH2",
      "value": "0xD52"
    },
    "3397": {
      "op": "DUP2"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3400": {
      "op": "DUP7"
    },
    "3401": {
      "op": "ADD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3404": {
      "op": "DUP7"
    },
    "3405": {
      "op": "ADD"
    },
    "3406": {
      "op": "PUSH2",
      "value": "0xD16"
    },
    "3409": {
      "jump": "i",
      "op": "JUMP"
    },
    "3410": {
      "op": "JUMPDEST"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3413": {
      "op": "ADD"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3416": {
      "op": "NOT"
    },
    "3417": {
      "op": "AND"
    },
    "3418": {
      "op": "SWAP3"
    },
    "3419": {
      "op": "SWAP1"
    },
    "3420": {
      "op": "SWAP3"
    },
    "3421": {
      "op": "ADD"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "SWAP3"
    },
    "3426": {
      "op": "SWAP2"
    },
    "3427": {
      "op": "POP"
    },
    "3428": {
      "op": "POP"
    },
    "3429": {
      "jump": "o",
      "op": "JUMP"
    },
    "3430": {
      "op": "JUMPDEST"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "MSTORE"
    },
    "3435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3437": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3442": {
      "op": "DUP4"
    },
    "3443": {
      "op": "ADD"
    },
    "3444": {
      "op": "DUP5"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0xD3A"
    },
    "3448": {
      "jump": "i",
      "op": "JUMP"
    },
    "3449": {
      "op": "JUMPDEST"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "op": "DUP3"
    },
    "3455": {
      "op": "DUP5"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "op": "SLT"
    },
    "3458": {
      "op": "ISZERO"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0xD8B"
    },
    "3462": {
      "op": "JUMPI"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "DUP1"
    },
    "3466": {
      "op": "REVERT"
    },
    "3467": {
      "op": "JUMPDEST"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "CALLDATALOAD"
    },
    "3470": {
      "op": "SWAP2"
    },
    "3471": {
      "op": "SWAP1"
    },
    "3472": {
      "op": "POP"
    },
    "3473": {
      "jump": "o",
      "op": "JUMP"
    },
    "3474": {
      "op": "JUMPDEST"
    },
    "3475": {
      "op": "DUP1"
    },
    "3476": {
      "op": "CALLDATALOAD"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3483": {
      "op": "SHL"
    },
    "3484": {
      "op": "SUB"
    },
    "3485": {
      "op": "DUP2"
    },
    "3486": {
      "op": "AND"
    },
    "3487": {
      "op": "DUP2"
    },
    "3488": {
      "op": "EQ"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3492": {
      "op": "JUMPI"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3495": {
      "op": "DUP1"
    },
    "3496": {
      "op": "REVERT"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "SWAP2"
    },
    "3499": {
      "op": "SWAP1"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "jump": "o",
      "op": "JUMP"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3505": {
      "op": "DUP1"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3508": {
      "op": "DUP4"
    },
    "3509": {
      "op": "DUP6"
    },
    "3510": {
      "op": "SUB"
    },
    "3511": {
      "op": "SLT"
    },
    "3512": {
      "op": "ISZERO"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "3516": {
      "op": "JUMPI"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3519": {
      "op": "DUP1"
    },
    "3520": {
      "op": "REVERT"
    },
    "3521": {
      "op": "JUMPDEST"
    },
    "3522": {
      "op": "PUSH2",
      "value": "0xDCA"
    },
    "3525": {
      "op": "DUP4"
    },
    "3526": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3529": {
      "jump": "i",
      "op": "JUMP"
    },
    "3530": {
      "op": "JUMPDEST"
    },
    "3531": {
      "op": "SWAP5"
    },
    "3532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3534": {
      "op": "SWAP4"
    },
    "3535": {
      "op": "SWAP1"
    },
    "3536": {
      "op": "SWAP4"
    },
    "3537": {
      "op": "ADD"
    },
    "3538": {
      "op": "CALLDATALOAD"
    },
    "3539": {
      "op": "SWAP4"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "op": "POP"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "jump": "o",
      "op": "JUMP"
    },
    "3544": {
      "op": "JUMPDEST"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3547": {
      "op": "DUP1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3552": {
      "op": "DUP5"
    },
    "3553": {
      "op": "DUP7"
    },
    "3554": {
      "op": "SUB"
    },
    "3555": {
      "op": "SLT"
    },
    "3556": {
      "op": "ISZERO"
    },
    "3557": {
      "op": "PUSH2",
      "value": "0xDED"
    },
    "3560": {
      "op": "JUMPI"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "DUP1"
    },
    "3564": {
      "op": "REVERT"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "PUSH2",
      "value": "0xDF6"
    },
    "3569": {
      "op": "DUP5"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3573": {
      "jump": "i",
      "op": "JUMP"
    },
    "3574": {
      "op": "JUMPDEST"
    },
    "3575": {
      "op": "SWAP3"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "PUSH2",
      "value": "0xE04"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3582": {
      "op": "DUP6"
    },
    "3583": {
      "op": "ADD"
    },
    "3584": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3587": {
      "jump": "i",
      "op": "JUMP"
    },
    "3588": {
      "op": "JUMPDEST"
    },
    "3589": {
      "op": "SWAP3"
    },
    "3590": {
      "op": "SWAP6"
    },
    "3591": {
      "op": "SWAP3"
    },
    "3592": {
      "op": "SWAP5"
    },
    "3593": {
      "op": "POP"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3598": {
      "op": "SWAP2"
    },
    "3599": {
      "op": "SWAP1"
    },
    "3600": {
      "op": "SWAP2"
    },
    "3601": {
      "op": "ADD"
    },
    "3602": {
      "op": "CALLDATALOAD"
    },
    "3603": {
      "op": "SWAP1"
    },
    "3604": {
      "jump": "o",
      "op": "JUMP"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3610": {
      "op": "DUP3"
    },
    "3611": {
      "op": "DUP5"
    },
    "3612": {
      "op": "SUB"
    },
    "3613": {
      "op": "SLT"
    },
    "3614": {
      "op": "ISZERO"
    },
    "3615": {
      "op": "PUSH2",
      "value": "0xE27"
    },
    "3618": {
      "op": "JUMPI"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3621": {
      "op": "DUP1"
    },
    "3622": {
      "op": "REVERT"
    },
    "3623": {
      "op": "JUMPDEST"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "3627": {
      "op": "DUP3"
    },
    "3628": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3631": {
      "jump": "i",
      "op": "JUMP"
    },
    "3632": {
      "op": "JUMPDEST"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3635": {
      "op": "DUP1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3638": {
      "op": "DUP4"
    },
    "3639": {
      "op": "DUP6"
    },
    "3640": {
      "op": "SUB"
    },
    "3641": {
      "op": "SLT"
    },
    "3642": {
      "op": "ISZERO"
    },
    "3643": {
      "op": "PUSH2",
      "value": "0xE43"
    },
    "3646": {
      "op": "JUMPI"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3649": {
      "op": "DUP1"
    },
    "3650": {
      "op": "REVERT"
    },
    "3651": {
      "op": "JUMPDEST"
    },
    "3652": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3655": {
      "op": "DUP4"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3659": {
      "jump": "i",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "SWAP2"
    },
    "3662": {
      "op": "POP"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3665": {
      "op": "DUP4"
    },
    "3666": {
      "op": "ADD"
    },
    "3667": {
      "op": "CALLDATALOAD"
    },
    "3668": {
      "op": "DUP1"
    },
    "3669": {
      "op": "ISZERO"
    },
    "3670": {
      "op": "ISZERO"
    },
    "3671": {
      "op": "DUP2"
    },
    "3672": {
      "op": "EQ"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3676": {
      "op": "JUMPI"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3679": {
      "op": "DUP1"
    },
    "3680": {
      "op": "REVERT"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "DUP1"
    },
    "3683": {
      "op": "SWAP2"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "SWAP3"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "SWAP3"
    },
    "3689": {
      "op": "SWAP1"
    },
    "3690": {
      "op": "POP"
    },
    "3691": {
      "jump": "o",
      "op": "JUMP"
    },
    "3692": {
      "op": "JUMPDEST"
    },
    "3693": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3700": {
      "op": "SHL"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3708": {
      "op": "MSTORE"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "REVERT"
    },
    "3714": {
      "op": "JUMPDEST"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3717": {
      "op": "DUP1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3720": {
      "op": "DUP1"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3723": {
      "op": "DUP6"
    },
    "3724": {
      "op": "DUP8"
    },
    "3725": {
      "op": "SUB"
    },
    "3726": {
      "op": "SLT"
    },
    "3727": {
      "op": "ISZERO"
    },
    "3728": {
      "op": "PUSH2",
      "value": "0xE98"
    },
    "3731": {
      "op": "JUMPI"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3734": {
      "op": "DUP1"
    },
    "3735": {
      "op": "REVERT"
    },
    "3736": {
      "op": "JUMPDEST"
    },
    "3737": {
      "op": "PUSH2",
      "value": "0xEA1"
    },
    "3740": {
      "op": "DUP6"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3744": {
      "jump": "i",
      "op": "JUMP"
    },
    "3745": {
      "op": "JUMPDEST"
    },
    "3746": {
      "op": "SWAP4"
    },
    "3747": {
      "op": "POP"
    },
    "3748": {
      "op": "PUSH2",
      "value": "0xEAF"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3753": {
      "op": "DUP7"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3758": {
      "jump": "i",
      "op": "JUMP"
    },
    "3759": {
      "op": "JUMPDEST"
    },
    "3760": {
      "op": "SWAP3"
    },
    "3761": {
      "op": "POP"
    },
    "3762": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3764": {
      "op": "DUP6"
    },
    "3765": {
      "op": "ADD"
    },
    "3766": {
      "op": "CALLDATALOAD"
    },
    "3767": {
      "op": "SWAP2"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3771": {
      "op": "DUP6"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "CALLDATALOAD"
    },
    "3774": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3783": {
      "op": "DUP2"
    },
    "3784": {
      "op": "GT"
    },
    "3785": {
      "op": "ISZERO"
    },
    "3786": {
      "op": "PUSH2",
      "value": "0xED2"
    },
    "3789": {
      "op": "JUMPI"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "REVERT"
    },
    "3794": {
      "op": "JUMPDEST"
    },
    "3795": {
      "op": "DUP6"
    },
    "3796": {
      "op": "ADD"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3799": {
      "op": "DUP2"
    },
    "3800": {
      "op": "ADD"
    },
    "3801": {
      "op": "DUP8"
    },
    "3802": {
      "op": "SGT"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE3"
    },
    "3806": {
      "op": "JUMPI"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "DUP1"
    },
    "3810": {
      "op": "REVERT"
    },
    "3811": {
      "op": "JUMPDEST"
    },
    "3812": {
      "op": "DUP1"
    },
    "3813": {
      "op": "CALLDATALOAD"
    },
    "3814": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3823": {
      "op": "DUP2"
    },
    "3824": {
      "op": "GT"
    },
    "3825": {
      "op": "ISZERO"
    },
    "3826": {
      "op": "PUSH2",
      "value": "0xEFD"
    },
    "3829": {
      "op": "JUMPI"
    },
    "3830": {
      "op": "PUSH2",
      "value": "0xEFD"
    },
    "3833": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3836": {
      "jump": "i",
      "op": "JUMP"
    },
    "3837": {
      "op": "JUMPDEST"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3840": {
      "op": "MLOAD"
    },
    "3841": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3843": {
      "op": "DUP3"
    },
    "3844": {
      "op": "ADD"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3847": {
      "op": "NOT"
    },
    "3848": {
      "op": "SWAP1"
    },
    "3849": {
      "op": "DUP2"
    },
    "3850": {
      "op": "AND"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3853": {
      "op": "ADD"
    },
    "3854": {
      "op": "AND"
    },
    "3855": {
      "op": "DUP2"
    },
    "3856": {
      "op": "ADD"
    },
    "3857": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3866": {
      "op": "DUP2"
    },
    "3867": {
      "op": "GT"
    },
    "3868": {
      "op": "DUP3"
    },
    "3869": {
      "op": "DUP3"
    },
    "3870": {
      "op": "LT"
    },
    "3871": {
      "op": "OR"
    },
    "3872": {
      "op": "ISZERO"
    },
    "3873": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3876": {
      "op": "JUMPI"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3880": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3883": {
      "jump": "i",
      "op": "JUMP"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3887": {
      "op": "MSTORE"
    },
    "3888": {
      "op": "DUP2"
    },
    "3889": {
      "op": "DUP2"
    },
    "3890": {
      "op": "MSTORE"
    },
    "3891": {
      "op": "DUP3"
    },
    "3892": {
      "op": "DUP3"
    },
    "3893": {
      "op": "ADD"
    },
    "3894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3896": {
      "op": "ADD"
    },
    "3897": {
      "op": "DUP10"
    },
    "3898": {
      "op": "LT"
    },
    "3899": {
      "op": "ISZERO"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3903": {
      "op": "JUMPI"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3906": {
      "op": "DUP1"
    },
    "3907": {
      "op": "REVERT"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "DUP2"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3912": {
      "op": "DUP5"
    },
    "3913": {
      "op": "ADD"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3916": {
      "op": "DUP4"
    },
    "3917": {
      "op": "ADD"
    },
    "3918": {
      "op": "CALLDATACOPY"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3923": {
      "op": "DUP4"
    },
    "3924": {
      "op": "DUP4"
    },
    "3925": {
      "op": "ADD"
    },
    "3926": {
      "op": "ADD"
    },
    "3927": {
      "op": "MSTORE"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "op": "SWAP4"
    },
    "3930": {
      "op": "POP"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "op": "POP"
    },
    "3933": {
      "op": "POP"
    },
    "3934": {
      "op": "SWAP3"
    },
    "3935": {
      "op": "SWAP6"
    },
    "3936": {
      "op": "SWAP2"
    },
    "3937": {
      "op": "SWAP5"
    },
    "3938": {
      "op": "POP"
    },
    "3939": {
      "op": "SWAP3"
    },
    "3940": {
      "op": "POP"
    },
    "3941": {
      "jump": "o",
      "op": "JUMP"
    },
    "3942": {
      "op": "JUMPDEST"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3945": {
      "op": "DUP1"
    },
    "3946": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3948": {
      "op": "DUP4"
    },
    "3949": {
      "op": "DUP6"
    },
    "3950": {
      "op": "SUB"
    },
    "3951": {
      "op": "SLT"
    },
    "3952": {
      "op": "ISZERO"
    },
    "3953": {
      "op": "PUSH2",
      "value": "0xF79"
    },
    "3956": {
      "op": "JUMPI"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3959": {
      "op": "DUP1"
    },
    "3960": {
      "op": "REVERT"
    },
    "3961": {
      "op": "JUMPDEST"
    },
    "3962": {
      "op": "PUSH2",
      "value": "0xF82"
    },
    "3965": {
      "op": "DUP4"
    },
    "3966": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3969": {
      "jump": "i",
      "op": "JUMP"
    },
    "3970": {
      "op": "JUMPDEST"
    },
    "3971": {
      "op": "SWAP2"
    },
    "3972": {
      "op": "POP"
    },
    "3973": {
      "op": "PUSH2",
      "value": "0xF90"
    },
    "3976": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3978": {
      "op": "DUP5"
    },
    "3979": {
      "op": "ADD"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xD92"
    },
    "3983": {
      "jump": "i",
      "op": "JUMP"
    },
    "3984": {
      "op": "JUMPDEST"
    },
    "3985": {
      "op": "SWAP1"
    },
    "3986": {
      "op": "POP"
    },
    "3987": {
      "op": "SWAP3"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "op": "SWAP3"
    },
    "3990": {
      "op": "SWAP1"
    },
    "3991": {
      "op": "POP"
    },
    "3992": {
      "jump": "o",
      "op": "JUMP"
    },
    "3993": {
      "op": "JUMPDEST"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3996": {
      "op": "DUP2"
    },
    "3997": {
      "op": "DUP2"
    },
    "3998": {
      "op": "SHR"
    },
    "3999": {
      "op": "SWAP1"
    },
    "4000": {
      "op": "DUP3"
    },
    "4001": {
      "op": "AND"
    },
    "4002": {
      "op": "DUP1"
    },
    "4003": {
      "op": "PUSH2",
      "value": "0xFAD"
    },
    "4006": {
      "op": "JUMPI"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "AND"
    },
    "4011": {
      "op": "SWAP2"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "op": "JUMPDEST"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP3"
    },
    "4017": {
      "op": "LT"
    },
    "4018": {
      "op": "DUP2"
    },
    "4019": {
      "op": "SUB"
    },
    "4020": {
      "op": "PUSH2",
      "value": "0xFCD"
    },
    "4023": {
      "op": "JUMPI"
    },
    "4024": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4031": {
      "op": "SHL"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4034": {
      "op": "MSTORE"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4042": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4044": {
      "op": "REVERT"
    },
    "4045": {
      "op": "JUMPDEST"
    },
    "4046": {
      "op": "POP"
    },
    "4047": {
      "op": "SWAP2"
    },
    "4048": {
      "op": "SWAP1"
    },
    "4049": {
      "op": "POP"
    },
    "4050": {
      "jump": "o",
      "op": "JUMP"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4054": {
      "op": "DUP1"
    },
    "4055": {
      "op": "DUP3"
    },
    "4056": {
      "op": "MSTORE"
    },
    "4057": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "4059": {
      "op": "SWAP1"
    },
    "4060": {
      "op": "DUP3"
    },
    "4061": {
      "op": "ADD"
    },
    "4062": {
      "op": "MSTORE"
    },
    "4063": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4098": {
      "op": "DUP3"
    },
    "4099": {
      "op": "ADD"
    },
    "4100": {
      "op": "MSTORE"
    },
    "4101": {
      "op": "PUSH13",
      "value": "0x1C881BDC88185C1C1C9BDD9959"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "4117": {
      "op": "SHL"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4120": {
      "op": "DUP3"
    },
    "4121": {
      "op": "ADD"
    },
    "4122": {
      "op": "MSTORE"
    },
    "4123": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "op": "SWAP1"
    },
    "4127": {
      "jump": "o",
      "op": "JUMP"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4131": {
      "op": "DUP4"
    },
    "4132": {
      "op": "MLOAD"
    },
    "4133": {
      "op": "PUSH2",
      "value": "0x1032"
    },
    "4136": {
      "op": "DUP2"
    },
    "4137": {
      "op": "DUP5"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4140": {
      "op": "DUP9"
    },
    "4141": {
      "op": "ADD"
    },
    "4142": {
      "op": "PUSH2",
      "value": "0xD16"
    },
    "4145": {
      "jump": "i",
      "op": "JUMP"
    },
    "4146": {
      "op": "JUMPDEST"
    },
    "4147": {
      "op": "DUP4"
    },
    "4148": {
      "op": "MLOAD"
    },
    "4149": {
      "op": "SWAP1"
    },
    "4150": {
      "op": "DUP4"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "SWAP1"
    },
    "4153": {
      "op": "PUSH2",
      "value": "0x1046"
    },
    "4156": {
      "op": "DUP2"
    },
    "4157": {
      "op": "DUP4"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4160": {
      "op": "DUP9"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "PUSH2",
      "value": "0xD16"
    },
    "4165": {
      "jump": "i",
      "op": "JUMP"
    },
    "4166": {
      "op": "JUMPDEST"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "SWAP5"
    },
    "4169": {
      "op": "SWAP4"
    },
    "4170": {
      "op": "POP"
    },
    "4171": {
      "op": "POP"
    },
    "4172": {
      "op": "POP"
    },
    "4173": {
      "op": "POP"
    },
    "4174": {
      "jump": "o",
      "op": "JUMP"
    },
    "4175": {
      "op": "JUMPDEST"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4178": {
      "op": "DUP1"
    },
    "4179": {
      "op": "DUP3"
    },
    "4180": {
      "op": "MSTORE"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4183": {
      "op": "SWAP1"
    },
    "4184": {
      "op": "DUP3"
    },
    "4185": {
      "op": "ADD"
    },
    "4186": {
      "op": "MSTORE"
    },
    "4187": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "ADD"
    },
    "4224": {
      "op": "MSTORE"
    },
    "4225": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4233": {
      "op": "SHL"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "ADD"
    },
    "4238": {
      "op": "MSTORE"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4241": {
      "op": "ADD"
    },
    "4242": {
      "op": "SWAP1"
    },
    "4243": {
      "jump": "o",
      "op": "JUMP"
    },
    "4244": {
      "op": "JUMPDEST"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4247": {
      "op": "DUP1"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4252": {
      "op": "SWAP1"
    },
    "4253": {
      "op": "DUP3"
    },
    "4254": {
      "op": "ADD"
    },
    "4255": {
      "op": "MSTORE"
    },
    "4256": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4291": {
      "op": "DUP3"
    },
    "4292": {
      "op": "ADD"
    },
    "4293": {
      "op": "MSTORE"
    },
    "4294": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4315": {
      "op": "SHL"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4318": {
      "op": "DUP3"
    },
    "4319": {
      "op": "ADD"
    },
    "4320": {
      "op": "MSTORE"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4323": {
      "op": "ADD"
    },
    "4324": {
      "op": "SWAP1"
    },
    "4325": {
      "jump": "o",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4334": {
      "op": "SHL"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4337": {
      "op": "MSTORE"
    },
    "4338": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4347": {
      "op": "REVERT"
    },
    "4348": {
      "op": "JUMPDEST"
    },
    "4349": {
      "op": "DUP2"
    },
    "4350": {
      "op": "DUP2"
    },
    "4351": {
      "op": "SUB"
    },
    "4352": {
      "op": "DUP2"
    },
    "4353": {
      "op": "DUP2"
    },
    "4354": {
      "op": "GT"
    },
    "4355": {
      "op": "ISZERO"
    },
    "4356": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4359": {
      "op": "JUMPI"
    },
    "4360": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4363": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4366": {
      "jump": "i",
      "op": "JUMP"
    },
    "4367": {
      "op": "JUMPDEST"
    },
    "4368": {
      "op": "DUP1"
    },
    "4369": {
      "op": "DUP3"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "DUP1"
    },
    "4372": {
      "op": "DUP3"
    },
    "4373": {
      "op": "GT"
    },
    "4374": {
      "op": "ISZERO"
    },
    "4375": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4378": {
      "op": "JUMPI"
    },
    "4379": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "4382": {
      "op": "PUSH2",
      "value": "0x10E6"
    },
    "4385": {
      "jump": "i",
      "op": "JUMP"
    },
    "4386": {
      "op": "JUMPDEST"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "op": "SUB"
    },
    "4395": {
      "op": "DUP6"
    },
    "4396": {
      "op": "DUP2"
    },
    "4397": {
      "op": "AND"
    },
    "4398": {
      "op": "DUP3"
    },
    "4399": {
      "op": "MSTORE"
    },
    "4400": {
      "op": "DUP5"
    },
    "4401": {
      "op": "AND"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4404": {
      "op": "DUP3"
    },
    "4405": {
      "op": "ADD"
    },
    "4406": {
      "op": "MSTORE"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4409": {
      "op": "DUP2"
    },
    "4410": {
      "op": "ADD"
    },
    "4411": {
      "op": "DUP4"
    },
    "4412": {
      "op": "SWAP1"
    },
    "4413": {
      "op": "MSTORE"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4418": {
      "op": "DUP3"
    },
    "4419": {
      "op": "ADD"
    },
    "4420": {
      "op": "DUP2"
    },
    "4421": {
      "op": "SWAP1"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4425": {
      "op": "SWAP1"
    },
    "4426": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4429": {
      "op": "SWAP1"
    },
    "4430": {
      "op": "DUP4"
    },
    "4431": {
      "op": "ADD"
    },
    "4432": {
      "op": "DUP5"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0xD3A"
    },
    "4436": {
      "jump": "i",
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "SWAP7"
    },
    "4439": {
      "op": "SWAP6"
    },
    "4440": {
      "op": "POP"
    },
    "4441": {
      "op": "POP"
    },
    "4442": {
      "op": "POP"
    },
    "4443": {
      "op": "POP"
    },
    "4444": {
      "op": "POP"
    },
    "4445": {
      "op": "POP"
    },
    "4446": {
      "jump": "o",
      "op": "JUMP"
    },
    "4447": {
      "op": "JUMPDEST"
    },
    "4448": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4452": {
      "op": "DUP3"
    },
    "4453": {
      "op": "DUP5"
    },
    "4454": {
      "op": "SUB"
    },
    "4455": {
      "op": "SLT"
    },
    "4456": {
      "op": "ISZERO"
    },
    "4457": {
      "op": "PUSH2",
      "value": "0x1171"
    },
    "4460": {
      "op": "JUMPI"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4463": {
      "op": "DUP1"
    },
    "4464": {
      "op": "REVERT"
    },
    "4465": {
      "op": "JUMPDEST"
    },
    "4466": {
      "op": "DUP2"
    },
    "4467": {
      "op": "MLOAD"
    },
    "4468": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "4471": {
      "op": "DUP2"
    },
    "4472": {
      "op": "PUSH2",
      "value": "0xCE3"
    },
    "4475": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "5814826230b0a5a33c62879a332cab72eba2b415",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n",
  "sourceMap": "628:16327:11:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:5;:13;1464:5;1456;:13;:::i;:::-;-1:-1:-1;1479:7:11;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;628:16327;;14:127:28;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:28;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:28;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:28;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:28;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:28;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:28:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:28;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:28;-1:-1:-1;;;;;;1405:32:28;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:28;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:28;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:28;;;3901:26;3852:89;-1:-1:-1;;2709:1:28;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:28;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:28;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:28;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:28:o;:::-;628:16327:11;;;;;;",
  "sourcePath": "/home/dk/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.1/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}